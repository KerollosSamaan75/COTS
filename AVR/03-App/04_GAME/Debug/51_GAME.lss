
51_GAME.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004d76  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005a  00800060  00004d76  00004dea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000037bc  00000000  00000000  00004e44  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000de1  00000000  00000000  00008600  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  000093e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00009521  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00009691  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000b2da  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000c1c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000cf74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000d0d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000d361  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000db2f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 e7       	ldi	r30, 0x76	; 118
      68:	fd e4       	ldi	r31, 0x4D	; 77
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 3b       	cpi	r26, 0xBA	; 186
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 bb 21 	call	0x4376	; 0x4376 <main>
      7a:	0c 94 b9 26 	jmp	0x4d72	; 0x4d72 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 82 26 	jmp	0x4d04	; 0x4d04 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a5 e8       	ldi	r26, 0x85	; 133
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 9e 26 	jmp	0x4d3c	; 0x4d3c <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 8e 26 	jmp	0x4d1c	; 0x4d1c <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 aa 26 	jmp	0x4d54	; 0x4d54 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 8e 26 	jmp	0x4d1c	; 0x4d1c <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 aa 26 	jmp	0x4d54	; 0x4d54 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 82 26 	jmp	0x4d04	; 0x4d04 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	85 e8       	ldi	r24, 0x85	; 133
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 9e 26 	jmp	0x4d3c	; 0x4d3c <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 8e 26 	jmp	0x4d1c	; 0x4d1c <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 aa 26 	jmp	0x4d54	; 0x4d54 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 8e 26 	jmp	0x4d1c	; 0x4d1c <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 aa 26 	jmp	0x4d54	; 0x4d54 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 8e 26 	jmp	0x4d1c	; 0x4d1c <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 aa 26 	jmp	0x4d54	; 0x4d54 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 92 26 	jmp	0x4d24	; 0x4d24 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 ae 26 	jmp	0x4d5c	; 0x4d5c <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_voidInit>:
#include "DIO_interface.h"
#include "DIO_private.h"
#include "DIO_config.h"

void DIO_voidInit(void)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
	/*Intial PINS Direction*/ 
	DIO_u8_DDRA_REG = CONC(DIO_u8_PA7_INTIAL_DIRECTION , DIO_u8_PA6_INTIAL_DIRECTION , DIO_u8_PA5_INTIAL_DIRECTION ,  DIO_u8_PA4_INTIAL_DIRECTION, 
     b3e:	ea e3       	ldi	r30, 0x3A	; 58
     b40:	f0 e0       	ldi	r31, 0x00	; 0
     b42:	8f ef       	ldi	r24, 0xFF	; 255
     b44:	80 83       	st	Z, r24
	                       DIO_u8_PA3_INTIAL_DIRECTION , DIO_u8_PA2_INTIAL_DIRECTION , DIO_u8_PA1_INTIAL_DIRECTION ,  DIO_u8_PA0_INTIAL_DIRECTION );
    
	DIO_u8_DDRB_REG = CONC(DIO_u8_PB7_INTIAL_DIRECTION , DIO_u8_PB6_INTIAL_DIRECTION , DIO_u8_PB5_INTIAL_DIRECTION ,  DIO_u8_PB4_INTIAL_DIRECTION , 
     b46:	e7 e3       	ldi	r30, 0x37	; 55
     b48:	f0 e0       	ldi	r31, 0x00	; 0
     b4a:	8f ef       	ldi	r24, 0xFF	; 255
     b4c:	80 83       	st	Z, r24
			               DIO_u8_PB3_INTIAL_DIRECTION , DIO_u8_PB2_INTIAL_DIRECTION , DIO_u8_PB1_INTIAL_DIRECTION ,  DIO_u8_PB0_INTIAL_DIRECTION );
						   
	DIO_u8_DDRC_REG = CONC(DIO_u8_PC7_INTIAL_DIRECTION , DIO_u8_PC6_INTIAL_DIRECTION , DIO_u8_PC5_INTIAL_DIRECTION ,  DIO_u8_PC4_INTIAL_DIRECTION ,
     b4e:	e4 e3       	ldi	r30, 0x34	; 52
     b50:	f0 e0       	ldi	r31, 0x00	; 0
     b52:	8c e3       	ldi	r24, 0x3C	; 60
     b54:	80 83       	st	Z, r24
			               DIO_u8_PC3_INTIAL_DIRECTION , DIO_u8_PC2_INTIAL_DIRECTION , DIO_u8_PC1_INTIAL_DIRECTION ,  DIO_u8_PC0_INTIAL_DIRECTION );
						   
	DIO_u8_DDRD_REG = CONC(DIO_u8_PD7_INTIAL_DIRECTION , DIO_u8_PD6_INTIAL_DIRECTION , DIO_u8_PD5_INTIAL_DIRECTION ,  DIO_u8_PD4_INTIAL_DIRECTION , 
     b56:	e1 e3       	ldi	r30, 0x31	; 49
     b58:	f0 e0       	ldi	r31, 0x00	; 0
     b5a:	10 82       	st	Z, r1
			               DIO_u8_PD3_INTIAL_DIRECTION , DIO_u8_PD2_INTIAL_DIRECTION , DIO_u8_PD1_INTIAL_DIRECTION ,  DIO_u8_PD0_INTIAL_DIRECTION );
						  
						  
	/*Intial PINS Value*/
    DIO_u8_PORTA_REG = CONC(DIO_u8_PA7_INTIAL_VALUE         , DIO_u8_PA6_INTIAL_VALUE     , DIO_u8_PA5_INTIAL_VALUE ,      DIO_u8_PA4_INTIAL_VALUE , 
     b5c:	eb e3       	ldi	r30, 0x3B	; 59
     b5e:	f0 e0       	ldi	r31, 0x00	; 0
     b60:	10 82       	st	Z, r1
				            DIO_u8_PA3_INTIAL_VALUE         , DIO_u8_PA2_INTIAL_VALUE     , DIO_u8_PA1_INTIAL_VALUE ,      DIO_u8_PA0_INTIAL_VALUE);                  
                                                                                   
	DIO_u8_PORTB_REG = CONC(DIO_u8_PB7_INTIAL_VALUE         , DIO_u8_PB6_INTIAL_VALUE     , DIO_u8_PB5_INTIAL_VALUE ,      DIO_u8_PB4_INTIAL_VALUE ,
     b62:	e8 e3       	ldi	r30, 0x38	; 56
     b64:	f0 e0       	ldi	r31, 0x00	; 0
     b66:	87 e1       	ldi	r24, 0x17	; 23
     b68:	80 83       	st	Z, r24
				            DIO_u8_PB3_INTIAL_VALUE         , DIO_u8_PB2_INTIAL_VALUE     , DIO_u8_PB1_INTIAL_VALUE ,      DIO_u8_PB0_INTIAL_VALUE);                  
					                                                                  
	DIO_u8_PORTC_REG = CONC(DIO_u8_PC7_INTIAL_VALUE         , DIO_u8_PC6_INTIAL_VALUE     , DIO_u8_PC5_INTIAL_VALUE ,      DIO_u8_PC4_INTIAL_VALUE , 
     b6a:	e5 e3       	ldi	r30, 0x35	; 53
     b6c:	f0 e0       	ldi	r31, 0x00	; 0
     b6e:	8c e3       	ldi	r24, 0x3C	; 60
     b70:	80 83       	st	Z, r24
				            DIO_u8_PC3_INTIAL_VALUE         , DIO_u8_PC2_INTIAL_VALUE     , DIO_u8_PC1_INTIAL_VALUE ,      DIO_u8_PC0_INTIAL_VALUE);                  
					                                                                 
	DIO_u8_PORTD_REG = CONC(DIO_u8_PD7_INTIAL_VALUE         , DIO_u8_PD6_INTIAL_VALUE     , DIO_u8_PD5_INTIAL_VALUE ,      DIO_u8_PD4_INTIAL_VALUE , 
     b72:	e2 e3       	ldi	r30, 0x32	; 50
     b74:	f0 e0       	ldi	r31, 0x00	; 0
     b76:	88 ee       	ldi	r24, 0xE8	; 232
     b78:	80 83       	st	Z, r24
				            DIO_u8_PD3_INTIAL_VALUE         , DIO_u8_PD2_INTIAL_VALUE     , DIO_u8_PD1_INTIAL_VALUE ,      DIO_u8_PD0_INTIAL_VALUE);
						                                               
						   
}
     b7a:	cf 91       	pop	r28
     b7c:	df 91       	pop	r29
     b7e:	08 95       	ret

00000b80 <DIO_u8SetPinDirection>:

u8 DIO_u8SetPinDirection(u8 Copy_u8PortId, u8 Copy_u8PinId, u8 Copy_PinDirection)
{
     b80:	df 93       	push	r29
     b82:	cf 93       	push	r28
     b84:	cd b7       	in	r28, 0x3d	; 61
     b86:	de b7       	in	r29, 0x3e	; 62
     b88:	2e 97       	sbiw	r28, 0x0e	; 14
     b8a:	0f b6       	in	r0, 0x3f	; 63
     b8c:	f8 94       	cli
     b8e:	de bf       	out	0x3e, r29	; 62
     b90:	0f be       	out	0x3f, r0	; 63
     b92:	cd bf       	out	0x3d, r28	; 61
     b94:	8a 83       	std	Y+2, r24	; 0x02
     b96:	6b 83       	std	Y+3, r22	; 0x03
     b98:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState = STD_TYPES_OK;
     b9a:	81 e0       	ldi	r24, 0x01	; 1
     b9c:	89 83       	std	Y+1, r24	; 0x01
	if((Copy_u8PortId <=  DIO_u8_PORTD)&&(Copy_u8PinId <= DIO_u8_PIN7)&&((Copy_PinDirection == DIO_u8_OUTPUT)||(Copy_PinDirection == DIO_u8_INPUT)))
     b9e:	8a 81       	ldd	r24, Y+2	; 0x02
     ba0:	84 30       	cpi	r24, 0x04	; 4
     ba2:	08 f0       	brcs	.+2      	; 0xba6 <DIO_u8SetPinDirection+0x26>
     ba4:	0c c1       	rjmp	.+536    	; 0xdbe <DIO_u8SetPinDirection+0x23e>
     ba6:	8b 81       	ldd	r24, Y+3	; 0x03
     ba8:	88 30       	cpi	r24, 0x08	; 8
     baa:	08 f0       	brcs	.+2      	; 0xbae <DIO_u8SetPinDirection+0x2e>
     bac:	08 c1       	rjmp	.+528    	; 0xdbe <DIO_u8SetPinDirection+0x23e>
     bae:	8c 81       	ldd	r24, Y+4	; 0x04
     bb0:	81 30       	cpi	r24, 0x01	; 1
     bb2:	21 f0       	breq	.+8      	; 0xbbc <DIO_u8SetPinDirection+0x3c>
     bb4:	8c 81       	ldd	r24, Y+4	; 0x04
     bb6:	88 23       	and	r24, r24
     bb8:	09 f0       	breq	.+2      	; 0xbbc <DIO_u8SetPinDirection+0x3c>
     bba:	01 c1       	rjmp	.+514    	; 0xdbe <DIO_u8SetPinDirection+0x23e>
	{
		switch(Copy_u8PortId)
     bbc:	8a 81       	ldd	r24, Y+2	; 0x02
     bbe:	28 2f       	mov	r18, r24
     bc0:	30 e0       	ldi	r19, 0x00	; 0
     bc2:	3e 87       	std	Y+14, r19	; 0x0e
     bc4:	2d 87       	std	Y+13, r18	; 0x0d
     bc6:	8d 85       	ldd	r24, Y+13	; 0x0d
     bc8:	9e 85       	ldd	r25, Y+14	; 0x0e
     bca:	81 30       	cpi	r24, 0x01	; 1
     bcc:	91 05       	cpc	r25, r1
     bce:	09 f4       	brne	.+2      	; 0xbd2 <DIO_u8SetPinDirection+0x52>
     bd0:	4f c0       	rjmp	.+158    	; 0xc70 <DIO_u8SetPinDirection+0xf0>
     bd2:	2d 85       	ldd	r18, Y+13	; 0x0d
     bd4:	3e 85       	ldd	r19, Y+14	; 0x0e
     bd6:	22 30       	cpi	r18, 0x02	; 2
     bd8:	31 05       	cpc	r19, r1
     bda:	2c f4       	brge	.+10     	; 0xbe6 <DIO_u8SetPinDirection+0x66>
     bdc:	8d 85       	ldd	r24, Y+13	; 0x0d
     bde:	9e 85       	ldd	r25, Y+14	; 0x0e
     be0:	00 97       	sbiw	r24, 0x00	; 0
     be2:	71 f0       	breq	.+28     	; 0xc00 <DIO_u8SetPinDirection+0x80>
     be4:	ed c0       	rjmp	.+474    	; 0xdc0 <DIO_u8SetPinDirection+0x240>
     be6:	2d 85       	ldd	r18, Y+13	; 0x0d
     be8:	3e 85       	ldd	r19, Y+14	; 0x0e
     bea:	22 30       	cpi	r18, 0x02	; 2
     bec:	31 05       	cpc	r19, r1
     bee:	09 f4       	brne	.+2      	; 0xbf2 <DIO_u8SetPinDirection+0x72>
     bf0:	77 c0       	rjmp	.+238    	; 0xce0 <DIO_u8SetPinDirection+0x160>
     bf2:	8d 85       	ldd	r24, Y+13	; 0x0d
     bf4:	9e 85       	ldd	r25, Y+14	; 0x0e
     bf6:	83 30       	cpi	r24, 0x03	; 3
     bf8:	91 05       	cpc	r25, r1
     bfa:	09 f4       	brne	.+2      	; 0xbfe <DIO_u8SetPinDirection+0x7e>
     bfc:	a9 c0       	rjmp	.+338    	; 0xd50 <DIO_u8SetPinDirection+0x1d0>
     bfe:	e0 c0       	rjmp	.+448    	; 0xdc0 <DIO_u8SetPinDirection+0x240>
		{
			case DIO_u8_PORTA:
				switch(Copy_PinDirection)
     c00:	8c 81       	ldd	r24, Y+4	; 0x04
     c02:	28 2f       	mov	r18, r24
     c04:	30 e0       	ldi	r19, 0x00	; 0
     c06:	3c 87       	std	Y+12, r19	; 0x0c
     c08:	2b 87       	std	Y+11, r18	; 0x0b
     c0a:	8b 85       	ldd	r24, Y+11	; 0x0b
     c0c:	9c 85       	ldd	r25, Y+12	; 0x0c
     c0e:	00 97       	sbiw	r24, 0x00	; 0
     c10:	d1 f0       	breq	.+52     	; 0xc46 <DIO_u8SetPinDirection+0xc6>
     c12:	2b 85       	ldd	r18, Y+11	; 0x0b
     c14:	3c 85       	ldd	r19, Y+12	; 0x0c
     c16:	21 30       	cpi	r18, 0x01	; 1
     c18:	31 05       	cpc	r19, r1
     c1a:	09 f0       	breq	.+2      	; 0xc1e <DIO_u8SetPinDirection+0x9e>
     c1c:	d1 c0       	rjmp	.+418    	; 0xdc0 <DIO_u8SetPinDirection+0x240>
				{
					case DIO_u8_OUTPUT: SET_BIT(DIO_u8_DDRA_REG,Copy_u8PinId); break;
     c1e:	aa e3       	ldi	r26, 0x3A	; 58
     c20:	b0 e0       	ldi	r27, 0x00	; 0
     c22:	ea e3       	ldi	r30, 0x3A	; 58
     c24:	f0 e0       	ldi	r31, 0x00	; 0
     c26:	80 81       	ld	r24, Z
     c28:	48 2f       	mov	r20, r24
     c2a:	8b 81       	ldd	r24, Y+3	; 0x03
     c2c:	28 2f       	mov	r18, r24
     c2e:	30 e0       	ldi	r19, 0x00	; 0
     c30:	81 e0       	ldi	r24, 0x01	; 1
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	02 2e       	mov	r0, r18
     c36:	02 c0       	rjmp	.+4      	; 0xc3c <DIO_u8SetPinDirection+0xbc>
     c38:	88 0f       	add	r24, r24
     c3a:	99 1f       	adc	r25, r25
     c3c:	0a 94       	dec	r0
     c3e:	e2 f7       	brpl	.-8      	; 0xc38 <DIO_u8SetPinDirection+0xb8>
     c40:	84 2b       	or	r24, r20
     c42:	8c 93       	st	X, r24
     c44:	bd c0       	rjmp	.+378    	; 0xdc0 <DIO_u8SetPinDirection+0x240>
					case DIO_u8_INPUT : CLR_BIT(DIO_u8_DDRA_REG,Copy_u8PinId); break;
     c46:	aa e3       	ldi	r26, 0x3A	; 58
     c48:	b0 e0       	ldi	r27, 0x00	; 0
     c4a:	ea e3       	ldi	r30, 0x3A	; 58
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	80 81       	ld	r24, Z
     c50:	48 2f       	mov	r20, r24
     c52:	8b 81       	ldd	r24, Y+3	; 0x03
     c54:	28 2f       	mov	r18, r24
     c56:	30 e0       	ldi	r19, 0x00	; 0
     c58:	81 e0       	ldi	r24, 0x01	; 1
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	02 2e       	mov	r0, r18
     c5e:	02 c0       	rjmp	.+4      	; 0xc64 <DIO_u8SetPinDirection+0xe4>
     c60:	88 0f       	add	r24, r24
     c62:	99 1f       	adc	r25, r25
     c64:	0a 94       	dec	r0
     c66:	e2 f7       	brpl	.-8      	; 0xc60 <DIO_u8SetPinDirection+0xe0>
     c68:	80 95       	com	r24
     c6a:	84 23       	and	r24, r20
     c6c:	8c 93       	st	X, r24
     c6e:	a8 c0       	rjmp	.+336    	; 0xdc0 <DIO_u8SetPinDirection+0x240>
				}
			break;
			
			case DIO_u8_PORTB:
				switch(Copy_PinDirection)
     c70:	8c 81       	ldd	r24, Y+4	; 0x04
     c72:	28 2f       	mov	r18, r24
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	3a 87       	std	Y+10, r19	; 0x0a
     c78:	29 87       	std	Y+9, r18	; 0x09
     c7a:	89 85       	ldd	r24, Y+9	; 0x09
     c7c:	9a 85       	ldd	r25, Y+10	; 0x0a
     c7e:	00 97       	sbiw	r24, 0x00	; 0
     c80:	d1 f0       	breq	.+52     	; 0xcb6 <DIO_u8SetPinDirection+0x136>
     c82:	29 85       	ldd	r18, Y+9	; 0x09
     c84:	3a 85       	ldd	r19, Y+10	; 0x0a
     c86:	21 30       	cpi	r18, 0x01	; 1
     c88:	31 05       	cpc	r19, r1
     c8a:	09 f0       	breq	.+2      	; 0xc8e <DIO_u8SetPinDirection+0x10e>
     c8c:	99 c0       	rjmp	.+306    	; 0xdc0 <DIO_u8SetPinDirection+0x240>
				{
					case DIO_u8_OUTPUT: SET_BIT(DIO_u8_DDRB_REG,Copy_u8PinId); break;
     c8e:	a7 e3       	ldi	r26, 0x37	; 55
     c90:	b0 e0       	ldi	r27, 0x00	; 0
     c92:	e7 e3       	ldi	r30, 0x37	; 55
     c94:	f0 e0       	ldi	r31, 0x00	; 0
     c96:	80 81       	ld	r24, Z
     c98:	48 2f       	mov	r20, r24
     c9a:	8b 81       	ldd	r24, Y+3	; 0x03
     c9c:	28 2f       	mov	r18, r24
     c9e:	30 e0       	ldi	r19, 0x00	; 0
     ca0:	81 e0       	ldi	r24, 0x01	; 1
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	02 2e       	mov	r0, r18
     ca6:	02 c0       	rjmp	.+4      	; 0xcac <DIO_u8SetPinDirection+0x12c>
     ca8:	88 0f       	add	r24, r24
     caa:	99 1f       	adc	r25, r25
     cac:	0a 94       	dec	r0
     cae:	e2 f7       	brpl	.-8      	; 0xca8 <DIO_u8SetPinDirection+0x128>
     cb0:	84 2b       	or	r24, r20
     cb2:	8c 93       	st	X, r24
     cb4:	85 c0       	rjmp	.+266    	; 0xdc0 <DIO_u8SetPinDirection+0x240>
					case DIO_u8_INPUT : CLR_BIT(DIO_u8_DDRB_REG,Copy_u8PinId); break;
     cb6:	a7 e3       	ldi	r26, 0x37	; 55
     cb8:	b0 e0       	ldi	r27, 0x00	; 0
     cba:	e7 e3       	ldi	r30, 0x37	; 55
     cbc:	f0 e0       	ldi	r31, 0x00	; 0
     cbe:	80 81       	ld	r24, Z
     cc0:	48 2f       	mov	r20, r24
     cc2:	8b 81       	ldd	r24, Y+3	; 0x03
     cc4:	28 2f       	mov	r18, r24
     cc6:	30 e0       	ldi	r19, 0x00	; 0
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	02 2e       	mov	r0, r18
     cce:	02 c0       	rjmp	.+4      	; 0xcd4 <DIO_u8SetPinDirection+0x154>
     cd0:	88 0f       	add	r24, r24
     cd2:	99 1f       	adc	r25, r25
     cd4:	0a 94       	dec	r0
     cd6:	e2 f7       	brpl	.-8      	; 0xcd0 <DIO_u8SetPinDirection+0x150>
     cd8:	80 95       	com	r24
     cda:	84 23       	and	r24, r20
     cdc:	8c 93       	st	X, r24
     cde:	70 c0       	rjmp	.+224    	; 0xdc0 <DIO_u8SetPinDirection+0x240>
				}
			break;
			
			case DIO_u8_PORTC:
				switch(Copy_PinDirection)
     ce0:	8c 81       	ldd	r24, Y+4	; 0x04
     ce2:	28 2f       	mov	r18, r24
     ce4:	30 e0       	ldi	r19, 0x00	; 0
     ce6:	38 87       	std	Y+8, r19	; 0x08
     ce8:	2f 83       	std	Y+7, r18	; 0x07
     cea:	8f 81       	ldd	r24, Y+7	; 0x07
     cec:	98 85       	ldd	r25, Y+8	; 0x08
     cee:	00 97       	sbiw	r24, 0x00	; 0
     cf0:	d1 f0       	breq	.+52     	; 0xd26 <DIO_u8SetPinDirection+0x1a6>
     cf2:	2f 81       	ldd	r18, Y+7	; 0x07
     cf4:	38 85       	ldd	r19, Y+8	; 0x08
     cf6:	21 30       	cpi	r18, 0x01	; 1
     cf8:	31 05       	cpc	r19, r1
     cfa:	09 f0       	breq	.+2      	; 0xcfe <DIO_u8SetPinDirection+0x17e>
     cfc:	61 c0       	rjmp	.+194    	; 0xdc0 <DIO_u8SetPinDirection+0x240>
				{
					case DIO_u8_OUTPUT: SET_BIT(DIO_u8_DDRC_REG,Copy_u8PinId); break;
     cfe:	a4 e3       	ldi	r26, 0x34	; 52
     d00:	b0 e0       	ldi	r27, 0x00	; 0
     d02:	e4 e3       	ldi	r30, 0x34	; 52
     d04:	f0 e0       	ldi	r31, 0x00	; 0
     d06:	80 81       	ld	r24, Z
     d08:	48 2f       	mov	r20, r24
     d0a:	8b 81       	ldd	r24, Y+3	; 0x03
     d0c:	28 2f       	mov	r18, r24
     d0e:	30 e0       	ldi	r19, 0x00	; 0
     d10:	81 e0       	ldi	r24, 0x01	; 1
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	02 2e       	mov	r0, r18
     d16:	02 c0       	rjmp	.+4      	; 0xd1c <DIO_u8SetPinDirection+0x19c>
     d18:	88 0f       	add	r24, r24
     d1a:	99 1f       	adc	r25, r25
     d1c:	0a 94       	dec	r0
     d1e:	e2 f7       	brpl	.-8      	; 0xd18 <DIO_u8SetPinDirection+0x198>
     d20:	84 2b       	or	r24, r20
     d22:	8c 93       	st	X, r24
     d24:	4d c0       	rjmp	.+154    	; 0xdc0 <DIO_u8SetPinDirection+0x240>
					case DIO_u8_INPUT : CLR_BIT(DIO_u8_DDRC_REG,Copy_u8PinId); break;
     d26:	a4 e3       	ldi	r26, 0x34	; 52
     d28:	b0 e0       	ldi	r27, 0x00	; 0
     d2a:	e4 e3       	ldi	r30, 0x34	; 52
     d2c:	f0 e0       	ldi	r31, 0x00	; 0
     d2e:	80 81       	ld	r24, Z
     d30:	48 2f       	mov	r20, r24
     d32:	8b 81       	ldd	r24, Y+3	; 0x03
     d34:	28 2f       	mov	r18, r24
     d36:	30 e0       	ldi	r19, 0x00	; 0
     d38:	81 e0       	ldi	r24, 0x01	; 1
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	02 2e       	mov	r0, r18
     d3e:	02 c0       	rjmp	.+4      	; 0xd44 <DIO_u8SetPinDirection+0x1c4>
     d40:	88 0f       	add	r24, r24
     d42:	99 1f       	adc	r25, r25
     d44:	0a 94       	dec	r0
     d46:	e2 f7       	brpl	.-8      	; 0xd40 <DIO_u8SetPinDirection+0x1c0>
     d48:	80 95       	com	r24
     d4a:	84 23       	and	r24, r20
     d4c:	8c 93       	st	X, r24
     d4e:	38 c0       	rjmp	.+112    	; 0xdc0 <DIO_u8SetPinDirection+0x240>
				}
			break;
			
			case DIO_u8_PORTD:
				switch(Copy_PinDirection)
     d50:	8c 81       	ldd	r24, Y+4	; 0x04
     d52:	28 2f       	mov	r18, r24
     d54:	30 e0       	ldi	r19, 0x00	; 0
     d56:	3e 83       	std	Y+6, r19	; 0x06
     d58:	2d 83       	std	Y+5, r18	; 0x05
     d5a:	8d 81       	ldd	r24, Y+5	; 0x05
     d5c:	9e 81       	ldd	r25, Y+6	; 0x06
     d5e:	00 97       	sbiw	r24, 0x00	; 0
     d60:	c9 f0       	breq	.+50     	; 0xd94 <DIO_u8SetPinDirection+0x214>
     d62:	2d 81       	ldd	r18, Y+5	; 0x05
     d64:	3e 81       	ldd	r19, Y+6	; 0x06
     d66:	21 30       	cpi	r18, 0x01	; 1
     d68:	31 05       	cpc	r19, r1
     d6a:	51 f5       	brne	.+84     	; 0xdc0 <DIO_u8SetPinDirection+0x240>
				{
					case DIO_u8_OUTPUT: SET_BIT(DIO_u8_DDRD_REG,Copy_u8PinId); break;
     d6c:	a1 e3       	ldi	r26, 0x31	; 49
     d6e:	b0 e0       	ldi	r27, 0x00	; 0
     d70:	e1 e3       	ldi	r30, 0x31	; 49
     d72:	f0 e0       	ldi	r31, 0x00	; 0
     d74:	80 81       	ld	r24, Z
     d76:	48 2f       	mov	r20, r24
     d78:	8b 81       	ldd	r24, Y+3	; 0x03
     d7a:	28 2f       	mov	r18, r24
     d7c:	30 e0       	ldi	r19, 0x00	; 0
     d7e:	81 e0       	ldi	r24, 0x01	; 1
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	02 2e       	mov	r0, r18
     d84:	02 c0       	rjmp	.+4      	; 0xd8a <DIO_u8SetPinDirection+0x20a>
     d86:	88 0f       	add	r24, r24
     d88:	99 1f       	adc	r25, r25
     d8a:	0a 94       	dec	r0
     d8c:	e2 f7       	brpl	.-8      	; 0xd86 <DIO_u8SetPinDirection+0x206>
     d8e:	84 2b       	or	r24, r20
     d90:	8c 93       	st	X, r24
     d92:	16 c0       	rjmp	.+44     	; 0xdc0 <DIO_u8SetPinDirection+0x240>
					case DIO_u8_INPUT : CLR_BIT(DIO_u8_DDRD_REG,Copy_u8PinId); break;
     d94:	a1 e3       	ldi	r26, 0x31	; 49
     d96:	b0 e0       	ldi	r27, 0x00	; 0
     d98:	e1 e3       	ldi	r30, 0x31	; 49
     d9a:	f0 e0       	ldi	r31, 0x00	; 0
     d9c:	80 81       	ld	r24, Z
     d9e:	48 2f       	mov	r20, r24
     da0:	8b 81       	ldd	r24, Y+3	; 0x03
     da2:	28 2f       	mov	r18, r24
     da4:	30 e0       	ldi	r19, 0x00	; 0
     da6:	81 e0       	ldi	r24, 0x01	; 1
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	02 2e       	mov	r0, r18
     dac:	02 c0       	rjmp	.+4      	; 0xdb2 <DIO_u8SetPinDirection+0x232>
     dae:	88 0f       	add	r24, r24
     db0:	99 1f       	adc	r25, r25
     db2:	0a 94       	dec	r0
     db4:	e2 f7       	brpl	.-8      	; 0xdae <DIO_u8SetPinDirection+0x22e>
     db6:	80 95       	com	r24
     db8:	84 23       	and	r24, r20
     dba:	8c 93       	st	X, r24
     dbc:	01 c0       	rjmp	.+2      	; 0xdc0 <DIO_u8SetPinDirection+0x240>
			
		}
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
     dbe:	19 82       	std	Y+1, r1	; 0x01
	}

	
	return Local_u8ErrorState;
     dc0:	89 81       	ldd	r24, Y+1	; 0x01
}
     dc2:	2e 96       	adiw	r28, 0x0e	; 14
     dc4:	0f b6       	in	r0, 0x3f	; 63
     dc6:	f8 94       	cli
     dc8:	de bf       	out	0x3e, r29	; 62
     dca:	0f be       	out	0x3f, r0	; 63
     dcc:	cd bf       	out	0x3d, r28	; 61
     dce:	cf 91       	pop	r28
     dd0:	df 91       	pop	r29
     dd2:	08 95       	ret

00000dd4 <DIO_u8SetPinValue>:

u8 DIO_u8SetPinValue(u8 Copy_u8PortId, u8 Copy_u8PinId, u8 Copy_PinValue)
{
     dd4:	df 93       	push	r29
     dd6:	cf 93       	push	r28
     dd8:	cd b7       	in	r28, 0x3d	; 61
     dda:	de b7       	in	r29, 0x3e	; 62
     ddc:	2e 97       	sbiw	r28, 0x0e	; 14
     dde:	0f b6       	in	r0, 0x3f	; 63
     de0:	f8 94       	cli
     de2:	de bf       	out	0x3e, r29	; 62
     de4:	0f be       	out	0x3f, r0	; 63
     de6:	cd bf       	out	0x3d, r28	; 61
     de8:	8a 83       	std	Y+2, r24	; 0x02
     dea:	6b 83       	std	Y+3, r22	; 0x03
     dec:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState = STD_TYPES_OK;
     dee:	81 e0       	ldi	r24, 0x01	; 1
     df0:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8PinId <= DIO_u8_PIN7)
     df2:	8b 81       	ldd	r24, Y+3	; 0x03
     df4:	88 30       	cpi	r24, 0x08	; 8
     df6:	08 f0       	brcs	.+2      	; 0xdfa <DIO_u8SetPinValue+0x26>
     df8:	08 c1       	rjmp	.+528    	; 0x100a <DIO_u8SetPinValue+0x236>
	{
		switch (Copy_u8PortId)
     dfa:	8a 81       	ldd	r24, Y+2	; 0x02
     dfc:	28 2f       	mov	r18, r24
     dfe:	30 e0       	ldi	r19, 0x00	; 0
     e00:	3e 87       	std	Y+14, r19	; 0x0e
     e02:	2d 87       	std	Y+13, r18	; 0x0d
     e04:	8d 85       	ldd	r24, Y+13	; 0x0d
     e06:	9e 85       	ldd	r25, Y+14	; 0x0e
     e08:	81 30       	cpi	r24, 0x01	; 1
     e0a:	91 05       	cpc	r25, r1
     e0c:	09 f4       	brne	.+2      	; 0xe10 <DIO_u8SetPinValue+0x3c>
     e0e:	50 c0       	rjmp	.+160    	; 0xeb0 <DIO_u8SetPinValue+0xdc>
     e10:	2d 85       	ldd	r18, Y+13	; 0x0d
     e12:	3e 85       	ldd	r19, Y+14	; 0x0e
     e14:	22 30       	cpi	r18, 0x02	; 2
     e16:	31 05       	cpc	r19, r1
     e18:	2c f4       	brge	.+10     	; 0xe24 <DIO_u8SetPinValue+0x50>
     e1a:	8d 85       	ldd	r24, Y+13	; 0x0d
     e1c:	9e 85       	ldd	r25, Y+14	; 0x0e
     e1e:	00 97       	sbiw	r24, 0x00	; 0
     e20:	71 f0       	breq	.+28     	; 0xe3e <DIO_u8SetPinValue+0x6a>
     e22:	f1 c0       	rjmp	.+482    	; 0x1006 <DIO_u8SetPinValue+0x232>
     e24:	2d 85       	ldd	r18, Y+13	; 0x0d
     e26:	3e 85       	ldd	r19, Y+14	; 0x0e
     e28:	22 30       	cpi	r18, 0x02	; 2
     e2a:	31 05       	cpc	r19, r1
     e2c:	09 f4       	brne	.+2      	; 0xe30 <DIO_u8SetPinValue+0x5c>
     e2e:	79 c0       	rjmp	.+242    	; 0xf22 <DIO_u8SetPinValue+0x14e>
     e30:	8d 85       	ldd	r24, Y+13	; 0x0d
     e32:	9e 85       	ldd	r25, Y+14	; 0x0e
     e34:	83 30       	cpi	r24, 0x03	; 3
     e36:	91 05       	cpc	r25, r1
     e38:	09 f4       	brne	.+2      	; 0xe3c <DIO_u8SetPinValue+0x68>
     e3a:	ac c0       	rjmp	.+344    	; 0xf94 <DIO_u8SetPinValue+0x1c0>
     e3c:	e4 c0       	rjmp	.+456    	; 0x1006 <DIO_u8SetPinValue+0x232>
			{
				case DIO_u8_PORTA:
					switch (Copy_PinValue)
     e3e:	8c 81       	ldd	r24, Y+4	; 0x04
     e40:	28 2f       	mov	r18, r24
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	3c 87       	std	Y+12, r19	; 0x0c
     e46:	2b 87       	std	Y+11, r18	; 0x0b
     e48:	8b 85       	ldd	r24, Y+11	; 0x0b
     e4a:	9c 85       	ldd	r25, Y+12	; 0x0c
     e4c:	00 97       	sbiw	r24, 0x00	; 0
     e4e:	c9 f0       	breq	.+50     	; 0xe82 <DIO_u8SetPinValue+0xae>
     e50:	2b 85       	ldd	r18, Y+11	; 0x0b
     e52:	3c 85       	ldd	r19, Y+12	; 0x0c
     e54:	21 30       	cpi	r18, 0x01	; 1
     e56:	31 05       	cpc	r19, r1
     e58:	49 f5       	brne	.+82     	; 0xeac <DIO_u8SetPinValue+0xd8>
					{
						case DIO_u8_HIGH: SET_BIT(DIO_u8_PORTA_REG,Copy_u8PinId); break;
     e5a:	ab e3       	ldi	r26, 0x3B	; 59
     e5c:	b0 e0       	ldi	r27, 0x00	; 0
     e5e:	eb e3       	ldi	r30, 0x3B	; 59
     e60:	f0 e0       	ldi	r31, 0x00	; 0
     e62:	80 81       	ld	r24, Z
     e64:	48 2f       	mov	r20, r24
     e66:	8b 81       	ldd	r24, Y+3	; 0x03
     e68:	28 2f       	mov	r18, r24
     e6a:	30 e0       	ldi	r19, 0x00	; 0
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	02 2e       	mov	r0, r18
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <DIO_u8SetPinValue+0xa4>
     e74:	88 0f       	add	r24, r24
     e76:	99 1f       	adc	r25, r25
     e78:	0a 94       	dec	r0
     e7a:	e2 f7       	brpl	.-8      	; 0xe74 <DIO_u8SetPinValue+0xa0>
     e7c:	84 2b       	or	r24, r20
     e7e:	8c 93       	st	X, r24
     e80:	c5 c0       	rjmp	.+394    	; 0x100c <DIO_u8SetPinValue+0x238>
						case DIO_u8_LOW : CLR_BIT(DIO_u8_PORTA_REG,Copy_u8PinId); break;
     e82:	ab e3       	ldi	r26, 0x3B	; 59
     e84:	b0 e0       	ldi	r27, 0x00	; 0
     e86:	eb e3       	ldi	r30, 0x3B	; 59
     e88:	f0 e0       	ldi	r31, 0x00	; 0
     e8a:	80 81       	ld	r24, Z
     e8c:	48 2f       	mov	r20, r24
     e8e:	8b 81       	ldd	r24, Y+3	; 0x03
     e90:	28 2f       	mov	r18, r24
     e92:	30 e0       	ldi	r19, 0x00	; 0
     e94:	81 e0       	ldi	r24, 0x01	; 1
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	02 2e       	mov	r0, r18
     e9a:	02 c0       	rjmp	.+4      	; 0xea0 <DIO_u8SetPinValue+0xcc>
     e9c:	88 0f       	add	r24, r24
     e9e:	99 1f       	adc	r25, r25
     ea0:	0a 94       	dec	r0
     ea2:	e2 f7       	brpl	.-8      	; 0xe9c <DIO_u8SetPinValue+0xc8>
     ea4:	80 95       	com	r24
     ea6:	84 23       	and	r24, r20
     ea8:	8c 93       	st	X, r24
     eaa:	b0 c0       	rjmp	.+352    	; 0x100c <DIO_u8SetPinValue+0x238>
						default         : Local_u8ErrorState = STD_TYPES_NOK;
     eac:	19 82       	std	Y+1, r1	; 0x01
     eae:	ae c0       	rjmp	.+348    	; 0x100c <DIO_u8SetPinValue+0x238>
					}
				break;
				
				case DIO_u8_PORTB:
					switch (Copy_PinValue)
     eb0:	8c 81       	ldd	r24, Y+4	; 0x04
     eb2:	28 2f       	mov	r18, r24
     eb4:	30 e0       	ldi	r19, 0x00	; 0
     eb6:	3a 87       	std	Y+10, r19	; 0x0a
     eb8:	29 87       	std	Y+9, r18	; 0x09
     eba:	89 85       	ldd	r24, Y+9	; 0x09
     ebc:	9a 85       	ldd	r25, Y+10	; 0x0a
     ebe:	00 97       	sbiw	r24, 0x00	; 0
     ec0:	c9 f0       	breq	.+50     	; 0xef4 <DIO_u8SetPinValue+0x120>
     ec2:	29 85       	ldd	r18, Y+9	; 0x09
     ec4:	3a 85       	ldd	r19, Y+10	; 0x0a
     ec6:	21 30       	cpi	r18, 0x01	; 1
     ec8:	31 05       	cpc	r19, r1
     eca:	49 f5       	brne	.+82     	; 0xf1e <DIO_u8SetPinValue+0x14a>
					{
						case DIO_u8_HIGH: SET_BIT(DIO_u8_PORTB_REG,Copy_u8PinId); break;
     ecc:	a8 e3       	ldi	r26, 0x38	; 56
     ece:	b0 e0       	ldi	r27, 0x00	; 0
     ed0:	e8 e3       	ldi	r30, 0x38	; 56
     ed2:	f0 e0       	ldi	r31, 0x00	; 0
     ed4:	80 81       	ld	r24, Z
     ed6:	48 2f       	mov	r20, r24
     ed8:	8b 81       	ldd	r24, Y+3	; 0x03
     eda:	28 2f       	mov	r18, r24
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	81 e0       	ldi	r24, 0x01	; 1
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	02 2e       	mov	r0, r18
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <DIO_u8SetPinValue+0x116>
     ee6:	88 0f       	add	r24, r24
     ee8:	99 1f       	adc	r25, r25
     eea:	0a 94       	dec	r0
     eec:	e2 f7       	brpl	.-8      	; 0xee6 <DIO_u8SetPinValue+0x112>
     eee:	84 2b       	or	r24, r20
     ef0:	8c 93       	st	X, r24
     ef2:	8c c0       	rjmp	.+280    	; 0x100c <DIO_u8SetPinValue+0x238>
						case DIO_u8_LOW : CLR_BIT(DIO_u8_PORTB_REG,Copy_u8PinId); break;
     ef4:	a8 e3       	ldi	r26, 0x38	; 56
     ef6:	b0 e0       	ldi	r27, 0x00	; 0
     ef8:	e8 e3       	ldi	r30, 0x38	; 56
     efa:	f0 e0       	ldi	r31, 0x00	; 0
     efc:	80 81       	ld	r24, Z
     efe:	48 2f       	mov	r20, r24
     f00:	8b 81       	ldd	r24, Y+3	; 0x03
     f02:	28 2f       	mov	r18, r24
     f04:	30 e0       	ldi	r19, 0x00	; 0
     f06:	81 e0       	ldi	r24, 0x01	; 1
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	02 2e       	mov	r0, r18
     f0c:	02 c0       	rjmp	.+4      	; 0xf12 <DIO_u8SetPinValue+0x13e>
     f0e:	88 0f       	add	r24, r24
     f10:	99 1f       	adc	r25, r25
     f12:	0a 94       	dec	r0
     f14:	e2 f7       	brpl	.-8      	; 0xf0e <DIO_u8SetPinValue+0x13a>
     f16:	80 95       	com	r24
     f18:	84 23       	and	r24, r20
     f1a:	8c 93       	st	X, r24
     f1c:	77 c0       	rjmp	.+238    	; 0x100c <DIO_u8SetPinValue+0x238>
						default         : Local_u8ErrorState = STD_TYPES_NOK;
     f1e:	19 82       	std	Y+1, r1	; 0x01
     f20:	75 c0       	rjmp	.+234    	; 0x100c <DIO_u8SetPinValue+0x238>
					}
				break;
				
				case DIO_u8_PORTC:
					switch (Copy_PinValue)
     f22:	8c 81       	ldd	r24, Y+4	; 0x04
     f24:	28 2f       	mov	r18, r24
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	38 87       	std	Y+8, r19	; 0x08
     f2a:	2f 83       	std	Y+7, r18	; 0x07
     f2c:	8f 81       	ldd	r24, Y+7	; 0x07
     f2e:	98 85       	ldd	r25, Y+8	; 0x08
     f30:	00 97       	sbiw	r24, 0x00	; 0
     f32:	c9 f0       	breq	.+50     	; 0xf66 <DIO_u8SetPinValue+0x192>
     f34:	2f 81       	ldd	r18, Y+7	; 0x07
     f36:	38 85       	ldd	r19, Y+8	; 0x08
     f38:	21 30       	cpi	r18, 0x01	; 1
     f3a:	31 05       	cpc	r19, r1
     f3c:	49 f5       	brne	.+82     	; 0xf90 <DIO_u8SetPinValue+0x1bc>
					{
						case DIO_u8_HIGH: SET_BIT(DIO_u8_PORTC_REG,Copy_u8PinId); break;
     f3e:	a5 e3       	ldi	r26, 0x35	; 53
     f40:	b0 e0       	ldi	r27, 0x00	; 0
     f42:	e5 e3       	ldi	r30, 0x35	; 53
     f44:	f0 e0       	ldi	r31, 0x00	; 0
     f46:	80 81       	ld	r24, Z
     f48:	48 2f       	mov	r20, r24
     f4a:	8b 81       	ldd	r24, Y+3	; 0x03
     f4c:	28 2f       	mov	r18, r24
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	81 e0       	ldi	r24, 0x01	; 1
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	02 2e       	mov	r0, r18
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <DIO_u8SetPinValue+0x188>
     f58:	88 0f       	add	r24, r24
     f5a:	99 1f       	adc	r25, r25
     f5c:	0a 94       	dec	r0
     f5e:	e2 f7       	brpl	.-8      	; 0xf58 <DIO_u8SetPinValue+0x184>
     f60:	84 2b       	or	r24, r20
     f62:	8c 93       	st	X, r24
     f64:	53 c0       	rjmp	.+166    	; 0x100c <DIO_u8SetPinValue+0x238>
						case DIO_u8_LOW : CLR_BIT(DIO_u8_PORTC_REG,Copy_u8PinId); break;
     f66:	a5 e3       	ldi	r26, 0x35	; 53
     f68:	b0 e0       	ldi	r27, 0x00	; 0
     f6a:	e5 e3       	ldi	r30, 0x35	; 53
     f6c:	f0 e0       	ldi	r31, 0x00	; 0
     f6e:	80 81       	ld	r24, Z
     f70:	48 2f       	mov	r20, r24
     f72:	8b 81       	ldd	r24, Y+3	; 0x03
     f74:	28 2f       	mov	r18, r24
     f76:	30 e0       	ldi	r19, 0x00	; 0
     f78:	81 e0       	ldi	r24, 0x01	; 1
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	02 2e       	mov	r0, r18
     f7e:	02 c0       	rjmp	.+4      	; 0xf84 <DIO_u8SetPinValue+0x1b0>
     f80:	88 0f       	add	r24, r24
     f82:	99 1f       	adc	r25, r25
     f84:	0a 94       	dec	r0
     f86:	e2 f7       	brpl	.-8      	; 0xf80 <DIO_u8SetPinValue+0x1ac>
     f88:	80 95       	com	r24
     f8a:	84 23       	and	r24, r20
     f8c:	8c 93       	st	X, r24
     f8e:	3e c0       	rjmp	.+124    	; 0x100c <DIO_u8SetPinValue+0x238>
						default         : Local_u8ErrorState = STD_TYPES_NOK;
     f90:	19 82       	std	Y+1, r1	; 0x01
     f92:	3c c0       	rjmp	.+120    	; 0x100c <DIO_u8SetPinValue+0x238>
					}
				break;
				
				case DIO_u8_PORTD:
					switch (Copy_PinValue)
     f94:	8c 81       	ldd	r24, Y+4	; 0x04
     f96:	28 2f       	mov	r18, r24
     f98:	30 e0       	ldi	r19, 0x00	; 0
     f9a:	3e 83       	std	Y+6, r19	; 0x06
     f9c:	2d 83       	std	Y+5, r18	; 0x05
     f9e:	8d 81       	ldd	r24, Y+5	; 0x05
     fa0:	9e 81       	ldd	r25, Y+6	; 0x06
     fa2:	00 97       	sbiw	r24, 0x00	; 0
     fa4:	c9 f0       	breq	.+50     	; 0xfd8 <DIO_u8SetPinValue+0x204>
     fa6:	2d 81       	ldd	r18, Y+5	; 0x05
     fa8:	3e 81       	ldd	r19, Y+6	; 0x06
     faa:	21 30       	cpi	r18, 0x01	; 1
     fac:	31 05       	cpc	r19, r1
     fae:	49 f5       	brne	.+82     	; 0x1002 <DIO_u8SetPinValue+0x22e>
					{
						case DIO_u8_HIGH: SET_BIT(DIO_u8_PORTD_REG,Copy_u8PinId); break;
     fb0:	a2 e3       	ldi	r26, 0x32	; 50
     fb2:	b0 e0       	ldi	r27, 0x00	; 0
     fb4:	e2 e3       	ldi	r30, 0x32	; 50
     fb6:	f0 e0       	ldi	r31, 0x00	; 0
     fb8:	80 81       	ld	r24, Z
     fba:	48 2f       	mov	r20, r24
     fbc:	8b 81       	ldd	r24, Y+3	; 0x03
     fbe:	28 2f       	mov	r18, r24
     fc0:	30 e0       	ldi	r19, 0x00	; 0
     fc2:	81 e0       	ldi	r24, 0x01	; 1
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	02 2e       	mov	r0, r18
     fc8:	02 c0       	rjmp	.+4      	; 0xfce <DIO_u8SetPinValue+0x1fa>
     fca:	88 0f       	add	r24, r24
     fcc:	99 1f       	adc	r25, r25
     fce:	0a 94       	dec	r0
     fd0:	e2 f7       	brpl	.-8      	; 0xfca <DIO_u8SetPinValue+0x1f6>
     fd2:	84 2b       	or	r24, r20
     fd4:	8c 93       	st	X, r24
     fd6:	1a c0       	rjmp	.+52     	; 0x100c <DIO_u8SetPinValue+0x238>
						case DIO_u8_LOW : CLR_BIT(DIO_u8_PORTD_REG,Copy_u8PinId); break;
     fd8:	a2 e3       	ldi	r26, 0x32	; 50
     fda:	b0 e0       	ldi	r27, 0x00	; 0
     fdc:	e2 e3       	ldi	r30, 0x32	; 50
     fde:	f0 e0       	ldi	r31, 0x00	; 0
     fe0:	80 81       	ld	r24, Z
     fe2:	48 2f       	mov	r20, r24
     fe4:	8b 81       	ldd	r24, Y+3	; 0x03
     fe6:	28 2f       	mov	r18, r24
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	81 e0       	ldi	r24, 0x01	; 1
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	02 2e       	mov	r0, r18
     ff0:	02 c0       	rjmp	.+4      	; 0xff6 <DIO_u8SetPinValue+0x222>
     ff2:	88 0f       	add	r24, r24
     ff4:	99 1f       	adc	r25, r25
     ff6:	0a 94       	dec	r0
     ff8:	e2 f7       	brpl	.-8      	; 0xff2 <DIO_u8SetPinValue+0x21e>
     ffa:	80 95       	com	r24
     ffc:	84 23       	and	r24, r20
     ffe:	8c 93       	st	X, r24
    1000:	05 c0       	rjmp	.+10     	; 0x100c <DIO_u8SetPinValue+0x238>
						default         : Local_u8ErrorState = STD_TYPES_NOK;
    1002:	19 82       	std	Y+1, r1	; 0x01
    1004:	03 c0       	rjmp	.+6      	; 0x100c <DIO_u8SetPinValue+0x238>
					}
				break;
				
				default:Local_u8ErrorState = STD_TYPES_NOK;
    1006:	19 82       	std	Y+1, r1	; 0x01
    1008:	01 c0       	rjmp	.+2      	; 0x100c <DIO_u8SetPinValue+0x238>
				
			}
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
    100a:	19 82       	std	Y+1, r1	; 0x01
	}
	
	return Local_u8ErrorState;
    100c:	89 81       	ldd	r24, Y+1	; 0x01
}
    100e:	2e 96       	adiw	r28, 0x0e	; 14
    1010:	0f b6       	in	r0, 0x3f	; 63
    1012:	f8 94       	cli
    1014:	de bf       	out	0x3e, r29	; 62
    1016:	0f be       	out	0x3f, r0	; 63
    1018:	cd bf       	out	0x3d, r28	; 61
    101a:	cf 91       	pop	r28
    101c:	df 91       	pop	r29
    101e:	08 95       	ret

00001020 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8PortId, u8 Copy_u8PinId, u8 * Copy_pu8ReturnedPinValue )
{
    1020:	df 93       	push	r29
    1022:	cf 93       	push	r28
    1024:	cd b7       	in	r28, 0x3d	; 61
    1026:	de b7       	in	r29, 0x3e	; 62
    1028:	28 97       	sbiw	r28, 0x08	; 8
    102a:	0f b6       	in	r0, 0x3f	; 63
    102c:	f8 94       	cli
    102e:	de bf       	out	0x3e, r29	; 62
    1030:	0f be       	out	0x3f, r0	; 63
    1032:	cd bf       	out	0x3d, r28	; 61
    1034:	8b 83       	std	Y+3, r24	; 0x03
    1036:	6c 83       	std	Y+4, r22	; 0x04
    1038:	5e 83       	std	Y+6, r21	; 0x06
    103a:	4d 83       	std	Y+5, r20	; 0x05
	u8 Local_u8ErrorState = STD_TYPES_OK;
    103c:	81 e0       	ldi	r24, 0x01	; 1
    103e:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8PinValue;
	
	if((Copy_u8PortId <= DIO_u8_PORTD) && (Copy_u8PinId <= DIO_u8_PIN7) && (Copy_pu8ReturnedPinValue != NULL))
    1040:	8b 81       	ldd	r24, Y+3	; 0x03
    1042:	84 30       	cpi	r24, 0x04	; 4
    1044:	08 f0       	brcs	.+2      	; 0x1048 <DIO_u8GetPinValue+0x28>
    1046:	9f c0       	rjmp	.+318    	; 0x1186 <DIO_u8GetPinValue+0x166>
    1048:	8c 81       	ldd	r24, Y+4	; 0x04
    104a:	88 30       	cpi	r24, 0x08	; 8
    104c:	08 f0       	brcs	.+2      	; 0x1050 <DIO_u8GetPinValue+0x30>
    104e:	9b c0       	rjmp	.+310    	; 0x1186 <DIO_u8GetPinValue+0x166>
    1050:	8d 81       	ldd	r24, Y+5	; 0x05
    1052:	9e 81       	ldd	r25, Y+6	; 0x06
    1054:	00 97       	sbiw	r24, 0x00	; 0
    1056:	09 f4       	brne	.+2      	; 0x105a <DIO_u8GetPinValue+0x3a>
    1058:	96 c0       	rjmp	.+300    	; 0x1186 <DIO_u8GetPinValue+0x166>
	{
		switch (Copy_u8PortId)
    105a:	8b 81       	ldd	r24, Y+3	; 0x03
    105c:	28 2f       	mov	r18, r24
    105e:	30 e0       	ldi	r19, 0x00	; 0
    1060:	38 87       	std	Y+8, r19	; 0x08
    1062:	2f 83       	std	Y+7, r18	; 0x07
    1064:	4f 81       	ldd	r20, Y+7	; 0x07
    1066:	58 85       	ldd	r21, Y+8	; 0x08
    1068:	41 30       	cpi	r20, 0x01	; 1
    106a:	51 05       	cpc	r21, r1
    106c:	a9 f1       	breq	.+106    	; 0x10d8 <DIO_u8GetPinValue+0xb8>
    106e:	8f 81       	ldd	r24, Y+7	; 0x07
    1070:	98 85       	ldd	r25, Y+8	; 0x08
    1072:	82 30       	cpi	r24, 0x02	; 2
    1074:	91 05       	cpc	r25, r1
    1076:	34 f4       	brge	.+12     	; 0x1084 <DIO_u8GetPinValue+0x64>
    1078:	2f 81       	ldd	r18, Y+7	; 0x07
    107a:	38 85       	ldd	r19, Y+8	; 0x08
    107c:	21 15       	cp	r18, r1
    107e:	31 05       	cpc	r19, r1
    1080:	71 f0       	breq	.+28     	; 0x109e <DIO_u8GetPinValue+0x7e>
    1082:	82 c0       	rjmp	.+260    	; 0x1188 <DIO_u8GetPinValue+0x168>
    1084:	4f 81       	ldd	r20, Y+7	; 0x07
    1086:	58 85       	ldd	r21, Y+8	; 0x08
    1088:	42 30       	cpi	r20, 0x02	; 2
    108a:	51 05       	cpc	r21, r1
    108c:	09 f4       	brne	.+2      	; 0x1090 <DIO_u8GetPinValue+0x70>
    108e:	41 c0       	rjmp	.+130    	; 0x1112 <DIO_u8GetPinValue+0xf2>
    1090:	8f 81       	ldd	r24, Y+7	; 0x07
    1092:	98 85       	ldd	r25, Y+8	; 0x08
    1094:	83 30       	cpi	r24, 0x03	; 3
    1096:	91 05       	cpc	r25, r1
    1098:	09 f4       	brne	.+2      	; 0x109c <DIO_u8GetPinValue+0x7c>
    109a:	58 c0       	rjmp	.+176    	; 0x114c <DIO_u8GetPinValue+0x12c>
    109c:	75 c0       	rjmp	.+234    	; 0x1188 <DIO_u8GetPinValue+0x168>
		{
			case DIO_u8_PORTA : 
			Local_u8PinValue = GET_BIT(DIO_u8_PINA_REG , Copy_u8PinId);
    109e:	e9 e3       	ldi	r30, 0x39	; 57
    10a0:	f0 e0       	ldi	r31, 0x00	; 0
    10a2:	80 81       	ld	r24, Z
    10a4:	28 2f       	mov	r18, r24
    10a6:	30 e0       	ldi	r19, 0x00	; 0
    10a8:	8c 81       	ldd	r24, Y+4	; 0x04
    10aa:	88 2f       	mov	r24, r24
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	a9 01       	movw	r20, r18
    10b0:	02 c0       	rjmp	.+4      	; 0x10b6 <DIO_u8GetPinValue+0x96>
    10b2:	55 95       	asr	r21
    10b4:	47 95       	ror	r20
    10b6:	8a 95       	dec	r24
    10b8:	e2 f7       	brpl	.-8      	; 0x10b2 <DIO_u8GetPinValue+0x92>
    10ba:	ca 01       	movw	r24, r20
    10bc:	81 70       	andi	r24, 0x01	; 1
    10be:	89 83       	std	Y+1, r24	; 0x01
			if(Local_u8PinValue == 0)
    10c0:	89 81       	ldd	r24, Y+1	; 0x01
    10c2:	88 23       	and	r24, r24
    10c4:	21 f4       	brne	.+8      	; 0x10ce <DIO_u8GetPinValue+0xae>
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_LOW;				
    10c6:	ed 81       	ldd	r30, Y+5	; 0x05
    10c8:	fe 81       	ldd	r31, Y+6	; 0x06
    10ca:	10 82       	st	Z, r1
    10cc:	5d c0       	rjmp	.+186    	; 0x1188 <DIO_u8GetPinValue+0x168>
			}
			else
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;
    10ce:	ed 81       	ldd	r30, Y+5	; 0x05
    10d0:	fe 81       	ldd	r31, Y+6	; 0x06
    10d2:	81 e0       	ldi	r24, 0x01	; 1
    10d4:	80 83       	st	Z, r24
    10d6:	58 c0       	rjmp	.+176    	; 0x1188 <DIO_u8GetPinValue+0x168>
			}
			break;
			
			case DIO_u8_PORTB:
			Local_u8PinValue = GET_BIT(DIO_u8_PINB_REG , Copy_u8PinId);
    10d8:	e6 e3       	ldi	r30, 0x36	; 54
    10da:	f0 e0       	ldi	r31, 0x00	; 0
    10dc:	80 81       	ld	r24, Z
    10de:	28 2f       	mov	r18, r24
    10e0:	30 e0       	ldi	r19, 0x00	; 0
    10e2:	8c 81       	ldd	r24, Y+4	; 0x04
    10e4:	88 2f       	mov	r24, r24
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	a9 01       	movw	r20, r18
    10ea:	02 c0       	rjmp	.+4      	; 0x10f0 <DIO_u8GetPinValue+0xd0>
    10ec:	55 95       	asr	r21
    10ee:	47 95       	ror	r20
    10f0:	8a 95       	dec	r24
    10f2:	e2 f7       	brpl	.-8      	; 0x10ec <DIO_u8GetPinValue+0xcc>
    10f4:	ca 01       	movw	r24, r20
    10f6:	81 70       	andi	r24, 0x01	; 1
    10f8:	89 83       	std	Y+1, r24	; 0x01
			if(Local_u8PinValue == 0)
    10fa:	89 81       	ldd	r24, Y+1	; 0x01
    10fc:	88 23       	and	r24, r24
    10fe:	21 f4       	brne	.+8      	; 0x1108 <DIO_u8GetPinValue+0xe8>
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_LOW;				
    1100:	ed 81       	ldd	r30, Y+5	; 0x05
    1102:	fe 81       	ldd	r31, Y+6	; 0x06
    1104:	10 82       	st	Z, r1
    1106:	40 c0       	rjmp	.+128    	; 0x1188 <DIO_u8GetPinValue+0x168>
			}
			else
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;
    1108:	ed 81       	ldd	r30, Y+5	; 0x05
    110a:	fe 81       	ldd	r31, Y+6	; 0x06
    110c:	81 e0       	ldi	r24, 0x01	; 1
    110e:	80 83       	st	Z, r24
    1110:	3b c0       	rjmp	.+118    	; 0x1188 <DIO_u8GetPinValue+0x168>
			}
			break;
			
			case DIO_u8_PORTC:
			Local_u8PinValue = GET_BIT(DIO_u8_PINC_REG , Copy_u8PinId);
    1112:	e3 e3       	ldi	r30, 0x33	; 51
    1114:	f0 e0       	ldi	r31, 0x00	; 0
    1116:	80 81       	ld	r24, Z
    1118:	28 2f       	mov	r18, r24
    111a:	30 e0       	ldi	r19, 0x00	; 0
    111c:	8c 81       	ldd	r24, Y+4	; 0x04
    111e:	88 2f       	mov	r24, r24
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	a9 01       	movw	r20, r18
    1124:	02 c0       	rjmp	.+4      	; 0x112a <DIO_u8GetPinValue+0x10a>
    1126:	55 95       	asr	r21
    1128:	47 95       	ror	r20
    112a:	8a 95       	dec	r24
    112c:	e2 f7       	brpl	.-8      	; 0x1126 <DIO_u8GetPinValue+0x106>
    112e:	ca 01       	movw	r24, r20
    1130:	81 70       	andi	r24, 0x01	; 1
    1132:	89 83       	std	Y+1, r24	; 0x01
			if(Local_u8PinValue == 0)
    1134:	89 81       	ldd	r24, Y+1	; 0x01
    1136:	88 23       	and	r24, r24
    1138:	21 f4       	brne	.+8      	; 0x1142 <DIO_u8GetPinValue+0x122>
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_LOW;				
    113a:	ed 81       	ldd	r30, Y+5	; 0x05
    113c:	fe 81       	ldd	r31, Y+6	; 0x06
    113e:	10 82       	st	Z, r1
    1140:	23 c0       	rjmp	.+70     	; 0x1188 <DIO_u8GetPinValue+0x168>
			}
			else
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;
    1142:	ed 81       	ldd	r30, Y+5	; 0x05
    1144:	fe 81       	ldd	r31, Y+6	; 0x06
    1146:	81 e0       	ldi	r24, 0x01	; 1
    1148:	80 83       	st	Z, r24
    114a:	1e c0       	rjmp	.+60     	; 0x1188 <DIO_u8GetPinValue+0x168>
			}
			break;
			
			case DIO_u8_PORTD:
			Local_u8PinValue = GET_BIT(DIO_u8_PIND_REG , Copy_u8PinId);
    114c:	e0 e3       	ldi	r30, 0x30	; 48
    114e:	f0 e0       	ldi	r31, 0x00	; 0
    1150:	80 81       	ld	r24, Z
    1152:	28 2f       	mov	r18, r24
    1154:	30 e0       	ldi	r19, 0x00	; 0
    1156:	8c 81       	ldd	r24, Y+4	; 0x04
    1158:	88 2f       	mov	r24, r24
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	a9 01       	movw	r20, r18
    115e:	02 c0       	rjmp	.+4      	; 0x1164 <DIO_u8GetPinValue+0x144>
    1160:	55 95       	asr	r21
    1162:	47 95       	ror	r20
    1164:	8a 95       	dec	r24
    1166:	e2 f7       	brpl	.-8      	; 0x1160 <DIO_u8GetPinValue+0x140>
    1168:	ca 01       	movw	r24, r20
    116a:	81 70       	andi	r24, 0x01	; 1
    116c:	89 83       	std	Y+1, r24	; 0x01
			if(Local_u8PinValue == 0)
    116e:	89 81       	ldd	r24, Y+1	; 0x01
    1170:	88 23       	and	r24, r24
    1172:	21 f4       	brne	.+8      	; 0x117c <DIO_u8GetPinValue+0x15c>
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_LOW;				
    1174:	ed 81       	ldd	r30, Y+5	; 0x05
    1176:	fe 81       	ldd	r31, Y+6	; 0x06
    1178:	10 82       	st	Z, r1
    117a:	06 c0       	rjmp	.+12     	; 0x1188 <DIO_u8GetPinValue+0x168>
			}
			else
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;
    117c:	ed 81       	ldd	r30, Y+5	; 0x05
    117e:	fe 81       	ldd	r31, Y+6	; 0x06
    1180:	81 e0       	ldi	r24, 0x01	; 1
    1182:	80 83       	st	Z, r24
    1184:	01 c0       	rjmp	.+2      	; 0x1188 <DIO_u8GetPinValue+0x168>
			break;
		}
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
    1186:	1a 82       	std	Y+2, r1	; 0x02
	}
	return Local_u8ErrorState;
    1188:	8a 81       	ldd	r24, Y+2	; 0x02
	
}
    118a:	28 96       	adiw	r28, 0x08	; 8
    118c:	0f b6       	in	r0, 0x3f	; 63
    118e:	f8 94       	cli
    1190:	de bf       	out	0x3e, r29	; 62
    1192:	0f be       	out	0x3f, r0	; 63
    1194:	cd bf       	out	0x3d, r28	; 61
    1196:	cf 91       	pop	r28
    1198:	df 91       	pop	r29
    119a:	08 95       	ret

0000119c <DIO_u8SetPortDirection>:
 
u8 DIO_u8SetPortDirection(u8 Copy_u8PortId, u8 Copy_PortDirection)
{
    119c:	df 93       	push	r29
    119e:	cf 93       	push	r28
    11a0:	cd b7       	in	r28, 0x3d	; 61
    11a2:	de b7       	in	r29, 0x3e	; 62
    11a4:	2d 97       	sbiw	r28, 0x0d	; 13
    11a6:	0f b6       	in	r0, 0x3f	; 63
    11a8:	f8 94       	cli
    11aa:	de bf       	out	0x3e, r29	; 62
    11ac:	0f be       	out	0x3f, r0	; 63
    11ae:	cd bf       	out	0x3d, r28	; 61
    11b0:	8a 83       	std	Y+2, r24	; 0x02
    11b2:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    11b4:	81 e0       	ldi	r24, 0x01	; 1
    11b6:	89 83       	std	Y+1, r24	; 0x01
	if((Copy_PortDirection == DIO_u8_OUTPUT  )||(Copy_PortDirection == DIO_u8_INPUT))
    11b8:	8b 81       	ldd	r24, Y+3	; 0x03
    11ba:	81 30       	cpi	r24, 0x01	; 1
    11bc:	21 f0       	breq	.+8      	; 0x11c6 <DIO_u8SetPortDirection+0x2a>
    11be:	8b 81       	ldd	r24, Y+3	; 0x03
    11c0:	88 23       	and	r24, r24
    11c2:	09 f0       	breq	.+2      	; 0x11c6 <DIO_u8SetPortDirection+0x2a>
    11c4:	7f c0       	rjmp	.+254    	; 0x12c4 <DIO_u8SetPortDirection+0x128>
	{
		switch (Copy_u8PortId)
    11c6:	8a 81       	ldd	r24, Y+2	; 0x02
    11c8:	28 2f       	mov	r18, r24
    11ca:	30 e0       	ldi	r19, 0x00	; 0
    11cc:	3d 87       	std	Y+13, r19	; 0x0d
    11ce:	2c 87       	std	Y+12, r18	; 0x0c
    11d0:	8c 85       	ldd	r24, Y+12	; 0x0c
    11d2:	9d 85       	ldd	r25, Y+13	; 0x0d
    11d4:	81 30       	cpi	r24, 0x01	; 1
    11d6:	91 05       	cpc	r25, r1
    11d8:	71 f1       	breq	.+92     	; 0x1236 <DIO_u8SetPortDirection+0x9a>
    11da:	2c 85       	ldd	r18, Y+12	; 0x0c
    11dc:	3d 85       	ldd	r19, Y+13	; 0x0d
    11de:	22 30       	cpi	r18, 0x02	; 2
    11e0:	31 05       	cpc	r19, r1
    11e2:	2c f4       	brge	.+10     	; 0x11ee <DIO_u8SetPortDirection+0x52>
    11e4:	8c 85       	ldd	r24, Y+12	; 0x0c
    11e6:	9d 85       	ldd	r25, Y+13	; 0x0d
    11e8:	00 97       	sbiw	r24, 0x00	; 0
    11ea:	69 f0       	breq	.+26     	; 0x1206 <DIO_u8SetPortDirection+0x6a>
    11ec:	69 c0       	rjmp	.+210    	; 0x12c0 <DIO_u8SetPortDirection+0x124>
    11ee:	2c 85       	ldd	r18, Y+12	; 0x0c
    11f0:	3d 85       	ldd	r19, Y+13	; 0x0d
    11f2:	22 30       	cpi	r18, 0x02	; 2
    11f4:	31 05       	cpc	r19, r1
    11f6:	b1 f1       	breq	.+108    	; 0x1264 <DIO_u8SetPortDirection+0xc8>
    11f8:	8c 85       	ldd	r24, Y+12	; 0x0c
    11fa:	9d 85       	ldd	r25, Y+13	; 0x0d
    11fc:	83 30       	cpi	r24, 0x03	; 3
    11fe:	91 05       	cpc	r25, r1
    1200:	09 f4       	brne	.+2      	; 0x1204 <DIO_u8SetPortDirection+0x68>
    1202:	47 c0       	rjmp	.+142    	; 0x1292 <DIO_u8SetPortDirection+0xf6>
    1204:	5d c0       	rjmp	.+186    	; 0x12c0 <DIO_u8SetPortDirection+0x124>
		{
			case DIO_u8_PORTA : 
				switch (Copy_PortDirection)
    1206:	8b 81       	ldd	r24, Y+3	; 0x03
    1208:	28 2f       	mov	r18, r24
    120a:	30 e0       	ldi	r19, 0x00	; 0
    120c:	3b 87       	std	Y+11, r19	; 0x0b
    120e:	2a 87       	std	Y+10, r18	; 0x0a
    1210:	8a 85       	ldd	r24, Y+10	; 0x0a
    1212:	9b 85       	ldd	r25, Y+11	; 0x0b
    1214:	00 97       	sbiw	r24, 0x00	; 0
    1216:	59 f0       	breq	.+22     	; 0x122e <DIO_u8SetPortDirection+0x92>
    1218:	2a 85       	ldd	r18, Y+10	; 0x0a
    121a:	3b 85       	ldd	r19, Y+11	; 0x0b
    121c:	21 30       	cpi	r18, 0x01	; 1
    121e:	31 05       	cpc	r19, r1
    1220:	09 f0       	breq	.+2      	; 0x1224 <DIO_u8SetPortDirection+0x88>
    1222:	51 c0       	rjmp	.+162    	; 0x12c6 <DIO_u8SetPortDirection+0x12a>
				{
					case DIO_u8_OUTPUT : DIO_u8_DDRA_REG = 0xff; break;
    1224:	ea e3       	ldi	r30, 0x3A	; 58
    1226:	f0 e0       	ldi	r31, 0x00	; 0
    1228:	8f ef       	ldi	r24, 0xFF	; 255
    122a:	80 83       	st	Z, r24
    122c:	4c c0       	rjmp	.+152    	; 0x12c6 <DIO_u8SetPortDirection+0x12a>
					case DIO_u8_INPUT  : DIO_u8_DDRA_REG = 0x00; break;
    122e:	ea e3       	ldi	r30, 0x3A	; 58
    1230:	f0 e0       	ldi	r31, 0x00	; 0
    1232:	10 82       	st	Z, r1
    1234:	48 c0       	rjmp	.+144    	; 0x12c6 <DIO_u8SetPortDirection+0x12a>
				}
			break;
			
			case DIO_u8_PORTB :
				switch (Copy_PortDirection)
    1236:	8b 81       	ldd	r24, Y+3	; 0x03
    1238:	28 2f       	mov	r18, r24
    123a:	30 e0       	ldi	r19, 0x00	; 0
    123c:	39 87       	std	Y+9, r19	; 0x09
    123e:	28 87       	std	Y+8, r18	; 0x08
    1240:	88 85       	ldd	r24, Y+8	; 0x08
    1242:	99 85       	ldd	r25, Y+9	; 0x09
    1244:	00 97       	sbiw	r24, 0x00	; 0
    1246:	51 f0       	breq	.+20     	; 0x125c <DIO_u8SetPortDirection+0xc0>
    1248:	28 85       	ldd	r18, Y+8	; 0x08
    124a:	39 85       	ldd	r19, Y+9	; 0x09
    124c:	21 30       	cpi	r18, 0x01	; 1
    124e:	31 05       	cpc	r19, r1
    1250:	d1 f5       	brne	.+116    	; 0x12c6 <DIO_u8SetPortDirection+0x12a>
				{
					case DIO_u8_OUTPUT : DIO_u8_DDRB_REG = 0xff; break;
    1252:	e7 e3       	ldi	r30, 0x37	; 55
    1254:	f0 e0       	ldi	r31, 0x00	; 0
    1256:	8f ef       	ldi	r24, 0xFF	; 255
    1258:	80 83       	st	Z, r24
    125a:	35 c0       	rjmp	.+106    	; 0x12c6 <DIO_u8SetPortDirection+0x12a>
					case DIO_u8_INPUT  : DIO_u8_DDRB_REG = 0x00; break;
    125c:	e7 e3       	ldi	r30, 0x37	; 55
    125e:	f0 e0       	ldi	r31, 0x00	; 0
    1260:	10 82       	st	Z, r1
    1262:	31 c0       	rjmp	.+98     	; 0x12c6 <DIO_u8SetPortDirection+0x12a>
				}
			break;
			
			case DIO_u8_PORTC :
				switch (Copy_PortDirection)
    1264:	8b 81       	ldd	r24, Y+3	; 0x03
    1266:	28 2f       	mov	r18, r24
    1268:	30 e0       	ldi	r19, 0x00	; 0
    126a:	3f 83       	std	Y+7, r19	; 0x07
    126c:	2e 83       	std	Y+6, r18	; 0x06
    126e:	8e 81       	ldd	r24, Y+6	; 0x06
    1270:	9f 81       	ldd	r25, Y+7	; 0x07
    1272:	00 97       	sbiw	r24, 0x00	; 0
    1274:	51 f0       	breq	.+20     	; 0x128a <DIO_u8SetPortDirection+0xee>
    1276:	2e 81       	ldd	r18, Y+6	; 0x06
    1278:	3f 81       	ldd	r19, Y+7	; 0x07
    127a:	21 30       	cpi	r18, 0x01	; 1
    127c:	31 05       	cpc	r19, r1
    127e:	19 f5       	brne	.+70     	; 0x12c6 <DIO_u8SetPortDirection+0x12a>
				{
					case DIO_u8_OUTPUT : DIO_u8_DDRC_REG = 0xff; break;
    1280:	e4 e3       	ldi	r30, 0x34	; 52
    1282:	f0 e0       	ldi	r31, 0x00	; 0
    1284:	8f ef       	ldi	r24, 0xFF	; 255
    1286:	80 83       	st	Z, r24
    1288:	1e c0       	rjmp	.+60     	; 0x12c6 <DIO_u8SetPortDirection+0x12a>
					case DIO_u8_INPUT  : DIO_u8_DDRC_REG = 0x00; break;
    128a:	e4 e3       	ldi	r30, 0x34	; 52
    128c:	f0 e0       	ldi	r31, 0x00	; 0
    128e:	10 82       	st	Z, r1
    1290:	1a c0       	rjmp	.+52     	; 0x12c6 <DIO_u8SetPortDirection+0x12a>
				}
			break;
			
			case DIO_u8_PORTD :
				switch (Copy_PortDirection)
    1292:	8b 81       	ldd	r24, Y+3	; 0x03
    1294:	28 2f       	mov	r18, r24
    1296:	30 e0       	ldi	r19, 0x00	; 0
    1298:	3d 83       	std	Y+5, r19	; 0x05
    129a:	2c 83       	std	Y+4, r18	; 0x04
    129c:	8c 81       	ldd	r24, Y+4	; 0x04
    129e:	9d 81       	ldd	r25, Y+5	; 0x05
    12a0:	00 97       	sbiw	r24, 0x00	; 0
    12a2:	51 f0       	breq	.+20     	; 0x12b8 <DIO_u8SetPortDirection+0x11c>
    12a4:	2c 81       	ldd	r18, Y+4	; 0x04
    12a6:	3d 81       	ldd	r19, Y+5	; 0x05
    12a8:	21 30       	cpi	r18, 0x01	; 1
    12aa:	31 05       	cpc	r19, r1
    12ac:	61 f4       	brne	.+24     	; 0x12c6 <DIO_u8SetPortDirection+0x12a>
				{
					case DIO_u8_OUTPUT : DIO_u8_DDRD_REG = 0xff; break;
    12ae:	e1 e3       	ldi	r30, 0x31	; 49
    12b0:	f0 e0       	ldi	r31, 0x00	; 0
    12b2:	8f ef       	ldi	r24, 0xFF	; 255
    12b4:	80 83       	st	Z, r24
    12b6:	07 c0       	rjmp	.+14     	; 0x12c6 <DIO_u8SetPortDirection+0x12a>
					case DIO_u8_INPUT  : DIO_u8_DDRD_REG = 0x00; break;
    12b8:	e1 e3       	ldi	r30, 0x31	; 49
    12ba:	f0 e0       	ldi	r31, 0x00	; 0
    12bc:	10 82       	st	Z, r1
    12be:	03 c0       	rjmp	.+6      	; 0x12c6 <DIO_u8SetPortDirection+0x12a>
				}
			break;
			
			default      :Local_u8ErrorState =STD_TYPES_NOK;
    12c0:	19 82       	std	Y+1, r1	; 0x01
    12c2:	01 c0       	rjmp	.+2      	; 0x12c6 <DIO_u8SetPortDirection+0x12a>
			
		}
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
    12c4:	19 82       	std	Y+1, r1	; 0x01
	}
	
	return Local_u8ErrorState;
    12c6:	89 81       	ldd	r24, Y+1	; 0x01
}
    12c8:	2d 96       	adiw	r28, 0x0d	; 13
    12ca:	0f b6       	in	r0, 0x3f	; 63
    12cc:	f8 94       	cli
    12ce:	de bf       	out	0x3e, r29	; 62
    12d0:	0f be       	out	0x3f, r0	; 63
    12d2:	cd bf       	out	0x3d, r28	; 61
    12d4:	cf 91       	pop	r28
    12d6:	df 91       	pop	r29
    12d8:	08 95       	ret

000012da <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue(u8 Copy_u8PortId, u8 Copy_PortValue)
{
    12da:	df 93       	push	r29
    12dc:	cf 93       	push	r28
    12de:	00 d0       	rcall	.+0      	; 0x12e0 <DIO_u8SetPortValue+0x6>
    12e0:	00 d0       	rcall	.+0      	; 0x12e2 <DIO_u8SetPortValue+0x8>
    12e2:	0f 92       	push	r0
    12e4:	cd b7       	in	r28, 0x3d	; 61
    12e6:	de b7       	in	r29, 0x3e	; 62
    12e8:	8a 83       	std	Y+2, r24	; 0x02
    12ea:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    12ec:	81 e0       	ldi	r24, 0x01	; 1
    12ee:	89 83       	std	Y+1, r24	; 0x01
	switch (Copy_u8PortId)
    12f0:	8a 81       	ldd	r24, Y+2	; 0x02
    12f2:	28 2f       	mov	r18, r24
    12f4:	30 e0       	ldi	r19, 0x00	; 0
    12f6:	3d 83       	std	Y+5, r19	; 0x05
    12f8:	2c 83       	std	Y+4, r18	; 0x04
    12fa:	8c 81       	ldd	r24, Y+4	; 0x04
    12fc:	9d 81       	ldd	r25, Y+5	; 0x05
    12fe:	81 30       	cpi	r24, 0x01	; 1
    1300:	91 05       	cpc	r25, r1
    1302:	d1 f0       	breq	.+52     	; 0x1338 <DIO_u8SetPortValue+0x5e>
    1304:	2c 81       	ldd	r18, Y+4	; 0x04
    1306:	3d 81       	ldd	r19, Y+5	; 0x05
    1308:	22 30       	cpi	r18, 0x02	; 2
    130a:	31 05       	cpc	r19, r1
    130c:	2c f4       	brge	.+10     	; 0x1318 <DIO_u8SetPortValue+0x3e>
    130e:	8c 81       	ldd	r24, Y+4	; 0x04
    1310:	9d 81       	ldd	r25, Y+5	; 0x05
    1312:	00 97       	sbiw	r24, 0x00	; 0
    1314:	61 f0       	breq	.+24     	; 0x132e <DIO_u8SetPortValue+0x54>
    1316:	1f c0       	rjmp	.+62     	; 0x1356 <DIO_u8SetPortValue+0x7c>
    1318:	2c 81       	ldd	r18, Y+4	; 0x04
    131a:	3d 81       	ldd	r19, Y+5	; 0x05
    131c:	22 30       	cpi	r18, 0x02	; 2
    131e:	31 05       	cpc	r19, r1
    1320:	81 f0       	breq	.+32     	; 0x1342 <DIO_u8SetPortValue+0x68>
    1322:	8c 81       	ldd	r24, Y+4	; 0x04
    1324:	9d 81       	ldd	r25, Y+5	; 0x05
    1326:	83 30       	cpi	r24, 0x03	; 3
    1328:	91 05       	cpc	r25, r1
    132a:	81 f0       	breq	.+32     	; 0x134c <DIO_u8SetPortValue+0x72>
    132c:	14 c0       	rjmp	.+40     	; 0x1356 <DIO_u8SetPortValue+0x7c>
	{
		case DIO_u8_PORTA : DIO_u8_PORTA_REG = Copy_PortValue; break;
    132e:	eb e3       	ldi	r30, 0x3B	; 59
    1330:	f0 e0       	ldi	r31, 0x00	; 0
    1332:	8b 81       	ldd	r24, Y+3	; 0x03
    1334:	80 83       	st	Z, r24
    1336:	10 c0       	rjmp	.+32     	; 0x1358 <DIO_u8SetPortValue+0x7e>
		case DIO_u8_PORTB : DIO_u8_PORTB_REG = Copy_PortValue; break;
    1338:	e8 e3       	ldi	r30, 0x38	; 56
    133a:	f0 e0       	ldi	r31, 0x00	; 0
    133c:	8b 81       	ldd	r24, Y+3	; 0x03
    133e:	80 83       	st	Z, r24
    1340:	0b c0       	rjmp	.+22     	; 0x1358 <DIO_u8SetPortValue+0x7e>
		case DIO_u8_PORTC : DIO_u8_PORTC_REG = Copy_PortValue; break;
    1342:	e5 e3       	ldi	r30, 0x35	; 53
    1344:	f0 e0       	ldi	r31, 0x00	; 0
    1346:	8b 81       	ldd	r24, Y+3	; 0x03
    1348:	80 83       	st	Z, r24
    134a:	06 c0       	rjmp	.+12     	; 0x1358 <DIO_u8SetPortValue+0x7e>
		case DIO_u8_PORTD : DIO_u8_PORTD_REG = Copy_PortValue; break;
    134c:	e2 e3       	ldi	r30, 0x32	; 50
    134e:	f0 e0       	ldi	r31, 0x00	; 0
    1350:	8b 81       	ldd	r24, Y+3	; 0x03
    1352:	80 83       	st	Z, r24
    1354:	01 c0       	rjmp	.+2      	; 0x1358 <DIO_u8SetPortValue+0x7e>
		default           : Local_u8ErrorState = STD_TYPES_NOK;
    1356:	19 82       	std	Y+1, r1	; 0x01
		
	}
	return Local_u8ErrorState;
    1358:	89 81       	ldd	r24, Y+1	; 0x01
}
    135a:	0f 90       	pop	r0
    135c:	0f 90       	pop	r0
    135e:	0f 90       	pop	r0
    1360:	0f 90       	pop	r0
    1362:	0f 90       	pop	r0
    1364:	cf 91       	pop	r28
    1366:	df 91       	pop	r29
    1368:	08 95       	ret

0000136a <DIO_u8GetPortValue>:

u8 DIO_u8GetPortValue (u8 Copy_u8PortId , u8 * Copy_pu8ReturnedPortValue )
{
    136a:	df 93       	push	r29
    136c:	cf 93       	push	r28
    136e:	00 d0       	rcall	.+0      	; 0x1370 <DIO_u8GetPortValue+0x6>
    1370:	00 d0       	rcall	.+0      	; 0x1372 <DIO_u8GetPortValue+0x8>
    1372:	00 d0       	rcall	.+0      	; 0x1374 <DIO_u8GetPortValue+0xa>
    1374:	cd b7       	in	r28, 0x3d	; 61
    1376:	de b7       	in	r29, 0x3e	; 62
    1378:	8a 83       	std	Y+2, r24	; 0x02
    137a:	7c 83       	std	Y+4, r23	; 0x04
    137c:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    137e:	81 e0       	ldi	r24, 0x01	; 1
    1380:	89 83       	std	Y+1, r24	; 0x01
	if (Copy_pu8ReturnedPortValue != NULL)
    1382:	8b 81       	ldd	r24, Y+3	; 0x03
    1384:	9c 81       	ldd	r25, Y+4	; 0x04
    1386:	00 97       	sbiw	r24, 0x00	; 0
    1388:	e9 f1       	breq	.+122    	; 0x1404 <DIO_u8GetPortValue+0x9a>
	{
		switch (Copy_u8PortId)
    138a:	8a 81       	ldd	r24, Y+2	; 0x02
    138c:	28 2f       	mov	r18, r24
    138e:	30 e0       	ldi	r19, 0x00	; 0
    1390:	3e 83       	std	Y+6, r19	; 0x06
    1392:	2d 83       	std	Y+5, r18	; 0x05
    1394:	8d 81       	ldd	r24, Y+5	; 0x05
    1396:	9e 81       	ldd	r25, Y+6	; 0x06
    1398:	81 30       	cpi	r24, 0x01	; 1
    139a:	91 05       	cpc	r25, r1
    139c:	e1 f0       	breq	.+56     	; 0x13d6 <DIO_u8GetPortValue+0x6c>
    139e:	2d 81       	ldd	r18, Y+5	; 0x05
    13a0:	3e 81       	ldd	r19, Y+6	; 0x06
    13a2:	22 30       	cpi	r18, 0x02	; 2
    13a4:	31 05       	cpc	r19, r1
    13a6:	2c f4       	brge	.+10     	; 0x13b2 <DIO_u8GetPortValue+0x48>
    13a8:	8d 81       	ldd	r24, Y+5	; 0x05
    13aa:	9e 81       	ldd	r25, Y+6	; 0x06
    13ac:	00 97       	sbiw	r24, 0x00	; 0
    13ae:	61 f0       	breq	.+24     	; 0x13c8 <DIO_u8GetPortValue+0x5e>
    13b0:	27 c0       	rjmp	.+78     	; 0x1400 <DIO_u8GetPortValue+0x96>
    13b2:	2d 81       	ldd	r18, Y+5	; 0x05
    13b4:	3e 81       	ldd	r19, Y+6	; 0x06
    13b6:	22 30       	cpi	r18, 0x02	; 2
    13b8:	31 05       	cpc	r19, r1
    13ba:	a1 f0       	breq	.+40     	; 0x13e4 <DIO_u8GetPortValue+0x7a>
    13bc:	8d 81       	ldd	r24, Y+5	; 0x05
    13be:	9e 81       	ldd	r25, Y+6	; 0x06
    13c0:	83 30       	cpi	r24, 0x03	; 3
    13c2:	91 05       	cpc	r25, r1
    13c4:	b1 f0       	breq	.+44     	; 0x13f2 <DIO_u8GetPortValue+0x88>
    13c6:	1c c0       	rjmp	.+56     	; 0x1400 <DIO_u8GetPortValue+0x96>
		{
			case DIO_u8_PORTA : *Copy_pu8ReturnedPortValue = DIO_u8_PINA_REG; break;
    13c8:	e9 e3       	ldi	r30, 0x39	; 57
    13ca:	f0 e0       	ldi	r31, 0x00	; 0
    13cc:	80 81       	ld	r24, Z
    13ce:	eb 81       	ldd	r30, Y+3	; 0x03
    13d0:	fc 81       	ldd	r31, Y+4	; 0x04
    13d2:	80 83       	st	Z, r24
    13d4:	18 c0       	rjmp	.+48     	; 0x1406 <DIO_u8GetPortValue+0x9c>
			case DIO_u8_PORTB : *Copy_pu8ReturnedPortValue = DIO_u8_PINB_REG; break;
    13d6:	e6 e3       	ldi	r30, 0x36	; 54
    13d8:	f0 e0       	ldi	r31, 0x00	; 0
    13da:	80 81       	ld	r24, Z
    13dc:	eb 81       	ldd	r30, Y+3	; 0x03
    13de:	fc 81       	ldd	r31, Y+4	; 0x04
    13e0:	80 83       	st	Z, r24
    13e2:	11 c0       	rjmp	.+34     	; 0x1406 <DIO_u8GetPortValue+0x9c>
			case DIO_u8_PORTC : *Copy_pu8ReturnedPortValue = DIO_u8_PINC_REG; break; 
    13e4:	e3 e3       	ldi	r30, 0x33	; 51
    13e6:	f0 e0       	ldi	r31, 0x00	; 0
    13e8:	80 81       	ld	r24, Z
    13ea:	eb 81       	ldd	r30, Y+3	; 0x03
    13ec:	fc 81       	ldd	r31, Y+4	; 0x04
    13ee:	80 83       	st	Z, r24
    13f0:	0a c0       	rjmp	.+20     	; 0x1406 <DIO_u8GetPortValue+0x9c>
			case DIO_u8_PORTD : *Copy_pu8ReturnedPortValue = DIO_u8_PIND_REG; break;
    13f2:	e0 e3       	ldi	r30, 0x30	; 48
    13f4:	f0 e0       	ldi	r31, 0x00	; 0
    13f6:	80 81       	ld	r24, Z
    13f8:	eb 81       	ldd	r30, Y+3	; 0x03
    13fa:	fc 81       	ldd	r31, Y+4	; 0x04
    13fc:	80 83       	st	Z, r24
    13fe:	03 c0       	rjmp	.+6      	; 0x1406 <DIO_u8GetPortValue+0x9c>
			default           : Local_u8ErrorState = STD_TYPES_NOK;
    1400:	19 82       	std	Y+1, r1	; 0x01
    1402:	01 c0       	rjmp	.+2      	; 0x1406 <DIO_u8GetPortValue+0x9c>
		}
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
    1404:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErrorState;
    1406:	89 81       	ldd	r24, Y+1	; 0x01
}
    1408:	26 96       	adiw	r28, 0x06	; 6
    140a:	0f b6       	in	r0, 0x3f	; 63
    140c:	f8 94       	cli
    140e:	de bf       	out	0x3e, r29	; 62
    1410:	0f be       	out	0x3f, r0	; 63
    1412:	cd bf       	out	0x3d, r28	; 61
    1414:	cf 91       	pop	r28
    1416:	df 91       	pop	r29
    1418:	08 95       	ret

0000141a <DIO_u8TogglePin>:

u8  DIO_u8TogglePin(u8 Copy_u8PortId, u8 Copy_u8PinId )
{
    141a:	df 93       	push	r29
    141c:	cf 93       	push	r28
    141e:	00 d0       	rcall	.+0      	; 0x1420 <DIO_u8TogglePin+0x6>
    1420:	00 d0       	rcall	.+0      	; 0x1422 <DIO_u8TogglePin+0x8>
    1422:	0f 92       	push	r0
    1424:	cd b7       	in	r28, 0x3d	; 61
    1426:	de b7       	in	r29, 0x3e	; 62
    1428:	8a 83       	std	Y+2, r24	; 0x02
    142a:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    142c:	81 e0       	ldi	r24, 0x01	; 1
    142e:	89 83       	std	Y+1, r24	; 0x01
	if((Copy_u8PortId <=  DIO_u8_PORTD)&&(Copy_u8PinId <= DIO_u8_PIN7))
    1430:	8a 81       	ldd	r24, Y+2	; 0x02
    1432:	84 30       	cpi	r24, 0x04	; 4
    1434:	08 f0       	brcs	.+2      	; 0x1438 <DIO_u8TogglePin+0x1e>
    1436:	73 c0       	rjmp	.+230    	; 0x151e <DIO_u8TogglePin+0x104>
    1438:	8b 81       	ldd	r24, Y+3	; 0x03
    143a:	88 30       	cpi	r24, 0x08	; 8
    143c:	08 f0       	brcs	.+2      	; 0x1440 <DIO_u8TogglePin+0x26>
    143e:	6f c0       	rjmp	.+222    	; 0x151e <DIO_u8TogglePin+0x104>
	{
		switch(Copy_u8PortId)
    1440:	8a 81       	ldd	r24, Y+2	; 0x02
    1442:	28 2f       	mov	r18, r24
    1444:	30 e0       	ldi	r19, 0x00	; 0
    1446:	3d 83       	std	Y+5, r19	; 0x05
    1448:	2c 83       	std	Y+4, r18	; 0x04
    144a:	8c 81       	ldd	r24, Y+4	; 0x04
    144c:	9d 81       	ldd	r25, Y+5	; 0x05
    144e:	81 30       	cpi	r24, 0x01	; 1
    1450:	91 05       	cpc	r25, r1
    1452:	49 f1       	breq	.+82     	; 0x14a6 <DIO_u8TogglePin+0x8c>
    1454:	2c 81       	ldd	r18, Y+4	; 0x04
    1456:	3d 81       	ldd	r19, Y+5	; 0x05
    1458:	22 30       	cpi	r18, 0x02	; 2
    145a:	31 05       	cpc	r19, r1
    145c:	2c f4       	brge	.+10     	; 0x1468 <DIO_u8TogglePin+0x4e>
    145e:	8c 81       	ldd	r24, Y+4	; 0x04
    1460:	9d 81       	ldd	r25, Y+5	; 0x05
    1462:	00 97       	sbiw	r24, 0x00	; 0
    1464:	61 f0       	breq	.+24     	; 0x147e <DIO_u8TogglePin+0x64>
    1466:	5c c0       	rjmp	.+184    	; 0x1520 <DIO_u8TogglePin+0x106>
    1468:	2c 81       	ldd	r18, Y+4	; 0x04
    146a:	3d 81       	ldd	r19, Y+5	; 0x05
    146c:	22 30       	cpi	r18, 0x02	; 2
    146e:	31 05       	cpc	r19, r1
    1470:	71 f1       	breq	.+92     	; 0x14ce <DIO_u8TogglePin+0xb4>
    1472:	8c 81       	ldd	r24, Y+4	; 0x04
    1474:	9d 81       	ldd	r25, Y+5	; 0x05
    1476:	83 30       	cpi	r24, 0x03	; 3
    1478:	91 05       	cpc	r25, r1
    147a:	e9 f1       	breq	.+122    	; 0x14f6 <DIO_u8TogglePin+0xdc>
    147c:	51 c0       	rjmp	.+162    	; 0x1520 <DIO_u8TogglePin+0x106>
		{
			case DIO_u8_PORTA : TOG_BIT(DIO_u8_PORTA_REG,Copy_u8PinId);break;
    147e:	ab e3       	ldi	r26, 0x3B	; 59
    1480:	b0 e0       	ldi	r27, 0x00	; 0
    1482:	eb e3       	ldi	r30, 0x3B	; 59
    1484:	f0 e0       	ldi	r31, 0x00	; 0
    1486:	80 81       	ld	r24, Z
    1488:	48 2f       	mov	r20, r24
    148a:	8b 81       	ldd	r24, Y+3	; 0x03
    148c:	28 2f       	mov	r18, r24
    148e:	30 e0       	ldi	r19, 0x00	; 0
    1490:	81 e0       	ldi	r24, 0x01	; 1
    1492:	90 e0       	ldi	r25, 0x00	; 0
    1494:	02 2e       	mov	r0, r18
    1496:	02 c0       	rjmp	.+4      	; 0x149c <DIO_u8TogglePin+0x82>
    1498:	88 0f       	add	r24, r24
    149a:	99 1f       	adc	r25, r25
    149c:	0a 94       	dec	r0
    149e:	e2 f7       	brpl	.-8      	; 0x1498 <DIO_u8TogglePin+0x7e>
    14a0:	84 27       	eor	r24, r20
    14a2:	8c 93       	st	X, r24
    14a4:	3d c0       	rjmp	.+122    	; 0x1520 <DIO_u8TogglePin+0x106>
			case DIO_u8_PORTB : TOG_BIT(DIO_u8_PORTB_REG,Copy_u8PinId);break;
    14a6:	a8 e3       	ldi	r26, 0x38	; 56
    14a8:	b0 e0       	ldi	r27, 0x00	; 0
    14aa:	e8 e3       	ldi	r30, 0x38	; 56
    14ac:	f0 e0       	ldi	r31, 0x00	; 0
    14ae:	80 81       	ld	r24, Z
    14b0:	48 2f       	mov	r20, r24
    14b2:	8b 81       	ldd	r24, Y+3	; 0x03
    14b4:	28 2f       	mov	r18, r24
    14b6:	30 e0       	ldi	r19, 0x00	; 0
    14b8:	81 e0       	ldi	r24, 0x01	; 1
    14ba:	90 e0       	ldi	r25, 0x00	; 0
    14bc:	02 2e       	mov	r0, r18
    14be:	02 c0       	rjmp	.+4      	; 0x14c4 <DIO_u8TogglePin+0xaa>
    14c0:	88 0f       	add	r24, r24
    14c2:	99 1f       	adc	r25, r25
    14c4:	0a 94       	dec	r0
    14c6:	e2 f7       	brpl	.-8      	; 0x14c0 <DIO_u8TogglePin+0xa6>
    14c8:	84 27       	eor	r24, r20
    14ca:	8c 93       	st	X, r24
    14cc:	29 c0       	rjmp	.+82     	; 0x1520 <DIO_u8TogglePin+0x106>
			case DIO_u8_PORTC : TOG_BIT(DIO_u8_PORTC_REG,Copy_u8PinId);break;
    14ce:	a5 e3       	ldi	r26, 0x35	; 53
    14d0:	b0 e0       	ldi	r27, 0x00	; 0
    14d2:	e5 e3       	ldi	r30, 0x35	; 53
    14d4:	f0 e0       	ldi	r31, 0x00	; 0
    14d6:	80 81       	ld	r24, Z
    14d8:	48 2f       	mov	r20, r24
    14da:	8b 81       	ldd	r24, Y+3	; 0x03
    14dc:	28 2f       	mov	r18, r24
    14de:	30 e0       	ldi	r19, 0x00	; 0
    14e0:	81 e0       	ldi	r24, 0x01	; 1
    14e2:	90 e0       	ldi	r25, 0x00	; 0
    14e4:	02 2e       	mov	r0, r18
    14e6:	02 c0       	rjmp	.+4      	; 0x14ec <DIO_u8TogglePin+0xd2>
    14e8:	88 0f       	add	r24, r24
    14ea:	99 1f       	adc	r25, r25
    14ec:	0a 94       	dec	r0
    14ee:	e2 f7       	brpl	.-8      	; 0x14e8 <DIO_u8TogglePin+0xce>
    14f0:	84 27       	eor	r24, r20
    14f2:	8c 93       	st	X, r24
    14f4:	15 c0       	rjmp	.+42     	; 0x1520 <DIO_u8TogglePin+0x106>
			case DIO_u8_PORTD : TOG_BIT(DIO_u8_PORTD_REG,Copy_u8PinId);break;
    14f6:	a2 e3       	ldi	r26, 0x32	; 50
    14f8:	b0 e0       	ldi	r27, 0x00	; 0
    14fa:	e2 e3       	ldi	r30, 0x32	; 50
    14fc:	f0 e0       	ldi	r31, 0x00	; 0
    14fe:	80 81       	ld	r24, Z
    1500:	48 2f       	mov	r20, r24
    1502:	8b 81       	ldd	r24, Y+3	; 0x03
    1504:	28 2f       	mov	r18, r24
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	81 e0       	ldi	r24, 0x01	; 1
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	02 2e       	mov	r0, r18
    150e:	02 c0       	rjmp	.+4      	; 0x1514 <DIO_u8TogglePin+0xfa>
    1510:	88 0f       	add	r24, r24
    1512:	99 1f       	adc	r25, r25
    1514:	0a 94       	dec	r0
    1516:	e2 f7       	brpl	.-8      	; 0x1510 <DIO_u8TogglePin+0xf6>
    1518:	84 27       	eor	r24, r20
    151a:	8c 93       	st	X, r24
    151c:	01 c0       	rjmp	.+2      	; 0x1520 <DIO_u8TogglePin+0x106>
		}
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
    151e:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErrorState;
    1520:	89 81       	ldd	r24, Y+1	; 0x01
}
    1522:	0f 90       	pop	r0
    1524:	0f 90       	pop	r0
    1526:	0f 90       	pop	r0
    1528:	0f 90       	pop	r0
    152a:	0f 90       	pop	r0
    152c:	cf 91       	pop	r28
    152e:	df 91       	pop	r29
    1530:	08 95       	ret

00001532 <DIO_u8SendMostNebble>:

u8 DIO_u8SendMostNebble(u8 Copy_u8PortId, u8 Copy_u8Status )
{
    1532:	df 93       	push	r29
    1534:	cf 93       	push	r28
    1536:	00 d0       	rcall	.+0      	; 0x1538 <DIO_u8SendMostNebble+0x6>
    1538:	00 d0       	rcall	.+0      	; 0x153a <DIO_u8SendMostNebble+0x8>
    153a:	0f 92       	push	r0
    153c:	cd b7       	in	r28, 0x3d	; 61
    153e:	de b7       	in	r29, 0x3e	; 62
    1540:	8a 83       	std	Y+2, r24	; 0x02
    1542:	6b 83       	std	Y+3, r22	; 0x03
    Copy_u8Status &= 0xF0;
    1544:	8b 81       	ldd	r24, Y+3	; 0x03
    1546:	80 7f       	andi	r24, 0xF0	; 240
    1548:	8b 83       	std	Y+3, r24	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    154a:	81 e0       	ldi	r24, 0x01	; 1
    154c:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8PortId <=  DIO_u8_PORTD)
    154e:	8a 81       	ldd	r24, Y+2	; 0x02
    1550:	84 30       	cpi	r24, 0x04	; 4
    1552:	08 f0       	brcs	.+2      	; 0x1556 <DIO_u8SendMostNebble+0x24>
    1554:	5f c0       	rjmp	.+190    	; 0x1614 <DIO_u8SendMostNebble+0xe2>
	{
		switch(Copy_u8PortId)
    1556:	8a 81       	ldd	r24, Y+2	; 0x02
    1558:	28 2f       	mov	r18, r24
    155a:	30 e0       	ldi	r19, 0x00	; 0
    155c:	3d 83       	std	Y+5, r19	; 0x05
    155e:	2c 83       	std	Y+4, r18	; 0x04
    1560:	8c 81       	ldd	r24, Y+4	; 0x04
    1562:	9d 81       	ldd	r25, Y+5	; 0x05
    1564:	81 30       	cpi	r24, 0x01	; 1
    1566:	91 05       	cpc	r25, r1
    1568:	29 f1       	breq	.+74     	; 0x15b4 <DIO_u8SendMostNebble+0x82>
    156a:	2c 81       	ldd	r18, Y+4	; 0x04
    156c:	3d 81       	ldd	r19, Y+5	; 0x05
    156e:	22 30       	cpi	r18, 0x02	; 2
    1570:	31 05       	cpc	r19, r1
    1572:	2c f4       	brge	.+10     	; 0x157e <DIO_u8SendMostNebble+0x4c>
    1574:	8c 81       	ldd	r24, Y+4	; 0x04
    1576:	9d 81       	ldd	r25, Y+5	; 0x05
    1578:	00 97       	sbiw	r24, 0x00	; 0
    157a:	61 f0       	breq	.+24     	; 0x1594 <DIO_u8SendMostNebble+0x62>
    157c:	4c c0       	rjmp	.+152    	; 0x1616 <DIO_u8SendMostNebble+0xe4>
    157e:	2c 81       	ldd	r18, Y+4	; 0x04
    1580:	3d 81       	ldd	r19, Y+5	; 0x05
    1582:	22 30       	cpi	r18, 0x02	; 2
    1584:	31 05       	cpc	r19, r1
    1586:	31 f1       	breq	.+76     	; 0x15d4 <DIO_u8SendMostNebble+0xa2>
    1588:	8c 81       	ldd	r24, Y+4	; 0x04
    158a:	9d 81       	ldd	r25, Y+5	; 0x05
    158c:	83 30       	cpi	r24, 0x03	; 3
    158e:	91 05       	cpc	r25, r1
    1590:	89 f1       	breq	.+98     	; 0x15f4 <DIO_u8SendMostNebble+0xc2>
    1592:	41 c0       	rjmp	.+130    	; 0x1616 <DIO_u8SendMostNebble+0xe4>
        {
			case DIO_u8_PORTA : DIO_u8_PORTA_REG &= 0x0F; DIO_u8_PORTA_REG |= Copy_u8Status ; break;
    1594:	ab e3       	ldi	r26, 0x3B	; 59
    1596:	b0 e0       	ldi	r27, 0x00	; 0
    1598:	eb e3       	ldi	r30, 0x3B	; 59
    159a:	f0 e0       	ldi	r31, 0x00	; 0
    159c:	80 81       	ld	r24, Z
    159e:	8f 70       	andi	r24, 0x0F	; 15
    15a0:	8c 93       	st	X, r24
    15a2:	ab e3       	ldi	r26, 0x3B	; 59
    15a4:	b0 e0       	ldi	r27, 0x00	; 0
    15a6:	eb e3       	ldi	r30, 0x3B	; 59
    15a8:	f0 e0       	ldi	r31, 0x00	; 0
    15aa:	90 81       	ld	r25, Z
    15ac:	8b 81       	ldd	r24, Y+3	; 0x03
    15ae:	89 2b       	or	r24, r25
    15b0:	8c 93       	st	X, r24
    15b2:	31 c0       	rjmp	.+98     	; 0x1616 <DIO_u8SendMostNebble+0xe4>
			case DIO_u8_PORTB : DIO_u8_PORTB_REG &= 0x0F; DIO_u8_PORTB_REG |= Copy_u8Status ; break;
    15b4:	a8 e3       	ldi	r26, 0x38	; 56
    15b6:	b0 e0       	ldi	r27, 0x00	; 0
    15b8:	e8 e3       	ldi	r30, 0x38	; 56
    15ba:	f0 e0       	ldi	r31, 0x00	; 0
    15bc:	80 81       	ld	r24, Z
    15be:	8f 70       	andi	r24, 0x0F	; 15
    15c0:	8c 93       	st	X, r24
    15c2:	a8 e3       	ldi	r26, 0x38	; 56
    15c4:	b0 e0       	ldi	r27, 0x00	; 0
    15c6:	e8 e3       	ldi	r30, 0x38	; 56
    15c8:	f0 e0       	ldi	r31, 0x00	; 0
    15ca:	90 81       	ld	r25, Z
    15cc:	8b 81       	ldd	r24, Y+3	; 0x03
    15ce:	89 2b       	or	r24, r25
    15d0:	8c 93       	st	X, r24
    15d2:	21 c0       	rjmp	.+66     	; 0x1616 <DIO_u8SendMostNebble+0xe4>
			case DIO_u8_PORTC : DIO_u8_PORTC_REG &= 0x0F; DIO_u8_PORTC_REG |= Copy_u8Status ; break;
    15d4:	a5 e3       	ldi	r26, 0x35	; 53
    15d6:	b0 e0       	ldi	r27, 0x00	; 0
    15d8:	e5 e3       	ldi	r30, 0x35	; 53
    15da:	f0 e0       	ldi	r31, 0x00	; 0
    15dc:	80 81       	ld	r24, Z
    15de:	8f 70       	andi	r24, 0x0F	; 15
    15e0:	8c 93       	st	X, r24
    15e2:	a5 e3       	ldi	r26, 0x35	; 53
    15e4:	b0 e0       	ldi	r27, 0x00	; 0
    15e6:	e5 e3       	ldi	r30, 0x35	; 53
    15e8:	f0 e0       	ldi	r31, 0x00	; 0
    15ea:	90 81       	ld	r25, Z
    15ec:	8b 81       	ldd	r24, Y+3	; 0x03
    15ee:	89 2b       	or	r24, r25
    15f0:	8c 93       	st	X, r24
    15f2:	11 c0       	rjmp	.+34     	; 0x1616 <DIO_u8SendMostNebble+0xe4>
			case DIO_u8_PORTD : DIO_u8_PORTD_REG &= 0x0F; DIO_u8_PORTC_REG |= Copy_u8Status ; break;
    15f4:	a2 e3       	ldi	r26, 0x32	; 50
    15f6:	b0 e0       	ldi	r27, 0x00	; 0
    15f8:	e2 e3       	ldi	r30, 0x32	; 50
    15fa:	f0 e0       	ldi	r31, 0x00	; 0
    15fc:	80 81       	ld	r24, Z
    15fe:	8f 70       	andi	r24, 0x0F	; 15
    1600:	8c 93       	st	X, r24
    1602:	a5 e3       	ldi	r26, 0x35	; 53
    1604:	b0 e0       	ldi	r27, 0x00	; 0
    1606:	e5 e3       	ldi	r30, 0x35	; 53
    1608:	f0 e0       	ldi	r31, 0x00	; 0
    160a:	90 81       	ld	r25, Z
    160c:	8b 81       	ldd	r24, Y+3	; 0x03
    160e:	89 2b       	or	r24, r25
    1610:	8c 93       	st	X, r24
    1612:	01 c0       	rjmp	.+2      	; 0x1616 <DIO_u8SendMostNebble+0xe4>
        }
	}
    else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
    1614:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErrorState;
    1616:	89 81       	ldd	r24, Y+1	; 0x01
}
    1618:	0f 90       	pop	r0
    161a:	0f 90       	pop	r0
    161c:	0f 90       	pop	r0
    161e:	0f 90       	pop	r0
    1620:	0f 90       	pop	r0
    1622:	cf 91       	pop	r28
    1624:	df 91       	pop	r29
    1626:	08 95       	ret

00001628 <DIO_u8SendLeastNebble>:


u8   DIO_u8SendLeastNebble   (u8 Copy_u8PortId, u8 Copy_u8Status)
{
    1628:	df 93       	push	r29
    162a:	cf 93       	push	r28
    162c:	00 d0       	rcall	.+0      	; 0x162e <DIO_u8SendLeastNebble+0x6>
    162e:	00 d0       	rcall	.+0      	; 0x1630 <DIO_u8SendLeastNebble+0x8>
    1630:	0f 92       	push	r0
    1632:	cd b7       	in	r28, 0x3d	; 61
    1634:	de b7       	in	r29, 0x3e	; 62
    1636:	8a 83       	std	Y+2, r24	; 0x02
    1638:	6b 83       	std	Y+3, r22	; 0x03
	Copy_u8Status &= 0x0F;
    163a:	8b 81       	ldd	r24, Y+3	; 0x03
    163c:	8f 70       	andi	r24, 0x0F	; 15
    163e:	8b 83       	std	Y+3, r24	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    1640:	81 e0       	ldi	r24, 0x01	; 1
    1642:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8PortId <=  DIO_u8_PORTD)
    1644:	8a 81       	ldd	r24, Y+2	; 0x02
    1646:	84 30       	cpi	r24, 0x04	; 4
    1648:	08 f0       	brcs	.+2      	; 0x164c <DIO_u8SendLeastNebble+0x24>
    164a:	5f c0       	rjmp	.+190    	; 0x170a <DIO_u8SendLeastNebble+0xe2>
	{
		switch (Copy_u8PortId)
    164c:	8a 81       	ldd	r24, Y+2	; 0x02
    164e:	28 2f       	mov	r18, r24
    1650:	30 e0       	ldi	r19, 0x00	; 0
    1652:	3d 83       	std	Y+5, r19	; 0x05
    1654:	2c 83       	std	Y+4, r18	; 0x04
    1656:	8c 81       	ldd	r24, Y+4	; 0x04
    1658:	9d 81       	ldd	r25, Y+5	; 0x05
    165a:	81 30       	cpi	r24, 0x01	; 1
    165c:	91 05       	cpc	r25, r1
    165e:	29 f1       	breq	.+74     	; 0x16aa <DIO_u8SendLeastNebble+0x82>
    1660:	2c 81       	ldd	r18, Y+4	; 0x04
    1662:	3d 81       	ldd	r19, Y+5	; 0x05
    1664:	22 30       	cpi	r18, 0x02	; 2
    1666:	31 05       	cpc	r19, r1
    1668:	2c f4       	brge	.+10     	; 0x1674 <DIO_u8SendLeastNebble+0x4c>
    166a:	8c 81       	ldd	r24, Y+4	; 0x04
    166c:	9d 81       	ldd	r25, Y+5	; 0x05
    166e:	00 97       	sbiw	r24, 0x00	; 0
    1670:	61 f0       	breq	.+24     	; 0x168a <DIO_u8SendLeastNebble+0x62>
    1672:	4c c0       	rjmp	.+152    	; 0x170c <DIO_u8SendLeastNebble+0xe4>
    1674:	2c 81       	ldd	r18, Y+4	; 0x04
    1676:	3d 81       	ldd	r19, Y+5	; 0x05
    1678:	22 30       	cpi	r18, 0x02	; 2
    167a:	31 05       	cpc	r19, r1
    167c:	31 f1       	breq	.+76     	; 0x16ca <DIO_u8SendLeastNebble+0xa2>
    167e:	8c 81       	ldd	r24, Y+4	; 0x04
    1680:	9d 81       	ldd	r25, Y+5	; 0x05
    1682:	83 30       	cpi	r24, 0x03	; 3
    1684:	91 05       	cpc	r25, r1
    1686:	89 f1       	breq	.+98     	; 0x16ea <DIO_u8SendLeastNebble+0xc2>
    1688:	41 c0       	rjmp	.+130    	; 0x170c <DIO_u8SendLeastNebble+0xe4>
        {
			case DIO_u8_PORTA : DIO_u8_PORTA_REG &= 0xF0; DIO_u8_PORTA_REG |= Copy_u8Status ; break;
    168a:	ab e3       	ldi	r26, 0x3B	; 59
    168c:	b0 e0       	ldi	r27, 0x00	; 0
    168e:	eb e3       	ldi	r30, 0x3B	; 59
    1690:	f0 e0       	ldi	r31, 0x00	; 0
    1692:	80 81       	ld	r24, Z
    1694:	80 7f       	andi	r24, 0xF0	; 240
    1696:	8c 93       	st	X, r24
    1698:	ab e3       	ldi	r26, 0x3B	; 59
    169a:	b0 e0       	ldi	r27, 0x00	; 0
    169c:	eb e3       	ldi	r30, 0x3B	; 59
    169e:	f0 e0       	ldi	r31, 0x00	; 0
    16a0:	90 81       	ld	r25, Z
    16a2:	8b 81       	ldd	r24, Y+3	; 0x03
    16a4:	89 2b       	or	r24, r25
    16a6:	8c 93       	st	X, r24
    16a8:	31 c0       	rjmp	.+98     	; 0x170c <DIO_u8SendLeastNebble+0xe4>
			case DIO_u8_PORTB : DIO_u8_PORTB_REG &= 0xF0; DIO_u8_PORTB_REG |= Copy_u8Status ; break;
    16aa:	a8 e3       	ldi	r26, 0x38	; 56
    16ac:	b0 e0       	ldi	r27, 0x00	; 0
    16ae:	e8 e3       	ldi	r30, 0x38	; 56
    16b0:	f0 e0       	ldi	r31, 0x00	; 0
    16b2:	80 81       	ld	r24, Z
    16b4:	80 7f       	andi	r24, 0xF0	; 240
    16b6:	8c 93       	st	X, r24
    16b8:	a8 e3       	ldi	r26, 0x38	; 56
    16ba:	b0 e0       	ldi	r27, 0x00	; 0
    16bc:	e8 e3       	ldi	r30, 0x38	; 56
    16be:	f0 e0       	ldi	r31, 0x00	; 0
    16c0:	90 81       	ld	r25, Z
    16c2:	8b 81       	ldd	r24, Y+3	; 0x03
    16c4:	89 2b       	or	r24, r25
    16c6:	8c 93       	st	X, r24
    16c8:	21 c0       	rjmp	.+66     	; 0x170c <DIO_u8SendLeastNebble+0xe4>
			case DIO_u8_PORTC : DIO_u8_PORTC_REG &= 0xF0; DIO_u8_PORTC_REG |= Copy_u8Status ; break;
    16ca:	a5 e3       	ldi	r26, 0x35	; 53
    16cc:	b0 e0       	ldi	r27, 0x00	; 0
    16ce:	e5 e3       	ldi	r30, 0x35	; 53
    16d0:	f0 e0       	ldi	r31, 0x00	; 0
    16d2:	80 81       	ld	r24, Z
    16d4:	80 7f       	andi	r24, 0xF0	; 240
    16d6:	8c 93       	st	X, r24
    16d8:	a5 e3       	ldi	r26, 0x35	; 53
    16da:	b0 e0       	ldi	r27, 0x00	; 0
    16dc:	e5 e3       	ldi	r30, 0x35	; 53
    16de:	f0 e0       	ldi	r31, 0x00	; 0
    16e0:	90 81       	ld	r25, Z
    16e2:	8b 81       	ldd	r24, Y+3	; 0x03
    16e4:	89 2b       	or	r24, r25
    16e6:	8c 93       	st	X, r24
    16e8:	11 c0       	rjmp	.+34     	; 0x170c <DIO_u8SendLeastNebble+0xe4>
			case DIO_u8_PORTD : DIO_u8_PORTD_REG &= 0xF0; DIO_u8_PORTD_REG |= Copy_u8Status ; break;
    16ea:	a2 e3       	ldi	r26, 0x32	; 50
    16ec:	b0 e0       	ldi	r27, 0x00	; 0
    16ee:	e2 e3       	ldi	r30, 0x32	; 50
    16f0:	f0 e0       	ldi	r31, 0x00	; 0
    16f2:	80 81       	ld	r24, Z
    16f4:	80 7f       	andi	r24, 0xF0	; 240
    16f6:	8c 93       	st	X, r24
    16f8:	a2 e3       	ldi	r26, 0x32	; 50
    16fa:	b0 e0       	ldi	r27, 0x00	; 0
    16fc:	e2 e3       	ldi	r30, 0x32	; 50
    16fe:	f0 e0       	ldi	r31, 0x00	; 0
    1700:	90 81       	ld	r25, Z
    1702:	8b 81       	ldd	r24, Y+3	; 0x03
    1704:	89 2b       	or	r24, r25
    1706:	8c 93       	st	X, r24
    1708:	01 c0       	rjmp	.+2      	; 0x170c <DIO_u8SendLeastNebble+0xe4>
        }
	}
    else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
    170a:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErrorState;
    170c:	89 81       	ldd	r24, Y+1	; 0x01
}
    170e:	0f 90       	pop	r0
    1710:	0f 90       	pop	r0
    1712:	0f 90       	pop	r0
    1714:	0f 90       	pop	r0
    1716:	0f 90       	pop	r0
    1718:	cf 91       	pop	r28
    171a:	df 91       	pop	r29
    171c:	08 95       	ret

0000171e <KPD_u8GetKeyState>:
static const u8 KPD_Au8RowsPins[4]={KPD_u8_R1_PIN,KPD_u8_R2_PIN,KPD_u8_R3_PIN,KPD_u8_R4_PIN};

static const u8 KPD_Au8ColsPins[4]={KPD_u8_C1_PIN,KPD_u8_C2_PIN,KPD_u8_C3_PIN,KPD_u8_C4_PIN};

u8 KPD_u8GetKeyState(u8* Copy_pu8ReturnedKey)
{
    171e:	df 93       	push	r29
    1720:	cf 93       	push	r28
    1722:	cd b7       	in	r28, 0x3d	; 61
    1724:	de b7       	in	r29, 0x3e	; 62
    1726:	65 97       	sbiw	r28, 0x15	; 21
    1728:	0f b6       	in	r0, 0x3f	; 63
    172a:	f8 94       	cli
    172c:	de bf       	out	0x3e, r29	; 62
    172e:	0f be       	out	0x3f, r0	; 63
    1730:	cd bf       	out	0x3d, r28	; 61
    1732:	9d 8b       	std	Y+21, r25	; 0x15
    1734:	8c 8b       	std	Y+20, r24	; 0x14
	u8 Local_u8ErrorState = STD_TYPES_OK;
    1736:	81 e0       	ldi	r24, 0x01	; 1
    1738:	8a 8b       	std	Y+18, r24	; 0x12
	u8 Local_u8RowCounter;
	u8 Local_u8ColCounter;
	u8 Local_u8PinValue;
	u8 Local_u8Flag = 0;
    173a:	1f 86       	std	Y+15, r1	; 0x0f
	if(Copy_pu8ReturnedKey != NULL)
    173c:	8c 89       	ldd	r24, Y+20	; 0x14
    173e:	9d 89       	ldd	r25, Y+21	; 0x15
    1740:	00 97       	sbiw	r24, 0x00	; 0
    1742:	09 f4       	brne	.+2      	; 0x1746 <KPD_u8GetKeyState+0x28>
    1744:	f0 c0       	rjmp	.+480    	; 0x1926 <KPD_u8GetKeyState+0x208>
	{
		*Copy_pu8ReturnedKey =KPD_u8_KEY_NOT_PRESSED;
    1746:	ec 89       	ldd	r30, Y+20	; 0x14
    1748:	fd 89       	ldd	r31, Y+21	; 0x15
    174a:	8f ef       	ldi	r24, 0xFF	; 255
    174c:	80 83       	st	Z, r24
		for(Local_u8RowCounter=0 ;Local_u8RowCounter<=3 ;Local_u8RowCounter++)
    174e:	19 8a       	std	Y+17, r1	; 0x11
    1750:	e5 c0       	rjmp	.+458    	; 0x191c <KPD_u8GetKeyState+0x1fe>
		{
			DIO_u8SetPinValue(KPD_u8_ROW_PORT,KPD_Au8RowsPins[Local_u8RowCounter],DIO_u8_LOW);
    1752:	89 89       	ldd	r24, Y+17	; 0x11
    1754:	88 2f       	mov	r24, r24
    1756:	90 e0       	ldi	r25, 0x00	; 0
    1758:	fc 01       	movw	r30, r24
    175a:	ef 55       	subi	r30, 0x5F	; 95
    175c:	ff 4f       	sbci	r31, 0xFF	; 255
    175e:	90 81       	ld	r25, Z
    1760:	82 e0       	ldi	r24, 0x02	; 2
    1762:	69 2f       	mov	r22, r25
    1764:	40 e0       	ldi	r20, 0x00	; 0
    1766:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
			for(Local_u8ColCounter=0 ;Local_u8ColCounter<=3 ;Local_u8ColCounter++)
    176a:	18 8a       	std	Y+16, r1	; 0x10
    176c:	c1 c0       	rjmp	.+386    	; 0x18f0 <KPD_u8GetKeyState+0x1d2>
			{
				DIO_u8GetPinValue(KPD_u8_COL_PORT,KPD_Au8ColsPins[Local_u8ColCounter],&Local_u8PinValue);
    176e:	88 89       	ldd	r24, Y+16	; 0x10
    1770:	88 2f       	mov	r24, r24
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	fc 01       	movw	r30, r24
    1776:	eb 55       	subi	r30, 0x5B	; 91
    1778:	ff 4f       	sbci	r31, 0xFF	; 255
    177a:	90 81       	ld	r25, Z
    177c:	9e 01       	movw	r18, r28
    177e:	2d 5e       	subi	r18, 0xED	; 237
    1780:	3f 4f       	sbci	r19, 0xFF	; 255
    1782:	83 e0       	ldi	r24, 0x03	; 3
    1784:	69 2f       	mov	r22, r25
    1786:	a9 01       	movw	r20, r18
    1788:	0e 94 10 08 	call	0x1020	; 0x1020 <DIO_u8GetPinValue>
				if(Local_u8PinValue == DIO_u8_LOW)
    178c:	8b 89       	ldd	r24, Y+19	; 0x13
    178e:	88 23       	and	r24, r24
    1790:	09 f0       	breq	.+2      	; 0x1794 <KPD_u8GetKeyState+0x76>
    1792:	ab c0       	rjmp	.+342    	; 0x18ea <KPD_u8GetKeyState+0x1cc>
    1794:	80 e0       	ldi	r24, 0x00	; 0
    1796:	90 e0       	ldi	r25, 0x00	; 0
    1798:	a0 ea       	ldi	r26, 0xA0	; 160
    179a:	b1 e4       	ldi	r27, 0x41	; 65
    179c:	8b 87       	std	Y+11, r24	; 0x0b
    179e:	9c 87       	std	Y+12, r25	; 0x0c
    17a0:	ad 87       	std	Y+13, r26	; 0x0d
    17a2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17a4:	6b 85       	ldd	r22, Y+11	; 0x0b
    17a6:	7c 85       	ldd	r23, Y+12	; 0x0c
    17a8:	8d 85       	ldd	r24, Y+13	; 0x0d
    17aa:	9e 85       	ldd	r25, Y+14	; 0x0e
    17ac:	20 e0       	ldi	r18, 0x00	; 0
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	4a ef       	ldi	r20, 0xFA	; 250
    17b2:	54 e4       	ldi	r21, 0x44	; 68
    17b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17b8:	dc 01       	movw	r26, r24
    17ba:	cb 01       	movw	r24, r22
    17bc:	8f 83       	std	Y+7, r24	; 0x07
    17be:	98 87       	std	Y+8, r25	; 0x08
    17c0:	a9 87       	std	Y+9, r26	; 0x09
    17c2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    17c4:	6f 81       	ldd	r22, Y+7	; 0x07
    17c6:	78 85       	ldd	r23, Y+8	; 0x08
    17c8:	89 85       	ldd	r24, Y+9	; 0x09
    17ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    17cc:	20 e0       	ldi	r18, 0x00	; 0
    17ce:	30 e0       	ldi	r19, 0x00	; 0
    17d0:	40 e8       	ldi	r20, 0x80	; 128
    17d2:	5f e3       	ldi	r21, 0x3F	; 63
    17d4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    17d8:	88 23       	and	r24, r24
    17da:	2c f4       	brge	.+10     	; 0x17e6 <KPD_u8GetKeyState+0xc8>
		__ticks = 1;
    17dc:	81 e0       	ldi	r24, 0x01	; 1
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	9e 83       	std	Y+6, r25	; 0x06
    17e2:	8d 83       	std	Y+5, r24	; 0x05
    17e4:	3f c0       	rjmp	.+126    	; 0x1864 <KPD_u8GetKeyState+0x146>
	else if (__tmp > 65535)
    17e6:	6f 81       	ldd	r22, Y+7	; 0x07
    17e8:	78 85       	ldd	r23, Y+8	; 0x08
    17ea:	89 85       	ldd	r24, Y+9	; 0x09
    17ec:	9a 85       	ldd	r25, Y+10	; 0x0a
    17ee:	20 e0       	ldi	r18, 0x00	; 0
    17f0:	3f ef       	ldi	r19, 0xFF	; 255
    17f2:	4f e7       	ldi	r20, 0x7F	; 127
    17f4:	57 e4       	ldi	r21, 0x47	; 71
    17f6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    17fa:	18 16       	cp	r1, r24
    17fc:	4c f5       	brge	.+82     	; 0x1850 <KPD_u8GetKeyState+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17fe:	6b 85       	ldd	r22, Y+11	; 0x0b
    1800:	7c 85       	ldd	r23, Y+12	; 0x0c
    1802:	8d 85       	ldd	r24, Y+13	; 0x0d
    1804:	9e 85       	ldd	r25, Y+14	; 0x0e
    1806:	20 e0       	ldi	r18, 0x00	; 0
    1808:	30 e0       	ldi	r19, 0x00	; 0
    180a:	40 e2       	ldi	r20, 0x20	; 32
    180c:	51 e4       	ldi	r21, 0x41	; 65
    180e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1812:	dc 01       	movw	r26, r24
    1814:	cb 01       	movw	r24, r22
    1816:	bc 01       	movw	r22, r24
    1818:	cd 01       	movw	r24, r26
    181a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    181e:	dc 01       	movw	r26, r24
    1820:	cb 01       	movw	r24, r22
    1822:	9e 83       	std	Y+6, r25	; 0x06
    1824:	8d 83       	std	Y+5, r24	; 0x05
    1826:	0f c0       	rjmp	.+30     	; 0x1846 <KPD_u8GetKeyState+0x128>
    1828:	88 ec       	ldi	r24, 0xC8	; 200
    182a:	90 e0       	ldi	r25, 0x00	; 0
    182c:	9c 83       	std	Y+4, r25	; 0x04
    182e:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1830:	8b 81       	ldd	r24, Y+3	; 0x03
    1832:	9c 81       	ldd	r25, Y+4	; 0x04
    1834:	01 97       	sbiw	r24, 0x01	; 1
    1836:	f1 f7       	brne	.-4      	; 0x1834 <KPD_u8GetKeyState+0x116>
    1838:	9c 83       	std	Y+4, r25	; 0x04
    183a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    183c:	8d 81       	ldd	r24, Y+5	; 0x05
    183e:	9e 81       	ldd	r25, Y+6	; 0x06
    1840:	01 97       	sbiw	r24, 0x01	; 1
    1842:	9e 83       	std	Y+6, r25	; 0x06
    1844:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1846:	8d 81       	ldd	r24, Y+5	; 0x05
    1848:	9e 81       	ldd	r25, Y+6	; 0x06
    184a:	00 97       	sbiw	r24, 0x00	; 0
    184c:	69 f7       	brne	.-38     	; 0x1828 <KPD_u8GetKeyState+0x10a>
    184e:	14 c0       	rjmp	.+40     	; 0x1878 <KPD_u8GetKeyState+0x15a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1850:	6f 81       	ldd	r22, Y+7	; 0x07
    1852:	78 85       	ldd	r23, Y+8	; 0x08
    1854:	89 85       	ldd	r24, Y+9	; 0x09
    1856:	9a 85       	ldd	r25, Y+10	; 0x0a
    1858:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    185c:	dc 01       	movw	r26, r24
    185e:	cb 01       	movw	r24, r22
    1860:	9e 83       	std	Y+6, r25	; 0x06
    1862:	8d 83       	std	Y+5, r24	; 0x05
    1864:	8d 81       	ldd	r24, Y+5	; 0x05
    1866:	9e 81       	ldd	r25, Y+6	; 0x06
    1868:	9a 83       	std	Y+2, r25	; 0x02
    186a:	89 83       	std	Y+1, r24	; 0x01
    186c:	89 81       	ldd	r24, Y+1	; 0x01
    186e:	9a 81       	ldd	r25, Y+2	; 0x02
    1870:	01 97       	sbiw	r24, 0x01	; 1
    1872:	f1 f7       	brne	.-4      	; 0x1870 <KPD_u8GetKeyState+0x152>
    1874:	9a 83       	std	Y+2, r25	; 0x02
    1876:	89 83       	std	Y+1, r24	; 0x01
				{
					/*Debouncing*/
					_delay_ms(20);
					/*Check Agian if Pin Value is Low*/
					DIO_u8GetPinValue(KPD_u8_COL_PORT,KPD_Au8ColsPins[Local_u8ColCounter],&Local_u8PinValue);
    1878:	88 89       	ldd	r24, Y+16	; 0x10
    187a:	88 2f       	mov	r24, r24
    187c:	90 e0       	ldi	r25, 0x00	; 0
    187e:	fc 01       	movw	r30, r24
    1880:	eb 55       	subi	r30, 0x5B	; 91
    1882:	ff 4f       	sbci	r31, 0xFF	; 255
    1884:	90 81       	ld	r25, Z
    1886:	9e 01       	movw	r18, r28
    1888:	2d 5e       	subi	r18, 0xED	; 237
    188a:	3f 4f       	sbci	r19, 0xFF	; 255
    188c:	83 e0       	ldi	r24, 0x03	; 3
    188e:	69 2f       	mov	r22, r25
    1890:	a9 01       	movw	r20, r18
    1892:	0e 94 10 08 	call	0x1020	; 0x1020 <DIO_u8GetPinValue>
    1896:	0f c0       	rjmp	.+30     	; 0x18b6 <KPD_u8GetKeyState+0x198>
					while(Local_u8PinValue == DIO_u8_LOW)
					{
						DIO_u8GetPinValue(KPD_u8_COL_PORT,KPD_Au8ColsPins[Local_u8ColCounter],&Local_u8PinValue);
    1898:	88 89       	ldd	r24, Y+16	; 0x10
    189a:	88 2f       	mov	r24, r24
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	fc 01       	movw	r30, r24
    18a0:	eb 55       	subi	r30, 0x5B	; 91
    18a2:	ff 4f       	sbci	r31, 0xFF	; 255
    18a4:	90 81       	ld	r25, Z
    18a6:	9e 01       	movw	r18, r28
    18a8:	2d 5e       	subi	r18, 0xED	; 237
    18aa:	3f 4f       	sbci	r19, 0xFF	; 255
    18ac:	83 e0       	ldi	r24, 0x03	; 3
    18ae:	69 2f       	mov	r22, r25
    18b0:	a9 01       	movw	r20, r18
    18b2:	0e 94 10 08 	call	0x1020	; 0x1020 <DIO_u8GetPinValue>
				{
					/*Debouncing*/
					_delay_ms(20);
					/*Check Agian if Pin Value is Low*/
					DIO_u8GetPinValue(KPD_u8_COL_PORT,KPD_Au8ColsPins[Local_u8ColCounter],&Local_u8PinValue);
					while(Local_u8PinValue == DIO_u8_LOW)
    18b6:	8b 89       	ldd	r24, Y+19	; 0x13
    18b8:	88 23       	and	r24, r24
    18ba:	71 f3       	breq	.-36     	; 0x1898 <KPD_u8GetKeyState+0x17a>
					{
						DIO_u8GetPinValue(KPD_u8_COL_PORT,KPD_Au8ColsPins[Local_u8ColCounter],&Local_u8PinValue);
					}
					*Copy_pu8ReturnedKey = KPD_Au8Key[Local_u8RowCounter][Local_u8ColCounter];
    18bc:	89 89       	ldd	r24, Y+17	; 0x11
    18be:	48 2f       	mov	r20, r24
    18c0:	50 e0       	ldi	r21, 0x00	; 0
    18c2:	88 89       	ldd	r24, Y+16	; 0x10
    18c4:	28 2f       	mov	r18, r24
    18c6:	30 e0       	ldi	r19, 0x00	; 0
    18c8:	ca 01       	movw	r24, r20
    18ca:	88 0f       	add	r24, r24
    18cc:	99 1f       	adc	r25, r25
    18ce:	88 0f       	add	r24, r24
    18d0:	99 1f       	adc	r25, r25
    18d2:	82 0f       	add	r24, r18
    18d4:	93 1f       	adc	r25, r19
    18d6:	fc 01       	movw	r30, r24
    18d8:	ef 56       	subi	r30, 0x6F	; 111
    18da:	ff 4f       	sbci	r31, 0xFF	; 255
    18dc:	80 81       	ld	r24, Z
    18de:	ec 89       	ldd	r30, Y+20	; 0x14
    18e0:	fd 89       	ldd	r31, Y+21	; 0x15
    18e2:	80 83       	st	Z, r24
					Local_u8Flag = 1;
    18e4:	81 e0       	ldi	r24, 0x01	; 1
    18e6:	8f 87       	std	Y+15, r24	; 0x0f
    18e8:	07 c0       	rjmp	.+14     	; 0x18f8 <KPD_u8GetKeyState+0x1da>
	{
		*Copy_pu8ReturnedKey =KPD_u8_KEY_NOT_PRESSED;
		for(Local_u8RowCounter=0 ;Local_u8RowCounter<=3 ;Local_u8RowCounter++)
		{
			DIO_u8SetPinValue(KPD_u8_ROW_PORT,KPD_Au8RowsPins[Local_u8RowCounter],DIO_u8_LOW);
			for(Local_u8ColCounter=0 ;Local_u8ColCounter<=3 ;Local_u8ColCounter++)
    18ea:	88 89       	ldd	r24, Y+16	; 0x10
    18ec:	8f 5f       	subi	r24, 0xFF	; 255
    18ee:	88 8b       	std	Y+16, r24	; 0x10
    18f0:	88 89       	ldd	r24, Y+16	; 0x10
    18f2:	84 30       	cpi	r24, 0x04	; 4
    18f4:	08 f4       	brcc	.+2      	; 0x18f8 <KPD_u8GetKeyState+0x1da>
    18f6:	3b cf       	rjmp	.-394    	; 0x176e <KPD_u8GetKeyState+0x50>
					*Copy_pu8ReturnedKey = KPD_Au8Key[Local_u8RowCounter][Local_u8ColCounter];
					Local_u8Flag = 1;
					break; 
				}
			}
			DIO_u8SetPinValue(KPD_u8_ROW_PORT,KPD_Au8RowsPins[Local_u8RowCounter],DIO_u8_HIGH);
    18f8:	89 89       	ldd	r24, Y+17	; 0x11
    18fa:	88 2f       	mov	r24, r24
    18fc:	90 e0       	ldi	r25, 0x00	; 0
    18fe:	fc 01       	movw	r30, r24
    1900:	ef 55       	subi	r30, 0x5F	; 95
    1902:	ff 4f       	sbci	r31, 0xFF	; 255
    1904:	90 81       	ld	r25, Z
    1906:	82 e0       	ldi	r24, 0x02	; 2
    1908:	69 2f       	mov	r22, r25
    190a:	41 e0       	ldi	r20, 0x01	; 1
    190c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
			if(Local_u8Flag == 1) 
    1910:	8f 85       	ldd	r24, Y+15	; 0x0f
    1912:	81 30       	cpi	r24, 0x01	; 1
    1914:	49 f0       	breq	.+18     	; 0x1928 <KPD_u8GetKeyState+0x20a>
	u8 Local_u8PinValue;
	u8 Local_u8Flag = 0;
	if(Copy_pu8ReturnedKey != NULL)
	{
		*Copy_pu8ReturnedKey =KPD_u8_KEY_NOT_PRESSED;
		for(Local_u8RowCounter=0 ;Local_u8RowCounter<=3 ;Local_u8RowCounter++)
    1916:	89 89       	ldd	r24, Y+17	; 0x11
    1918:	8f 5f       	subi	r24, 0xFF	; 255
    191a:	89 8b       	std	Y+17, r24	; 0x11
    191c:	89 89       	ldd	r24, Y+17	; 0x11
    191e:	84 30       	cpi	r24, 0x04	; 4
    1920:	08 f4       	brcc	.+2      	; 0x1924 <KPD_u8GetKeyState+0x206>
    1922:	17 cf       	rjmp	.-466    	; 0x1752 <KPD_u8GetKeyState+0x34>
    1924:	01 c0       	rjmp	.+2      	; 0x1928 <KPD_u8GetKeyState+0x20a>
			}	
		}
	}
	else
	{
	  Local_u8ErrorState = STD_TYPES_NOK;
    1926:	1a 8a       	std	Y+18, r1	; 0x12
	}
	return Local_u8ErrorState;
    1928:	8a 89       	ldd	r24, Y+18	; 0x12
	
}
    192a:	65 96       	adiw	r28, 0x15	; 21
    192c:	0f b6       	in	r0, 0x3f	; 63
    192e:	f8 94       	cli
    1930:	de bf       	out	0x3e, r29	; 62
    1932:	0f be       	out	0x3f, r0	; 63
    1934:	cd bf       	out	0x3d, r28	; 61
    1936:	cf 91       	pop	r28
    1938:	df 91       	pop	r29
    193a:	08 95       	ret

0000193c <LCD_voidInit>:
#include "LCD_private.h"
#include "LCD_config.h"

u8 LCD_Data_Pins[4]={LCD_DB4_PIN,LCD_DB5_PIN,LCD_DB6_PIN,LCD_DB7_PIN};
void LCD_voidInit(void)
{
    193c:	0f 93       	push	r16
    193e:	1f 93       	push	r17
    1940:	df 93       	push	r29
    1942:	cf 93       	push	r28
    1944:	cd b7       	in	r28, 0x3d	; 61
    1946:	de b7       	in	r29, 0x3e	; 62
    1948:	ca 50       	subi	r28, 0x0A	; 10
    194a:	d1 40       	sbci	r29, 0x01	; 1
    194c:	0f b6       	in	r0, 0x3f	; 63
    194e:	f8 94       	cli
    1950:	de bf       	out	0x3e, r29	; 62
    1952:	0f be       	out	0x3f, r0	; 63
    1954:	cd bf       	out	0x3d, r28	; 61
    1956:	fe 01       	movw	r30, r28
    1958:	e9 5f       	subi	r30, 0xF9	; 249
    195a:	fe 4f       	sbci	r31, 0xFE	; 254
    195c:	80 e0       	ldi	r24, 0x00	; 0
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	ac e0       	ldi	r26, 0x0C	; 12
    1962:	b2 e4       	ldi	r27, 0x42	; 66
    1964:	80 83       	st	Z, r24
    1966:	91 83       	std	Z+1, r25	; 0x01
    1968:	a2 83       	std	Z+2, r26	; 0x02
    196a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    196c:	8e 01       	movw	r16, r28
    196e:	0d 5f       	subi	r16, 0xFD	; 253
    1970:	1e 4f       	sbci	r17, 0xFE	; 254
    1972:	fe 01       	movw	r30, r28
    1974:	e9 5f       	subi	r30, 0xF9	; 249
    1976:	fe 4f       	sbci	r31, 0xFE	; 254
    1978:	60 81       	ld	r22, Z
    197a:	71 81       	ldd	r23, Z+1	; 0x01
    197c:	82 81       	ldd	r24, Z+2	; 0x02
    197e:	93 81       	ldd	r25, Z+3	; 0x03
    1980:	20 e0       	ldi	r18, 0x00	; 0
    1982:	30 e0       	ldi	r19, 0x00	; 0
    1984:	4a e7       	ldi	r20, 0x7A	; 122
    1986:	55 e4       	ldi	r21, 0x45	; 69
    1988:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    198c:	dc 01       	movw	r26, r24
    198e:	cb 01       	movw	r24, r22
    1990:	f8 01       	movw	r30, r16
    1992:	80 83       	st	Z, r24
    1994:	91 83       	std	Z+1, r25	; 0x01
    1996:	a2 83       	std	Z+2, r26	; 0x02
    1998:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    199a:	fe 01       	movw	r30, r28
    199c:	ed 5f       	subi	r30, 0xFD	; 253
    199e:	fe 4f       	sbci	r31, 0xFE	; 254
    19a0:	60 81       	ld	r22, Z
    19a2:	71 81       	ldd	r23, Z+1	; 0x01
    19a4:	82 81       	ldd	r24, Z+2	; 0x02
    19a6:	93 81       	ldd	r25, Z+3	; 0x03
    19a8:	20 e0       	ldi	r18, 0x00	; 0
    19aa:	30 e0       	ldi	r19, 0x00	; 0
    19ac:	40 e8       	ldi	r20, 0x80	; 128
    19ae:	5f e3       	ldi	r21, 0x3F	; 63
    19b0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    19b4:	88 23       	and	r24, r24
    19b6:	44 f4       	brge	.+16     	; 0x19c8 <LCD_voidInit+0x8c>
		__ticks = 1;
    19b8:	fe 01       	movw	r30, r28
    19ba:	ef 5f       	subi	r30, 0xFF	; 255
    19bc:	fe 4f       	sbci	r31, 0xFE	; 254
    19be:	81 e0       	ldi	r24, 0x01	; 1
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	91 83       	std	Z+1, r25	; 0x01
    19c4:	80 83       	st	Z, r24
    19c6:	64 c0       	rjmp	.+200    	; 0x1a90 <LCD_voidInit+0x154>
	else if (__tmp > 65535)
    19c8:	fe 01       	movw	r30, r28
    19ca:	ed 5f       	subi	r30, 0xFD	; 253
    19cc:	fe 4f       	sbci	r31, 0xFE	; 254
    19ce:	60 81       	ld	r22, Z
    19d0:	71 81       	ldd	r23, Z+1	; 0x01
    19d2:	82 81       	ldd	r24, Z+2	; 0x02
    19d4:	93 81       	ldd	r25, Z+3	; 0x03
    19d6:	20 e0       	ldi	r18, 0x00	; 0
    19d8:	3f ef       	ldi	r19, 0xFF	; 255
    19da:	4f e7       	ldi	r20, 0x7F	; 127
    19dc:	57 e4       	ldi	r21, 0x47	; 71
    19de:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19e2:	18 16       	cp	r1, r24
    19e4:	0c f0       	brlt	.+2      	; 0x19e8 <LCD_voidInit+0xac>
    19e6:	43 c0       	rjmp	.+134    	; 0x1a6e <LCD_voidInit+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19e8:	fe 01       	movw	r30, r28
    19ea:	e9 5f       	subi	r30, 0xF9	; 249
    19ec:	fe 4f       	sbci	r31, 0xFE	; 254
    19ee:	60 81       	ld	r22, Z
    19f0:	71 81       	ldd	r23, Z+1	; 0x01
    19f2:	82 81       	ldd	r24, Z+2	; 0x02
    19f4:	93 81       	ldd	r25, Z+3	; 0x03
    19f6:	20 e0       	ldi	r18, 0x00	; 0
    19f8:	30 e0       	ldi	r19, 0x00	; 0
    19fa:	40 e2       	ldi	r20, 0x20	; 32
    19fc:	51 e4       	ldi	r21, 0x41	; 65
    19fe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a02:	dc 01       	movw	r26, r24
    1a04:	cb 01       	movw	r24, r22
    1a06:	8e 01       	movw	r16, r28
    1a08:	0f 5f       	subi	r16, 0xFF	; 255
    1a0a:	1e 4f       	sbci	r17, 0xFE	; 254
    1a0c:	bc 01       	movw	r22, r24
    1a0e:	cd 01       	movw	r24, r26
    1a10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a14:	dc 01       	movw	r26, r24
    1a16:	cb 01       	movw	r24, r22
    1a18:	f8 01       	movw	r30, r16
    1a1a:	91 83       	std	Z+1, r25	; 0x01
    1a1c:	80 83       	st	Z, r24
    1a1e:	1f c0       	rjmp	.+62     	; 0x1a5e <LCD_voidInit+0x122>
    1a20:	fe 01       	movw	r30, r28
    1a22:	e1 50       	subi	r30, 0x01	; 1
    1a24:	ff 4f       	sbci	r31, 0xFF	; 255
    1a26:	80 e9       	ldi	r24, 0x90	; 144
    1a28:	91 e0       	ldi	r25, 0x01	; 1
    1a2a:	91 83       	std	Z+1, r25	; 0x01
    1a2c:	80 83       	st	Z, r24
    1a2e:	fe 01       	movw	r30, r28
    1a30:	e1 50       	subi	r30, 0x01	; 1
    1a32:	ff 4f       	sbci	r31, 0xFF	; 255
    1a34:	80 81       	ld	r24, Z
    1a36:	91 81       	ldd	r25, Z+1	; 0x01
    1a38:	01 97       	sbiw	r24, 0x01	; 1
    1a3a:	f1 f7       	brne	.-4      	; 0x1a38 <LCD_voidInit+0xfc>
    1a3c:	fe 01       	movw	r30, r28
    1a3e:	e1 50       	subi	r30, 0x01	; 1
    1a40:	ff 4f       	sbci	r31, 0xFF	; 255
    1a42:	91 83       	std	Z+1, r25	; 0x01
    1a44:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a46:	de 01       	movw	r26, r28
    1a48:	af 5f       	subi	r26, 0xFF	; 255
    1a4a:	be 4f       	sbci	r27, 0xFE	; 254
    1a4c:	fe 01       	movw	r30, r28
    1a4e:	ef 5f       	subi	r30, 0xFF	; 255
    1a50:	fe 4f       	sbci	r31, 0xFE	; 254
    1a52:	80 81       	ld	r24, Z
    1a54:	91 81       	ldd	r25, Z+1	; 0x01
    1a56:	01 97       	sbiw	r24, 0x01	; 1
    1a58:	11 96       	adiw	r26, 0x01	; 1
    1a5a:	9c 93       	st	X, r25
    1a5c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a5e:	fe 01       	movw	r30, r28
    1a60:	ef 5f       	subi	r30, 0xFF	; 255
    1a62:	fe 4f       	sbci	r31, 0xFE	; 254
    1a64:	80 81       	ld	r24, Z
    1a66:	91 81       	ldd	r25, Z+1	; 0x01
    1a68:	00 97       	sbiw	r24, 0x00	; 0
    1a6a:	d1 f6       	brne	.-76     	; 0x1a20 <LCD_voidInit+0xe4>
    1a6c:	27 c0       	rjmp	.+78     	; 0x1abc <LCD_voidInit+0x180>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a6e:	8e 01       	movw	r16, r28
    1a70:	0f 5f       	subi	r16, 0xFF	; 255
    1a72:	1e 4f       	sbci	r17, 0xFE	; 254
    1a74:	fe 01       	movw	r30, r28
    1a76:	ed 5f       	subi	r30, 0xFD	; 253
    1a78:	fe 4f       	sbci	r31, 0xFE	; 254
    1a7a:	60 81       	ld	r22, Z
    1a7c:	71 81       	ldd	r23, Z+1	; 0x01
    1a7e:	82 81       	ldd	r24, Z+2	; 0x02
    1a80:	93 81       	ldd	r25, Z+3	; 0x03
    1a82:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a86:	dc 01       	movw	r26, r24
    1a88:	cb 01       	movw	r24, r22
    1a8a:	f8 01       	movw	r30, r16
    1a8c:	91 83       	std	Z+1, r25	; 0x01
    1a8e:	80 83       	st	Z, r24
    1a90:	de 01       	movw	r26, r28
    1a92:	a3 50       	subi	r26, 0x03	; 3
    1a94:	bf 4f       	sbci	r27, 0xFF	; 255
    1a96:	fe 01       	movw	r30, r28
    1a98:	ef 5f       	subi	r30, 0xFF	; 255
    1a9a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a9c:	80 81       	ld	r24, Z
    1a9e:	91 81       	ldd	r25, Z+1	; 0x01
    1aa0:	8d 93       	st	X+, r24
    1aa2:	9c 93       	st	X, r25
    1aa4:	fe 01       	movw	r30, r28
    1aa6:	e3 50       	subi	r30, 0x03	; 3
    1aa8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aaa:	80 81       	ld	r24, Z
    1aac:	91 81       	ldd	r25, Z+1	; 0x01
    1aae:	01 97       	sbiw	r24, 0x01	; 1
    1ab0:	f1 f7       	brne	.-4      	; 0x1aae <LCD_voidInit+0x172>
    1ab2:	fe 01       	movw	r30, r28
    1ab4:	e3 50       	subi	r30, 0x03	; 3
    1ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ab8:	91 83       	std	Z+1, r25	; 0x01
    1aba:	80 83       	st	Z, r24

		_delay_ms(35);
		//FIRST 4 BITS SENT (function set)
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_LOW);
    1abc:	80 e0       	ldi	r24, 0x00	; 0
    1abe:	62 e0       	ldi	r22, 0x02	; 2
    1ac0:	40 e0       	ldi	r20, 0x00	; 0
    1ac2:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_RS_PIN ,DIO_u8_LOW);
    1ac6:	80 e0       	ldi	r24, 0x00	; 0
    1ac8:	63 e0       	ldi	r22, 0x03	; 3
    1aca:	40 e0       	ldi	r20, 0x00	; 0
    1acc:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>

		//FIRST 4 BITS SENT (function set)
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB4_PIN,DIO_u8_LOW);
    1ad0:	81 e0       	ldi	r24, 0x01	; 1
    1ad2:	60 e0       	ldi	r22, 0x00	; 0
    1ad4:	40 e0       	ldi	r20, 0x00	; 0
    1ad6:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB5_PIN,DIO_u8_HIGH);
    1ada:	81 e0       	ldi	r24, 0x01	; 1
    1adc:	61 e0       	ldi	r22, 0x01	; 1
    1ade:	41 e0       	ldi	r20, 0x01	; 1
    1ae0:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB6_PIN,DIO_u8_LOW);
    1ae4:	81 e0       	ldi	r24, 0x01	; 1
    1ae6:	62 e0       	ldi	r22, 0x02	; 2
    1ae8:	40 e0       	ldi	r20, 0x00	; 0
    1aea:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB7_PIN,DIO_u8_LOW);
    1aee:	81 e0       	ldi	r24, 0x01	; 1
    1af0:	64 e0       	ldi	r22, 0x04	; 4
    1af2:	40 e0       	ldi	r20, 0x00	; 0
    1af4:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>



		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_HIGH);
    1af8:	80 e0       	ldi	r24, 0x00	; 0
    1afa:	62 e0       	ldi	r22, 0x02	; 2
    1afc:	41 e0       	ldi	r20, 0x01	; 1
    1afe:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    1b02:	fe 01       	movw	r30, r28
    1b04:	e7 50       	subi	r30, 0x07	; 7
    1b06:	ff 4f       	sbci	r31, 0xFF	; 255
    1b08:	80 e0       	ldi	r24, 0x00	; 0
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	a0 e8       	ldi	r26, 0x80	; 128
    1b0e:	bf e3       	ldi	r27, 0x3F	; 63
    1b10:	80 83       	st	Z, r24
    1b12:	91 83       	std	Z+1, r25	; 0x01
    1b14:	a2 83       	std	Z+2, r26	; 0x02
    1b16:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b18:	8e 01       	movw	r16, r28
    1b1a:	0b 50       	subi	r16, 0x0B	; 11
    1b1c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b1e:	fe 01       	movw	r30, r28
    1b20:	e7 50       	subi	r30, 0x07	; 7
    1b22:	ff 4f       	sbci	r31, 0xFF	; 255
    1b24:	60 81       	ld	r22, Z
    1b26:	71 81       	ldd	r23, Z+1	; 0x01
    1b28:	82 81       	ldd	r24, Z+2	; 0x02
    1b2a:	93 81       	ldd	r25, Z+3	; 0x03
    1b2c:	20 e0       	ldi	r18, 0x00	; 0
    1b2e:	30 e0       	ldi	r19, 0x00	; 0
    1b30:	4a e7       	ldi	r20, 0x7A	; 122
    1b32:	55 e4       	ldi	r21, 0x45	; 69
    1b34:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b38:	dc 01       	movw	r26, r24
    1b3a:	cb 01       	movw	r24, r22
    1b3c:	f8 01       	movw	r30, r16
    1b3e:	80 83       	st	Z, r24
    1b40:	91 83       	std	Z+1, r25	; 0x01
    1b42:	a2 83       	std	Z+2, r26	; 0x02
    1b44:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b46:	fe 01       	movw	r30, r28
    1b48:	eb 50       	subi	r30, 0x0B	; 11
    1b4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b4c:	60 81       	ld	r22, Z
    1b4e:	71 81       	ldd	r23, Z+1	; 0x01
    1b50:	82 81       	ldd	r24, Z+2	; 0x02
    1b52:	93 81       	ldd	r25, Z+3	; 0x03
    1b54:	20 e0       	ldi	r18, 0x00	; 0
    1b56:	30 e0       	ldi	r19, 0x00	; 0
    1b58:	40 e8       	ldi	r20, 0x80	; 128
    1b5a:	5f e3       	ldi	r21, 0x3F	; 63
    1b5c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b60:	88 23       	and	r24, r24
    1b62:	44 f4       	brge	.+16     	; 0x1b74 <LCD_voidInit+0x238>
		__ticks = 1;
    1b64:	fe 01       	movw	r30, r28
    1b66:	ed 50       	subi	r30, 0x0D	; 13
    1b68:	ff 4f       	sbci	r31, 0xFF	; 255
    1b6a:	81 e0       	ldi	r24, 0x01	; 1
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	91 83       	std	Z+1, r25	; 0x01
    1b70:	80 83       	st	Z, r24
    1b72:	64 c0       	rjmp	.+200    	; 0x1c3c <LCD_voidInit+0x300>
	else if (__tmp > 65535)
    1b74:	fe 01       	movw	r30, r28
    1b76:	eb 50       	subi	r30, 0x0B	; 11
    1b78:	ff 4f       	sbci	r31, 0xFF	; 255
    1b7a:	60 81       	ld	r22, Z
    1b7c:	71 81       	ldd	r23, Z+1	; 0x01
    1b7e:	82 81       	ldd	r24, Z+2	; 0x02
    1b80:	93 81       	ldd	r25, Z+3	; 0x03
    1b82:	20 e0       	ldi	r18, 0x00	; 0
    1b84:	3f ef       	ldi	r19, 0xFF	; 255
    1b86:	4f e7       	ldi	r20, 0x7F	; 127
    1b88:	57 e4       	ldi	r21, 0x47	; 71
    1b8a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b8e:	18 16       	cp	r1, r24
    1b90:	0c f0       	brlt	.+2      	; 0x1b94 <LCD_voidInit+0x258>
    1b92:	43 c0       	rjmp	.+134    	; 0x1c1a <LCD_voidInit+0x2de>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b94:	fe 01       	movw	r30, r28
    1b96:	e7 50       	subi	r30, 0x07	; 7
    1b98:	ff 4f       	sbci	r31, 0xFF	; 255
    1b9a:	60 81       	ld	r22, Z
    1b9c:	71 81       	ldd	r23, Z+1	; 0x01
    1b9e:	82 81       	ldd	r24, Z+2	; 0x02
    1ba0:	93 81       	ldd	r25, Z+3	; 0x03
    1ba2:	20 e0       	ldi	r18, 0x00	; 0
    1ba4:	30 e0       	ldi	r19, 0x00	; 0
    1ba6:	40 e2       	ldi	r20, 0x20	; 32
    1ba8:	51 e4       	ldi	r21, 0x41	; 65
    1baa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bae:	dc 01       	movw	r26, r24
    1bb0:	cb 01       	movw	r24, r22
    1bb2:	8e 01       	movw	r16, r28
    1bb4:	0d 50       	subi	r16, 0x0D	; 13
    1bb6:	1f 4f       	sbci	r17, 0xFF	; 255
    1bb8:	bc 01       	movw	r22, r24
    1bba:	cd 01       	movw	r24, r26
    1bbc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bc0:	dc 01       	movw	r26, r24
    1bc2:	cb 01       	movw	r24, r22
    1bc4:	f8 01       	movw	r30, r16
    1bc6:	91 83       	std	Z+1, r25	; 0x01
    1bc8:	80 83       	st	Z, r24
    1bca:	1f c0       	rjmp	.+62     	; 0x1c0a <LCD_voidInit+0x2ce>
    1bcc:	fe 01       	movw	r30, r28
    1bce:	ef 50       	subi	r30, 0x0F	; 15
    1bd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd2:	80 e9       	ldi	r24, 0x90	; 144
    1bd4:	91 e0       	ldi	r25, 0x01	; 1
    1bd6:	91 83       	std	Z+1, r25	; 0x01
    1bd8:	80 83       	st	Z, r24
    1bda:	fe 01       	movw	r30, r28
    1bdc:	ef 50       	subi	r30, 0x0F	; 15
    1bde:	ff 4f       	sbci	r31, 0xFF	; 255
    1be0:	80 81       	ld	r24, Z
    1be2:	91 81       	ldd	r25, Z+1	; 0x01
    1be4:	01 97       	sbiw	r24, 0x01	; 1
    1be6:	f1 f7       	brne	.-4      	; 0x1be4 <LCD_voidInit+0x2a8>
    1be8:	fe 01       	movw	r30, r28
    1bea:	ef 50       	subi	r30, 0x0F	; 15
    1bec:	ff 4f       	sbci	r31, 0xFF	; 255
    1bee:	91 83       	std	Z+1, r25	; 0x01
    1bf0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bf2:	de 01       	movw	r26, r28
    1bf4:	ad 50       	subi	r26, 0x0D	; 13
    1bf6:	bf 4f       	sbci	r27, 0xFF	; 255
    1bf8:	fe 01       	movw	r30, r28
    1bfa:	ed 50       	subi	r30, 0x0D	; 13
    1bfc:	ff 4f       	sbci	r31, 0xFF	; 255
    1bfe:	80 81       	ld	r24, Z
    1c00:	91 81       	ldd	r25, Z+1	; 0x01
    1c02:	01 97       	sbiw	r24, 0x01	; 1
    1c04:	11 96       	adiw	r26, 0x01	; 1
    1c06:	9c 93       	st	X, r25
    1c08:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c0a:	fe 01       	movw	r30, r28
    1c0c:	ed 50       	subi	r30, 0x0D	; 13
    1c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c10:	80 81       	ld	r24, Z
    1c12:	91 81       	ldd	r25, Z+1	; 0x01
    1c14:	00 97       	sbiw	r24, 0x00	; 0
    1c16:	d1 f6       	brne	.-76     	; 0x1bcc <LCD_voidInit+0x290>
    1c18:	27 c0       	rjmp	.+78     	; 0x1c68 <LCD_voidInit+0x32c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c1a:	8e 01       	movw	r16, r28
    1c1c:	0d 50       	subi	r16, 0x0D	; 13
    1c1e:	1f 4f       	sbci	r17, 0xFF	; 255
    1c20:	fe 01       	movw	r30, r28
    1c22:	eb 50       	subi	r30, 0x0B	; 11
    1c24:	ff 4f       	sbci	r31, 0xFF	; 255
    1c26:	60 81       	ld	r22, Z
    1c28:	71 81       	ldd	r23, Z+1	; 0x01
    1c2a:	82 81       	ldd	r24, Z+2	; 0x02
    1c2c:	93 81       	ldd	r25, Z+3	; 0x03
    1c2e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c32:	dc 01       	movw	r26, r24
    1c34:	cb 01       	movw	r24, r22
    1c36:	f8 01       	movw	r30, r16
    1c38:	91 83       	std	Z+1, r25	; 0x01
    1c3a:	80 83       	st	Z, r24
    1c3c:	de 01       	movw	r26, r28
    1c3e:	a1 51       	subi	r26, 0x11	; 17
    1c40:	bf 4f       	sbci	r27, 0xFF	; 255
    1c42:	fe 01       	movw	r30, r28
    1c44:	ed 50       	subi	r30, 0x0D	; 13
    1c46:	ff 4f       	sbci	r31, 0xFF	; 255
    1c48:	80 81       	ld	r24, Z
    1c4a:	91 81       	ldd	r25, Z+1	; 0x01
    1c4c:	8d 93       	st	X+, r24
    1c4e:	9c 93       	st	X, r25
    1c50:	fe 01       	movw	r30, r28
    1c52:	e1 51       	subi	r30, 0x11	; 17
    1c54:	ff 4f       	sbci	r31, 0xFF	; 255
    1c56:	80 81       	ld	r24, Z
    1c58:	91 81       	ldd	r25, Z+1	; 0x01
    1c5a:	01 97       	sbiw	r24, 0x01	; 1
    1c5c:	f1 f7       	brne	.-4      	; 0x1c5a <LCD_voidInit+0x31e>
    1c5e:	fe 01       	movw	r30, r28
    1c60:	e1 51       	subi	r30, 0x11	; 17
    1c62:	ff 4f       	sbci	r31, 0xFF	; 255
    1c64:	91 83       	std	Z+1, r25	; 0x01
    1c66:	80 83       	st	Z, r24
		_delay_ms(1);
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_LOW);
    1c68:	80 e0       	ldi	r24, 0x00	; 0
    1c6a:	62 e0       	ldi	r22, 0x02	; 2
    1c6c:	40 e0       	ldi	r20, 0x00	; 0
    1c6e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_RS_PIN ,DIO_u8_LOW);
    1c72:	80 e0       	ldi	r24, 0x00	; 0
    1c74:	63 e0       	ldi	r22, 0x03	; 3
    1c76:	40 e0       	ldi	r20, 0x00	; 0
    1c78:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    1c7c:	fe 01       	movw	r30, r28
    1c7e:	e5 51       	subi	r30, 0x15	; 21
    1c80:	ff 4f       	sbci	r31, 0xFF	; 255
    1c82:	80 e0       	ldi	r24, 0x00	; 0
    1c84:	90 e0       	ldi	r25, 0x00	; 0
    1c86:	a0 e8       	ldi	r26, 0x80	; 128
    1c88:	bf e3       	ldi	r27, 0x3F	; 63
    1c8a:	80 83       	st	Z, r24
    1c8c:	91 83       	std	Z+1, r25	; 0x01
    1c8e:	a2 83       	std	Z+2, r26	; 0x02
    1c90:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c92:	8e 01       	movw	r16, r28
    1c94:	09 51       	subi	r16, 0x19	; 25
    1c96:	1f 4f       	sbci	r17, 0xFF	; 255
    1c98:	fe 01       	movw	r30, r28
    1c9a:	e5 51       	subi	r30, 0x15	; 21
    1c9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c9e:	60 81       	ld	r22, Z
    1ca0:	71 81       	ldd	r23, Z+1	; 0x01
    1ca2:	82 81       	ldd	r24, Z+2	; 0x02
    1ca4:	93 81       	ldd	r25, Z+3	; 0x03
    1ca6:	20 e0       	ldi	r18, 0x00	; 0
    1ca8:	30 e0       	ldi	r19, 0x00	; 0
    1caa:	4a e7       	ldi	r20, 0x7A	; 122
    1cac:	55 e4       	ldi	r21, 0x45	; 69
    1cae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cb2:	dc 01       	movw	r26, r24
    1cb4:	cb 01       	movw	r24, r22
    1cb6:	f8 01       	movw	r30, r16
    1cb8:	80 83       	st	Z, r24
    1cba:	91 83       	std	Z+1, r25	; 0x01
    1cbc:	a2 83       	std	Z+2, r26	; 0x02
    1cbe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1cc0:	fe 01       	movw	r30, r28
    1cc2:	e9 51       	subi	r30, 0x19	; 25
    1cc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1cc6:	60 81       	ld	r22, Z
    1cc8:	71 81       	ldd	r23, Z+1	; 0x01
    1cca:	82 81       	ldd	r24, Z+2	; 0x02
    1ccc:	93 81       	ldd	r25, Z+3	; 0x03
    1cce:	20 e0       	ldi	r18, 0x00	; 0
    1cd0:	30 e0       	ldi	r19, 0x00	; 0
    1cd2:	40 e8       	ldi	r20, 0x80	; 128
    1cd4:	5f e3       	ldi	r21, 0x3F	; 63
    1cd6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1cda:	88 23       	and	r24, r24
    1cdc:	44 f4       	brge	.+16     	; 0x1cee <LCD_voidInit+0x3b2>
		__ticks = 1;
    1cde:	fe 01       	movw	r30, r28
    1ce0:	eb 51       	subi	r30, 0x1B	; 27
    1ce2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ce4:	81 e0       	ldi	r24, 0x01	; 1
    1ce6:	90 e0       	ldi	r25, 0x00	; 0
    1ce8:	91 83       	std	Z+1, r25	; 0x01
    1cea:	80 83       	st	Z, r24
    1cec:	64 c0       	rjmp	.+200    	; 0x1db6 <LCD_voidInit+0x47a>
	else if (__tmp > 65535)
    1cee:	fe 01       	movw	r30, r28
    1cf0:	e9 51       	subi	r30, 0x19	; 25
    1cf2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf4:	60 81       	ld	r22, Z
    1cf6:	71 81       	ldd	r23, Z+1	; 0x01
    1cf8:	82 81       	ldd	r24, Z+2	; 0x02
    1cfa:	93 81       	ldd	r25, Z+3	; 0x03
    1cfc:	20 e0       	ldi	r18, 0x00	; 0
    1cfe:	3f ef       	ldi	r19, 0xFF	; 255
    1d00:	4f e7       	ldi	r20, 0x7F	; 127
    1d02:	57 e4       	ldi	r21, 0x47	; 71
    1d04:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d08:	18 16       	cp	r1, r24
    1d0a:	0c f0       	brlt	.+2      	; 0x1d0e <LCD_voidInit+0x3d2>
    1d0c:	43 c0       	rjmp	.+134    	; 0x1d94 <LCD_voidInit+0x458>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d0e:	fe 01       	movw	r30, r28
    1d10:	e5 51       	subi	r30, 0x15	; 21
    1d12:	ff 4f       	sbci	r31, 0xFF	; 255
    1d14:	60 81       	ld	r22, Z
    1d16:	71 81       	ldd	r23, Z+1	; 0x01
    1d18:	82 81       	ldd	r24, Z+2	; 0x02
    1d1a:	93 81       	ldd	r25, Z+3	; 0x03
    1d1c:	20 e0       	ldi	r18, 0x00	; 0
    1d1e:	30 e0       	ldi	r19, 0x00	; 0
    1d20:	40 e2       	ldi	r20, 0x20	; 32
    1d22:	51 e4       	ldi	r21, 0x41	; 65
    1d24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d28:	dc 01       	movw	r26, r24
    1d2a:	cb 01       	movw	r24, r22
    1d2c:	8e 01       	movw	r16, r28
    1d2e:	0b 51       	subi	r16, 0x1B	; 27
    1d30:	1f 4f       	sbci	r17, 0xFF	; 255
    1d32:	bc 01       	movw	r22, r24
    1d34:	cd 01       	movw	r24, r26
    1d36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d3a:	dc 01       	movw	r26, r24
    1d3c:	cb 01       	movw	r24, r22
    1d3e:	f8 01       	movw	r30, r16
    1d40:	91 83       	std	Z+1, r25	; 0x01
    1d42:	80 83       	st	Z, r24
    1d44:	1f c0       	rjmp	.+62     	; 0x1d84 <LCD_voidInit+0x448>
    1d46:	fe 01       	movw	r30, r28
    1d48:	ed 51       	subi	r30, 0x1D	; 29
    1d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4c:	80 e9       	ldi	r24, 0x90	; 144
    1d4e:	91 e0       	ldi	r25, 0x01	; 1
    1d50:	91 83       	std	Z+1, r25	; 0x01
    1d52:	80 83       	st	Z, r24
    1d54:	fe 01       	movw	r30, r28
    1d56:	ed 51       	subi	r30, 0x1D	; 29
    1d58:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5a:	80 81       	ld	r24, Z
    1d5c:	91 81       	ldd	r25, Z+1	; 0x01
    1d5e:	01 97       	sbiw	r24, 0x01	; 1
    1d60:	f1 f7       	brne	.-4      	; 0x1d5e <LCD_voidInit+0x422>
    1d62:	fe 01       	movw	r30, r28
    1d64:	ed 51       	subi	r30, 0x1D	; 29
    1d66:	ff 4f       	sbci	r31, 0xFF	; 255
    1d68:	91 83       	std	Z+1, r25	; 0x01
    1d6a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d6c:	de 01       	movw	r26, r28
    1d6e:	ab 51       	subi	r26, 0x1B	; 27
    1d70:	bf 4f       	sbci	r27, 0xFF	; 255
    1d72:	fe 01       	movw	r30, r28
    1d74:	eb 51       	subi	r30, 0x1B	; 27
    1d76:	ff 4f       	sbci	r31, 0xFF	; 255
    1d78:	80 81       	ld	r24, Z
    1d7a:	91 81       	ldd	r25, Z+1	; 0x01
    1d7c:	01 97       	sbiw	r24, 0x01	; 1
    1d7e:	11 96       	adiw	r26, 0x01	; 1
    1d80:	9c 93       	st	X, r25
    1d82:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d84:	fe 01       	movw	r30, r28
    1d86:	eb 51       	subi	r30, 0x1B	; 27
    1d88:	ff 4f       	sbci	r31, 0xFF	; 255
    1d8a:	80 81       	ld	r24, Z
    1d8c:	91 81       	ldd	r25, Z+1	; 0x01
    1d8e:	00 97       	sbiw	r24, 0x00	; 0
    1d90:	d1 f6       	brne	.-76     	; 0x1d46 <LCD_voidInit+0x40a>
    1d92:	27 c0       	rjmp	.+78     	; 0x1de2 <LCD_voidInit+0x4a6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d94:	8e 01       	movw	r16, r28
    1d96:	0b 51       	subi	r16, 0x1B	; 27
    1d98:	1f 4f       	sbci	r17, 0xFF	; 255
    1d9a:	fe 01       	movw	r30, r28
    1d9c:	e9 51       	subi	r30, 0x19	; 25
    1d9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1da0:	60 81       	ld	r22, Z
    1da2:	71 81       	ldd	r23, Z+1	; 0x01
    1da4:	82 81       	ldd	r24, Z+2	; 0x02
    1da6:	93 81       	ldd	r25, Z+3	; 0x03
    1da8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dac:	dc 01       	movw	r26, r24
    1dae:	cb 01       	movw	r24, r22
    1db0:	f8 01       	movw	r30, r16
    1db2:	91 83       	std	Z+1, r25	; 0x01
    1db4:	80 83       	st	Z, r24
    1db6:	de 01       	movw	r26, r28
    1db8:	af 51       	subi	r26, 0x1F	; 31
    1dba:	bf 4f       	sbci	r27, 0xFF	; 255
    1dbc:	fe 01       	movw	r30, r28
    1dbe:	eb 51       	subi	r30, 0x1B	; 27
    1dc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc2:	80 81       	ld	r24, Z
    1dc4:	91 81       	ldd	r25, Z+1	; 0x01
    1dc6:	8d 93       	st	X+, r24
    1dc8:	9c 93       	st	X, r25
    1dca:	fe 01       	movw	r30, r28
    1dcc:	ef 51       	subi	r30, 0x1F	; 31
    1dce:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd0:	80 81       	ld	r24, Z
    1dd2:	91 81       	ldd	r25, Z+1	; 0x01
    1dd4:	01 97       	sbiw	r24, 0x01	; 1
    1dd6:	f1 f7       	brne	.-4      	; 0x1dd4 <LCD_voidInit+0x498>
    1dd8:	fe 01       	movw	r30, r28
    1dda:	ef 51       	subi	r30, 0x1F	; 31
    1ddc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dde:	91 83       	std	Z+1, r25	; 0x01
    1de0:	80 83       	st	Z, r24
		_delay_ms(1);

		//SECOND 4 BITS SENT (function set)
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB4_PIN,DIO_u8_LOW);
    1de2:	81 e0       	ldi	r24, 0x01	; 1
    1de4:	60 e0       	ldi	r22, 0x00	; 0
    1de6:	40 e0       	ldi	r20, 0x00	; 0
    1de8:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB5_PIN,DIO_u8_HIGH);
    1dec:	81 e0       	ldi	r24, 0x01	; 1
    1dee:	61 e0       	ldi	r22, 0x01	; 1
    1df0:	41 e0       	ldi	r20, 0x01	; 1
    1df2:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB6_PIN,DIO_u8_LOW);
    1df6:	81 e0       	ldi	r24, 0x01	; 1
    1df8:	62 e0       	ldi	r22, 0x02	; 2
    1dfa:	40 e0       	ldi	r20, 0x00	; 0
    1dfc:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB7_PIN,DIO_u8_LOW);
    1e00:	81 e0       	ldi	r24, 0x01	; 1
    1e02:	64 e0       	ldi	r22, 0x04	; 4
    1e04:	40 e0       	ldi	r20, 0x00	; 0
    1e06:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>

		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_HIGH);
    1e0a:	80 e0       	ldi	r24, 0x00	; 0
    1e0c:	62 e0       	ldi	r22, 0x02	; 2
    1e0e:	41 e0       	ldi	r20, 0x01	; 1
    1e10:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    1e14:	fe 01       	movw	r30, r28
    1e16:	e3 52       	subi	r30, 0x23	; 35
    1e18:	ff 4f       	sbci	r31, 0xFF	; 255
    1e1a:	80 e0       	ldi	r24, 0x00	; 0
    1e1c:	90 e0       	ldi	r25, 0x00	; 0
    1e1e:	a0 e8       	ldi	r26, 0x80	; 128
    1e20:	bf e3       	ldi	r27, 0x3F	; 63
    1e22:	80 83       	st	Z, r24
    1e24:	91 83       	std	Z+1, r25	; 0x01
    1e26:	a2 83       	std	Z+2, r26	; 0x02
    1e28:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e2a:	8e 01       	movw	r16, r28
    1e2c:	07 52       	subi	r16, 0x27	; 39
    1e2e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e30:	fe 01       	movw	r30, r28
    1e32:	e3 52       	subi	r30, 0x23	; 35
    1e34:	ff 4f       	sbci	r31, 0xFF	; 255
    1e36:	60 81       	ld	r22, Z
    1e38:	71 81       	ldd	r23, Z+1	; 0x01
    1e3a:	82 81       	ldd	r24, Z+2	; 0x02
    1e3c:	93 81       	ldd	r25, Z+3	; 0x03
    1e3e:	20 e0       	ldi	r18, 0x00	; 0
    1e40:	30 e0       	ldi	r19, 0x00	; 0
    1e42:	4a e7       	ldi	r20, 0x7A	; 122
    1e44:	55 e4       	ldi	r21, 0x45	; 69
    1e46:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e4a:	dc 01       	movw	r26, r24
    1e4c:	cb 01       	movw	r24, r22
    1e4e:	f8 01       	movw	r30, r16
    1e50:	80 83       	st	Z, r24
    1e52:	91 83       	std	Z+1, r25	; 0x01
    1e54:	a2 83       	std	Z+2, r26	; 0x02
    1e56:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e58:	fe 01       	movw	r30, r28
    1e5a:	e7 52       	subi	r30, 0x27	; 39
    1e5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e5e:	60 81       	ld	r22, Z
    1e60:	71 81       	ldd	r23, Z+1	; 0x01
    1e62:	82 81       	ldd	r24, Z+2	; 0x02
    1e64:	93 81       	ldd	r25, Z+3	; 0x03
    1e66:	20 e0       	ldi	r18, 0x00	; 0
    1e68:	30 e0       	ldi	r19, 0x00	; 0
    1e6a:	40 e8       	ldi	r20, 0x80	; 128
    1e6c:	5f e3       	ldi	r21, 0x3F	; 63
    1e6e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e72:	88 23       	and	r24, r24
    1e74:	44 f4       	brge	.+16     	; 0x1e86 <LCD_voidInit+0x54a>
		__ticks = 1;
    1e76:	fe 01       	movw	r30, r28
    1e78:	e9 52       	subi	r30, 0x29	; 41
    1e7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e7c:	81 e0       	ldi	r24, 0x01	; 1
    1e7e:	90 e0       	ldi	r25, 0x00	; 0
    1e80:	91 83       	std	Z+1, r25	; 0x01
    1e82:	80 83       	st	Z, r24
    1e84:	64 c0       	rjmp	.+200    	; 0x1f4e <LCD_voidInit+0x612>
	else if (__tmp > 65535)
    1e86:	fe 01       	movw	r30, r28
    1e88:	e7 52       	subi	r30, 0x27	; 39
    1e8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8c:	60 81       	ld	r22, Z
    1e8e:	71 81       	ldd	r23, Z+1	; 0x01
    1e90:	82 81       	ldd	r24, Z+2	; 0x02
    1e92:	93 81       	ldd	r25, Z+3	; 0x03
    1e94:	20 e0       	ldi	r18, 0x00	; 0
    1e96:	3f ef       	ldi	r19, 0xFF	; 255
    1e98:	4f e7       	ldi	r20, 0x7F	; 127
    1e9a:	57 e4       	ldi	r21, 0x47	; 71
    1e9c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ea0:	18 16       	cp	r1, r24
    1ea2:	0c f0       	brlt	.+2      	; 0x1ea6 <LCD_voidInit+0x56a>
    1ea4:	43 c0       	rjmp	.+134    	; 0x1f2c <LCD_voidInit+0x5f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ea6:	fe 01       	movw	r30, r28
    1ea8:	e3 52       	subi	r30, 0x23	; 35
    1eaa:	ff 4f       	sbci	r31, 0xFF	; 255
    1eac:	60 81       	ld	r22, Z
    1eae:	71 81       	ldd	r23, Z+1	; 0x01
    1eb0:	82 81       	ldd	r24, Z+2	; 0x02
    1eb2:	93 81       	ldd	r25, Z+3	; 0x03
    1eb4:	20 e0       	ldi	r18, 0x00	; 0
    1eb6:	30 e0       	ldi	r19, 0x00	; 0
    1eb8:	40 e2       	ldi	r20, 0x20	; 32
    1eba:	51 e4       	ldi	r21, 0x41	; 65
    1ebc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ec0:	dc 01       	movw	r26, r24
    1ec2:	cb 01       	movw	r24, r22
    1ec4:	8e 01       	movw	r16, r28
    1ec6:	09 52       	subi	r16, 0x29	; 41
    1ec8:	1f 4f       	sbci	r17, 0xFF	; 255
    1eca:	bc 01       	movw	r22, r24
    1ecc:	cd 01       	movw	r24, r26
    1ece:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ed2:	dc 01       	movw	r26, r24
    1ed4:	cb 01       	movw	r24, r22
    1ed6:	f8 01       	movw	r30, r16
    1ed8:	91 83       	std	Z+1, r25	; 0x01
    1eda:	80 83       	st	Z, r24
    1edc:	1f c0       	rjmp	.+62     	; 0x1f1c <LCD_voidInit+0x5e0>
    1ede:	fe 01       	movw	r30, r28
    1ee0:	eb 52       	subi	r30, 0x2B	; 43
    1ee2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee4:	80 e9       	ldi	r24, 0x90	; 144
    1ee6:	91 e0       	ldi	r25, 0x01	; 1
    1ee8:	91 83       	std	Z+1, r25	; 0x01
    1eea:	80 83       	st	Z, r24
    1eec:	fe 01       	movw	r30, r28
    1eee:	eb 52       	subi	r30, 0x2B	; 43
    1ef0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef2:	80 81       	ld	r24, Z
    1ef4:	91 81       	ldd	r25, Z+1	; 0x01
    1ef6:	01 97       	sbiw	r24, 0x01	; 1
    1ef8:	f1 f7       	brne	.-4      	; 0x1ef6 <LCD_voidInit+0x5ba>
    1efa:	fe 01       	movw	r30, r28
    1efc:	eb 52       	subi	r30, 0x2B	; 43
    1efe:	ff 4f       	sbci	r31, 0xFF	; 255
    1f00:	91 83       	std	Z+1, r25	; 0x01
    1f02:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f04:	de 01       	movw	r26, r28
    1f06:	a9 52       	subi	r26, 0x29	; 41
    1f08:	bf 4f       	sbci	r27, 0xFF	; 255
    1f0a:	fe 01       	movw	r30, r28
    1f0c:	e9 52       	subi	r30, 0x29	; 41
    1f0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f10:	80 81       	ld	r24, Z
    1f12:	91 81       	ldd	r25, Z+1	; 0x01
    1f14:	01 97       	sbiw	r24, 0x01	; 1
    1f16:	11 96       	adiw	r26, 0x01	; 1
    1f18:	9c 93       	st	X, r25
    1f1a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f1c:	fe 01       	movw	r30, r28
    1f1e:	e9 52       	subi	r30, 0x29	; 41
    1f20:	ff 4f       	sbci	r31, 0xFF	; 255
    1f22:	80 81       	ld	r24, Z
    1f24:	91 81       	ldd	r25, Z+1	; 0x01
    1f26:	00 97       	sbiw	r24, 0x00	; 0
    1f28:	d1 f6       	brne	.-76     	; 0x1ede <LCD_voidInit+0x5a2>
    1f2a:	27 c0       	rjmp	.+78     	; 0x1f7a <LCD_voidInit+0x63e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f2c:	8e 01       	movw	r16, r28
    1f2e:	09 52       	subi	r16, 0x29	; 41
    1f30:	1f 4f       	sbci	r17, 0xFF	; 255
    1f32:	fe 01       	movw	r30, r28
    1f34:	e7 52       	subi	r30, 0x27	; 39
    1f36:	ff 4f       	sbci	r31, 0xFF	; 255
    1f38:	60 81       	ld	r22, Z
    1f3a:	71 81       	ldd	r23, Z+1	; 0x01
    1f3c:	82 81       	ldd	r24, Z+2	; 0x02
    1f3e:	93 81       	ldd	r25, Z+3	; 0x03
    1f40:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f44:	dc 01       	movw	r26, r24
    1f46:	cb 01       	movw	r24, r22
    1f48:	f8 01       	movw	r30, r16
    1f4a:	91 83       	std	Z+1, r25	; 0x01
    1f4c:	80 83       	st	Z, r24
    1f4e:	de 01       	movw	r26, r28
    1f50:	ad 52       	subi	r26, 0x2D	; 45
    1f52:	bf 4f       	sbci	r27, 0xFF	; 255
    1f54:	fe 01       	movw	r30, r28
    1f56:	e9 52       	subi	r30, 0x29	; 41
    1f58:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5a:	80 81       	ld	r24, Z
    1f5c:	91 81       	ldd	r25, Z+1	; 0x01
    1f5e:	8d 93       	st	X+, r24
    1f60:	9c 93       	st	X, r25
    1f62:	fe 01       	movw	r30, r28
    1f64:	ed 52       	subi	r30, 0x2D	; 45
    1f66:	ff 4f       	sbci	r31, 0xFF	; 255
    1f68:	80 81       	ld	r24, Z
    1f6a:	91 81       	ldd	r25, Z+1	; 0x01
    1f6c:	01 97       	sbiw	r24, 0x01	; 1
    1f6e:	f1 f7       	brne	.-4      	; 0x1f6c <LCD_voidInit+0x630>
    1f70:	fe 01       	movw	r30, r28
    1f72:	ed 52       	subi	r30, 0x2D	; 45
    1f74:	ff 4f       	sbci	r31, 0xFF	; 255
    1f76:	91 83       	std	Z+1, r25	; 0x01
    1f78:	80 83       	st	Z, r24
		_delay_ms(1);
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_LOW);
    1f7a:	80 e0       	ldi	r24, 0x00	; 0
    1f7c:	62 e0       	ldi	r22, 0x02	; 2
    1f7e:	40 e0       	ldi	r20, 0x00	; 0
    1f80:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_RS_PIN ,DIO_u8_LOW);
    1f84:	80 e0       	ldi	r24, 0x00	; 0
    1f86:	63 e0       	ldi	r22, 0x03	; 3
    1f88:	40 e0       	ldi	r20, 0x00	; 0
    1f8a:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    1f8e:	fe 01       	movw	r30, r28
    1f90:	e1 53       	subi	r30, 0x31	; 49
    1f92:	ff 4f       	sbci	r31, 0xFF	; 255
    1f94:	80 e0       	ldi	r24, 0x00	; 0
    1f96:	90 e0       	ldi	r25, 0x00	; 0
    1f98:	a0 e8       	ldi	r26, 0x80	; 128
    1f9a:	bf e3       	ldi	r27, 0x3F	; 63
    1f9c:	80 83       	st	Z, r24
    1f9e:	91 83       	std	Z+1, r25	; 0x01
    1fa0:	a2 83       	std	Z+2, r26	; 0x02
    1fa2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fa4:	8e 01       	movw	r16, r28
    1fa6:	05 53       	subi	r16, 0x35	; 53
    1fa8:	1f 4f       	sbci	r17, 0xFF	; 255
    1faa:	fe 01       	movw	r30, r28
    1fac:	e1 53       	subi	r30, 0x31	; 49
    1fae:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb0:	60 81       	ld	r22, Z
    1fb2:	71 81       	ldd	r23, Z+1	; 0x01
    1fb4:	82 81       	ldd	r24, Z+2	; 0x02
    1fb6:	93 81       	ldd	r25, Z+3	; 0x03
    1fb8:	20 e0       	ldi	r18, 0x00	; 0
    1fba:	30 e0       	ldi	r19, 0x00	; 0
    1fbc:	4a e7       	ldi	r20, 0x7A	; 122
    1fbe:	55 e4       	ldi	r21, 0x45	; 69
    1fc0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fc4:	dc 01       	movw	r26, r24
    1fc6:	cb 01       	movw	r24, r22
    1fc8:	f8 01       	movw	r30, r16
    1fca:	80 83       	st	Z, r24
    1fcc:	91 83       	std	Z+1, r25	; 0x01
    1fce:	a2 83       	std	Z+2, r26	; 0x02
    1fd0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1fd2:	fe 01       	movw	r30, r28
    1fd4:	e5 53       	subi	r30, 0x35	; 53
    1fd6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd8:	60 81       	ld	r22, Z
    1fda:	71 81       	ldd	r23, Z+1	; 0x01
    1fdc:	82 81       	ldd	r24, Z+2	; 0x02
    1fde:	93 81       	ldd	r25, Z+3	; 0x03
    1fe0:	20 e0       	ldi	r18, 0x00	; 0
    1fe2:	30 e0       	ldi	r19, 0x00	; 0
    1fe4:	40 e8       	ldi	r20, 0x80	; 128
    1fe6:	5f e3       	ldi	r21, 0x3F	; 63
    1fe8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1fec:	88 23       	and	r24, r24
    1fee:	44 f4       	brge	.+16     	; 0x2000 <LCD_voidInit+0x6c4>
		__ticks = 1;
    1ff0:	fe 01       	movw	r30, r28
    1ff2:	e7 53       	subi	r30, 0x37	; 55
    1ff4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff6:	81 e0       	ldi	r24, 0x01	; 1
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	91 83       	std	Z+1, r25	; 0x01
    1ffc:	80 83       	st	Z, r24
    1ffe:	64 c0       	rjmp	.+200    	; 0x20c8 <LCD_voidInit+0x78c>
	else if (__tmp > 65535)
    2000:	fe 01       	movw	r30, r28
    2002:	e5 53       	subi	r30, 0x35	; 53
    2004:	ff 4f       	sbci	r31, 0xFF	; 255
    2006:	60 81       	ld	r22, Z
    2008:	71 81       	ldd	r23, Z+1	; 0x01
    200a:	82 81       	ldd	r24, Z+2	; 0x02
    200c:	93 81       	ldd	r25, Z+3	; 0x03
    200e:	20 e0       	ldi	r18, 0x00	; 0
    2010:	3f ef       	ldi	r19, 0xFF	; 255
    2012:	4f e7       	ldi	r20, 0x7F	; 127
    2014:	57 e4       	ldi	r21, 0x47	; 71
    2016:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    201a:	18 16       	cp	r1, r24
    201c:	0c f0       	brlt	.+2      	; 0x2020 <LCD_voidInit+0x6e4>
    201e:	43 c0       	rjmp	.+134    	; 0x20a6 <LCD_voidInit+0x76a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2020:	fe 01       	movw	r30, r28
    2022:	e1 53       	subi	r30, 0x31	; 49
    2024:	ff 4f       	sbci	r31, 0xFF	; 255
    2026:	60 81       	ld	r22, Z
    2028:	71 81       	ldd	r23, Z+1	; 0x01
    202a:	82 81       	ldd	r24, Z+2	; 0x02
    202c:	93 81       	ldd	r25, Z+3	; 0x03
    202e:	20 e0       	ldi	r18, 0x00	; 0
    2030:	30 e0       	ldi	r19, 0x00	; 0
    2032:	40 e2       	ldi	r20, 0x20	; 32
    2034:	51 e4       	ldi	r21, 0x41	; 65
    2036:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    203a:	dc 01       	movw	r26, r24
    203c:	cb 01       	movw	r24, r22
    203e:	8e 01       	movw	r16, r28
    2040:	07 53       	subi	r16, 0x37	; 55
    2042:	1f 4f       	sbci	r17, 0xFF	; 255
    2044:	bc 01       	movw	r22, r24
    2046:	cd 01       	movw	r24, r26
    2048:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    204c:	dc 01       	movw	r26, r24
    204e:	cb 01       	movw	r24, r22
    2050:	f8 01       	movw	r30, r16
    2052:	91 83       	std	Z+1, r25	; 0x01
    2054:	80 83       	st	Z, r24
    2056:	1f c0       	rjmp	.+62     	; 0x2096 <LCD_voidInit+0x75a>
    2058:	fe 01       	movw	r30, r28
    205a:	e9 53       	subi	r30, 0x39	; 57
    205c:	ff 4f       	sbci	r31, 0xFF	; 255
    205e:	80 e9       	ldi	r24, 0x90	; 144
    2060:	91 e0       	ldi	r25, 0x01	; 1
    2062:	91 83       	std	Z+1, r25	; 0x01
    2064:	80 83       	st	Z, r24
    2066:	fe 01       	movw	r30, r28
    2068:	e9 53       	subi	r30, 0x39	; 57
    206a:	ff 4f       	sbci	r31, 0xFF	; 255
    206c:	80 81       	ld	r24, Z
    206e:	91 81       	ldd	r25, Z+1	; 0x01
    2070:	01 97       	sbiw	r24, 0x01	; 1
    2072:	f1 f7       	brne	.-4      	; 0x2070 <LCD_voidInit+0x734>
    2074:	fe 01       	movw	r30, r28
    2076:	e9 53       	subi	r30, 0x39	; 57
    2078:	ff 4f       	sbci	r31, 0xFF	; 255
    207a:	91 83       	std	Z+1, r25	; 0x01
    207c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    207e:	de 01       	movw	r26, r28
    2080:	a7 53       	subi	r26, 0x37	; 55
    2082:	bf 4f       	sbci	r27, 0xFF	; 255
    2084:	fe 01       	movw	r30, r28
    2086:	e7 53       	subi	r30, 0x37	; 55
    2088:	ff 4f       	sbci	r31, 0xFF	; 255
    208a:	80 81       	ld	r24, Z
    208c:	91 81       	ldd	r25, Z+1	; 0x01
    208e:	01 97       	sbiw	r24, 0x01	; 1
    2090:	11 96       	adiw	r26, 0x01	; 1
    2092:	9c 93       	st	X, r25
    2094:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2096:	fe 01       	movw	r30, r28
    2098:	e7 53       	subi	r30, 0x37	; 55
    209a:	ff 4f       	sbci	r31, 0xFF	; 255
    209c:	80 81       	ld	r24, Z
    209e:	91 81       	ldd	r25, Z+1	; 0x01
    20a0:	00 97       	sbiw	r24, 0x00	; 0
    20a2:	d1 f6       	brne	.-76     	; 0x2058 <LCD_voidInit+0x71c>
    20a4:	27 c0       	rjmp	.+78     	; 0x20f4 <LCD_voidInit+0x7b8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20a6:	8e 01       	movw	r16, r28
    20a8:	07 53       	subi	r16, 0x37	; 55
    20aa:	1f 4f       	sbci	r17, 0xFF	; 255
    20ac:	fe 01       	movw	r30, r28
    20ae:	e5 53       	subi	r30, 0x35	; 53
    20b0:	ff 4f       	sbci	r31, 0xFF	; 255
    20b2:	60 81       	ld	r22, Z
    20b4:	71 81       	ldd	r23, Z+1	; 0x01
    20b6:	82 81       	ldd	r24, Z+2	; 0x02
    20b8:	93 81       	ldd	r25, Z+3	; 0x03
    20ba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20be:	dc 01       	movw	r26, r24
    20c0:	cb 01       	movw	r24, r22
    20c2:	f8 01       	movw	r30, r16
    20c4:	91 83       	std	Z+1, r25	; 0x01
    20c6:	80 83       	st	Z, r24
    20c8:	de 01       	movw	r26, r28
    20ca:	ab 53       	subi	r26, 0x3B	; 59
    20cc:	bf 4f       	sbci	r27, 0xFF	; 255
    20ce:	fe 01       	movw	r30, r28
    20d0:	e7 53       	subi	r30, 0x37	; 55
    20d2:	ff 4f       	sbci	r31, 0xFF	; 255
    20d4:	80 81       	ld	r24, Z
    20d6:	91 81       	ldd	r25, Z+1	; 0x01
    20d8:	8d 93       	st	X+, r24
    20da:	9c 93       	st	X, r25
    20dc:	fe 01       	movw	r30, r28
    20de:	eb 53       	subi	r30, 0x3B	; 59
    20e0:	ff 4f       	sbci	r31, 0xFF	; 255
    20e2:	80 81       	ld	r24, Z
    20e4:	91 81       	ldd	r25, Z+1	; 0x01
    20e6:	01 97       	sbiw	r24, 0x01	; 1
    20e8:	f1 f7       	brne	.-4      	; 0x20e6 <LCD_voidInit+0x7aa>
    20ea:	fe 01       	movw	r30, r28
    20ec:	eb 53       	subi	r30, 0x3B	; 59
    20ee:	ff 4f       	sbci	r31, 0xFF	; 255
    20f0:	91 83       	std	Z+1, r25	; 0x01
    20f2:	80 83       	st	Z, r24
		_delay_ms(1);

		//last 3 bits
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB4_PIN,DIO_u8_LOW);
    20f4:	81 e0       	ldi	r24, 0x01	; 1
    20f6:	60 e0       	ldi	r22, 0x00	; 0
    20f8:	40 e0       	ldi	r20, 0x00	; 0
    20fa:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB5_PIN,DIO_u8_LOW);
    20fe:	81 e0       	ldi	r24, 0x01	; 1
    2100:	61 e0       	ldi	r22, 0x01	; 1
    2102:	40 e0       	ldi	r20, 0x00	; 0
    2104:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB6_PIN,DIO_u8_LOW);
    2108:	81 e0       	ldi	r24, 0x01	; 1
    210a:	62 e0       	ldi	r22, 0x02	; 2
    210c:	40 e0       	ldi	r20, 0x00	; 0
    210e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB7_PIN,DIO_u8_HIGH);
    2112:	81 e0       	ldi	r24, 0x01	; 1
    2114:	64 e0       	ldi	r22, 0x04	; 4
    2116:	41 e0       	ldi	r20, 0x01	; 1
    2118:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>

		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_HIGH);
    211c:	80 e0       	ldi	r24, 0x00	; 0
    211e:	62 e0       	ldi	r22, 0x02	; 2
    2120:	41 e0       	ldi	r20, 0x01	; 1
    2122:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    2126:	fe 01       	movw	r30, r28
    2128:	ef 53       	subi	r30, 0x3F	; 63
    212a:	ff 4f       	sbci	r31, 0xFF	; 255
    212c:	80 e0       	ldi	r24, 0x00	; 0
    212e:	90 e0       	ldi	r25, 0x00	; 0
    2130:	ac e0       	ldi	r26, 0x0C	; 12
    2132:	b2 e4       	ldi	r27, 0x42	; 66
    2134:	80 83       	st	Z, r24
    2136:	91 83       	std	Z+1, r25	; 0x01
    2138:	a2 83       	std	Z+2, r26	; 0x02
    213a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    213c:	8e 01       	movw	r16, r28
    213e:	03 54       	subi	r16, 0x43	; 67
    2140:	1f 4f       	sbci	r17, 0xFF	; 255
    2142:	fe 01       	movw	r30, r28
    2144:	ef 53       	subi	r30, 0x3F	; 63
    2146:	ff 4f       	sbci	r31, 0xFF	; 255
    2148:	60 81       	ld	r22, Z
    214a:	71 81       	ldd	r23, Z+1	; 0x01
    214c:	82 81       	ldd	r24, Z+2	; 0x02
    214e:	93 81       	ldd	r25, Z+3	; 0x03
    2150:	20 e0       	ldi	r18, 0x00	; 0
    2152:	30 e0       	ldi	r19, 0x00	; 0
    2154:	4a e7       	ldi	r20, 0x7A	; 122
    2156:	55 e4       	ldi	r21, 0x45	; 69
    2158:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    215c:	dc 01       	movw	r26, r24
    215e:	cb 01       	movw	r24, r22
    2160:	f8 01       	movw	r30, r16
    2162:	80 83       	st	Z, r24
    2164:	91 83       	std	Z+1, r25	; 0x01
    2166:	a2 83       	std	Z+2, r26	; 0x02
    2168:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    216a:	fe 01       	movw	r30, r28
    216c:	e3 54       	subi	r30, 0x43	; 67
    216e:	ff 4f       	sbci	r31, 0xFF	; 255
    2170:	60 81       	ld	r22, Z
    2172:	71 81       	ldd	r23, Z+1	; 0x01
    2174:	82 81       	ldd	r24, Z+2	; 0x02
    2176:	93 81       	ldd	r25, Z+3	; 0x03
    2178:	20 e0       	ldi	r18, 0x00	; 0
    217a:	30 e0       	ldi	r19, 0x00	; 0
    217c:	40 e8       	ldi	r20, 0x80	; 128
    217e:	5f e3       	ldi	r21, 0x3F	; 63
    2180:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2184:	88 23       	and	r24, r24
    2186:	44 f4       	brge	.+16     	; 0x2198 <LCD_voidInit+0x85c>
		__ticks = 1;
    2188:	fe 01       	movw	r30, r28
    218a:	e5 54       	subi	r30, 0x45	; 69
    218c:	ff 4f       	sbci	r31, 0xFF	; 255
    218e:	81 e0       	ldi	r24, 0x01	; 1
    2190:	90 e0       	ldi	r25, 0x00	; 0
    2192:	91 83       	std	Z+1, r25	; 0x01
    2194:	80 83       	st	Z, r24
    2196:	64 c0       	rjmp	.+200    	; 0x2260 <LCD_voidInit+0x924>
	else if (__tmp > 65535)
    2198:	fe 01       	movw	r30, r28
    219a:	e3 54       	subi	r30, 0x43	; 67
    219c:	ff 4f       	sbci	r31, 0xFF	; 255
    219e:	60 81       	ld	r22, Z
    21a0:	71 81       	ldd	r23, Z+1	; 0x01
    21a2:	82 81       	ldd	r24, Z+2	; 0x02
    21a4:	93 81       	ldd	r25, Z+3	; 0x03
    21a6:	20 e0       	ldi	r18, 0x00	; 0
    21a8:	3f ef       	ldi	r19, 0xFF	; 255
    21aa:	4f e7       	ldi	r20, 0x7F	; 127
    21ac:	57 e4       	ldi	r21, 0x47	; 71
    21ae:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    21b2:	18 16       	cp	r1, r24
    21b4:	0c f0       	brlt	.+2      	; 0x21b8 <LCD_voidInit+0x87c>
    21b6:	43 c0       	rjmp	.+134    	; 0x223e <LCD_voidInit+0x902>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21b8:	fe 01       	movw	r30, r28
    21ba:	ef 53       	subi	r30, 0x3F	; 63
    21bc:	ff 4f       	sbci	r31, 0xFF	; 255
    21be:	60 81       	ld	r22, Z
    21c0:	71 81       	ldd	r23, Z+1	; 0x01
    21c2:	82 81       	ldd	r24, Z+2	; 0x02
    21c4:	93 81       	ldd	r25, Z+3	; 0x03
    21c6:	20 e0       	ldi	r18, 0x00	; 0
    21c8:	30 e0       	ldi	r19, 0x00	; 0
    21ca:	40 e2       	ldi	r20, 0x20	; 32
    21cc:	51 e4       	ldi	r21, 0x41	; 65
    21ce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21d2:	dc 01       	movw	r26, r24
    21d4:	cb 01       	movw	r24, r22
    21d6:	8e 01       	movw	r16, r28
    21d8:	05 54       	subi	r16, 0x45	; 69
    21da:	1f 4f       	sbci	r17, 0xFF	; 255
    21dc:	bc 01       	movw	r22, r24
    21de:	cd 01       	movw	r24, r26
    21e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21e4:	dc 01       	movw	r26, r24
    21e6:	cb 01       	movw	r24, r22
    21e8:	f8 01       	movw	r30, r16
    21ea:	91 83       	std	Z+1, r25	; 0x01
    21ec:	80 83       	st	Z, r24
    21ee:	1f c0       	rjmp	.+62     	; 0x222e <LCD_voidInit+0x8f2>
    21f0:	fe 01       	movw	r30, r28
    21f2:	e7 54       	subi	r30, 0x47	; 71
    21f4:	ff 4f       	sbci	r31, 0xFF	; 255
    21f6:	80 e9       	ldi	r24, 0x90	; 144
    21f8:	91 e0       	ldi	r25, 0x01	; 1
    21fa:	91 83       	std	Z+1, r25	; 0x01
    21fc:	80 83       	st	Z, r24
    21fe:	fe 01       	movw	r30, r28
    2200:	e7 54       	subi	r30, 0x47	; 71
    2202:	ff 4f       	sbci	r31, 0xFF	; 255
    2204:	80 81       	ld	r24, Z
    2206:	91 81       	ldd	r25, Z+1	; 0x01
    2208:	01 97       	sbiw	r24, 0x01	; 1
    220a:	f1 f7       	brne	.-4      	; 0x2208 <LCD_voidInit+0x8cc>
    220c:	fe 01       	movw	r30, r28
    220e:	e7 54       	subi	r30, 0x47	; 71
    2210:	ff 4f       	sbci	r31, 0xFF	; 255
    2212:	91 83       	std	Z+1, r25	; 0x01
    2214:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2216:	de 01       	movw	r26, r28
    2218:	a5 54       	subi	r26, 0x45	; 69
    221a:	bf 4f       	sbci	r27, 0xFF	; 255
    221c:	fe 01       	movw	r30, r28
    221e:	e5 54       	subi	r30, 0x45	; 69
    2220:	ff 4f       	sbci	r31, 0xFF	; 255
    2222:	80 81       	ld	r24, Z
    2224:	91 81       	ldd	r25, Z+1	; 0x01
    2226:	01 97       	sbiw	r24, 0x01	; 1
    2228:	11 96       	adiw	r26, 0x01	; 1
    222a:	9c 93       	st	X, r25
    222c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    222e:	fe 01       	movw	r30, r28
    2230:	e5 54       	subi	r30, 0x45	; 69
    2232:	ff 4f       	sbci	r31, 0xFF	; 255
    2234:	80 81       	ld	r24, Z
    2236:	91 81       	ldd	r25, Z+1	; 0x01
    2238:	00 97       	sbiw	r24, 0x00	; 0
    223a:	d1 f6       	brne	.-76     	; 0x21f0 <LCD_voidInit+0x8b4>
    223c:	27 c0       	rjmp	.+78     	; 0x228c <LCD_voidInit+0x950>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    223e:	8e 01       	movw	r16, r28
    2240:	05 54       	subi	r16, 0x45	; 69
    2242:	1f 4f       	sbci	r17, 0xFF	; 255
    2244:	fe 01       	movw	r30, r28
    2246:	e3 54       	subi	r30, 0x43	; 67
    2248:	ff 4f       	sbci	r31, 0xFF	; 255
    224a:	60 81       	ld	r22, Z
    224c:	71 81       	ldd	r23, Z+1	; 0x01
    224e:	82 81       	ldd	r24, Z+2	; 0x02
    2250:	93 81       	ldd	r25, Z+3	; 0x03
    2252:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2256:	dc 01       	movw	r26, r24
    2258:	cb 01       	movw	r24, r22
    225a:	f8 01       	movw	r30, r16
    225c:	91 83       	std	Z+1, r25	; 0x01
    225e:	80 83       	st	Z, r24
    2260:	de 01       	movw	r26, r28
    2262:	a9 54       	subi	r26, 0x49	; 73
    2264:	bf 4f       	sbci	r27, 0xFF	; 255
    2266:	fe 01       	movw	r30, r28
    2268:	e5 54       	subi	r30, 0x45	; 69
    226a:	ff 4f       	sbci	r31, 0xFF	; 255
    226c:	80 81       	ld	r24, Z
    226e:	91 81       	ldd	r25, Z+1	; 0x01
    2270:	8d 93       	st	X+, r24
    2272:	9c 93       	st	X, r25
    2274:	fe 01       	movw	r30, r28
    2276:	e9 54       	subi	r30, 0x49	; 73
    2278:	ff 4f       	sbci	r31, 0xFF	; 255
    227a:	80 81       	ld	r24, Z
    227c:	91 81       	ldd	r25, Z+1	; 0x01
    227e:	01 97       	sbiw	r24, 0x01	; 1
    2280:	f1 f7       	brne	.-4      	; 0x227e <LCD_voidInit+0x942>
    2282:	fe 01       	movw	r30, r28
    2284:	e9 54       	subi	r30, 0x49	; 73
    2286:	ff 4f       	sbci	r31, 0xFF	; 255
    2288:	91 83       	std	Z+1, r25	; 0x01
    228a:	80 83       	st	Z, r24


		_delay_ms(35);
		// FIRST 4 BITS (display on/off control)
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_LOW);
    228c:	80 e0       	ldi	r24, 0x00	; 0
    228e:	62 e0       	ldi	r22, 0x02	; 2
    2290:	40 e0       	ldi	r20, 0x00	; 0
    2292:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_RS_PIN ,DIO_u8_LOW);
    2296:	80 e0       	ldi	r24, 0x00	; 0
    2298:	63 e0       	ldi	r22, 0x03	; 3
    229a:	40 e0       	ldi	r20, 0x00	; 0
    229c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    22a0:	fe 01       	movw	r30, r28
    22a2:	ed 54       	subi	r30, 0x4D	; 77
    22a4:	ff 4f       	sbci	r31, 0xFF	; 255
    22a6:	80 e0       	ldi	r24, 0x00	; 0
    22a8:	90 e0       	ldi	r25, 0x00	; 0
    22aa:	a0 e8       	ldi	r26, 0x80	; 128
    22ac:	bf e3       	ldi	r27, 0x3F	; 63
    22ae:	80 83       	st	Z, r24
    22b0:	91 83       	std	Z+1, r25	; 0x01
    22b2:	a2 83       	std	Z+2, r26	; 0x02
    22b4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22b6:	8e 01       	movw	r16, r28
    22b8:	01 55       	subi	r16, 0x51	; 81
    22ba:	1f 4f       	sbci	r17, 0xFF	; 255
    22bc:	fe 01       	movw	r30, r28
    22be:	ed 54       	subi	r30, 0x4D	; 77
    22c0:	ff 4f       	sbci	r31, 0xFF	; 255
    22c2:	60 81       	ld	r22, Z
    22c4:	71 81       	ldd	r23, Z+1	; 0x01
    22c6:	82 81       	ldd	r24, Z+2	; 0x02
    22c8:	93 81       	ldd	r25, Z+3	; 0x03
    22ca:	20 e0       	ldi	r18, 0x00	; 0
    22cc:	30 e0       	ldi	r19, 0x00	; 0
    22ce:	4a e7       	ldi	r20, 0x7A	; 122
    22d0:	55 e4       	ldi	r21, 0x45	; 69
    22d2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22d6:	dc 01       	movw	r26, r24
    22d8:	cb 01       	movw	r24, r22
    22da:	f8 01       	movw	r30, r16
    22dc:	80 83       	st	Z, r24
    22de:	91 83       	std	Z+1, r25	; 0x01
    22e0:	a2 83       	std	Z+2, r26	; 0x02
    22e2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22e4:	fe 01       	movw	r30, r28
    22e6:	e1 55       	subi	r30, 0x51	; 81
    22e8:	ff 4f       	sbci	r31, 0xFF	; 255
    22ea:	60 81       	ld	r22, Z
    22ec:	71 81       	ldd	r23, Z+1	; 0x01
    22ee:	82 81       	ldd	r24, Z+2	; 0x02
    22f0:	93 81       	ldd	r25, Z+3	; 0x03
    22f2:	20 e0       	ldi	r18, 0x00	; 0
    22f4:	30 e0       	ldi	r19, 0x00	; 0
    22f6:	40 e8       	ldi	r20, 0x80	; 128
    22f8:	5f e3       	ldi	r21, 0x3F	; 63
    22fa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    22fe:	88 23       	and	r24, r24
    2300:	44 f4       	brge	.+16     	; 0x2312 <LCD_voidInit+0x9d6>
		__ticks = 1;
    2302:	fe 01       	movw	r30, r28
    2304:	e3 55       	subi	r30, 0x53	; 83
    2306:	ff 4f       	sbci	r31, 0xFF	; 255
    2308:	81 e0       	ldi	r24, 0x01	; 1
    230a:	90 e0       	ldi	r25, 0x00	; 0
    230c:	91 83       	std	Z+1, r25	; 0x01
    230e:	80 83       	st	Z, r24
    2310:	64 c0       	rjmp	.+200    	; 0x23da <LCD_voidInit+0xa9e>
	else if (__tmp > 65535)
    2312:	fe 01       	movw	r30, r28
    2314:	e1 55       	subi	r30, 0x51	; 81
    2316:	ff 4f       	sbci	r31, 0xFF	; 255
    2318:	60 81       	ld	r22, Z
    231a:	71 81       	ldd	r23, Z+1	; 0x01
    231c:	82 81       	ldd	r24, Z+2	; 0x02
    231e:	93 81       	ldd	r25, Z+3	; 0x03
    2320:	20 e0       	ldi	r18, 0x00	; 0
    2322:	3f ef       	ldi	r19, 0xFF	; 255
    2324:	4f e7       	ldi	r20, 0x7F	; 127
    2326:	57 e4       	ldi	r21, 0x47	; 71
    2328:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    232c:	18 16       	cp	r1, r24
    232e:	0c f0       	brlt	.+2      	; 0x2332 <LCD_voidInit+0x9f6>
    2330:	43 c0       	rjmp	.+134    	; 0x23b8 <LCD_voidInit+0xa7c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2332:	fe 01       	movw	r30, r28
    2334:	ed 54       	subi	r30, 0x4D	; 77
    2336:	ff 4f       	sbci	r31, 0xFF	; 255
    2338:	60 81       	ld	r22, Z
    233a:	71 81       	ldd	r23, Z+1	; 0x01
    233c:	82 81       	ldd	r24, Z+2	; 0x02
    233e:	93 81       	ldd	r25, Z+3	; 0x03
    2340:	20 e0       	ldi	r18, 0x00	; 0
    2342:	30 e0       	ldi	r19, 0x00	; 0
    2344:	40 e2       	ldi	r20, 0x20	; 32
    2346:	51 e4       	ldi	r21, 0x41	; 65
    2348:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    234c:	dc 01       	movw	r26, r24
    234e:	cb 01       	movw	r24, r22
    2350:	8e 01       	movw	r16, r28
    2352:	03 55       	subi	r16, 0x53	; 83
    2354:	1f 4f       	sbci	r17, 0xFF	; 255
    2356:	bc 01       	movw	r22, r24
    2358:	cd 01       	movw	r24, r26
    235a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    235e:	dc 01       	movw	r26, r24
    2360:	cb 01       	movw	r24, r22
    2362:	f8 01       	movw	r30, r16
    2364:	91 83       	std	Z+1, r25	; 0x01
    2366:	80 83       	st	Z, r24
    2368:	1f c0       	rjmp	.+62     	; 0x23a8 <LCD_voidInit+0xa6c>
    236a:	fe 01       	movw	r30, r28
    236c:	e5 55       	subi	r30, 0x55	; 85
    236e:	ff 4f       	sbci	r31, 0xFF	; 255
    2370:	80 e9       	ldi	r24, 0x90	; 144
    2372:	91 e0       	ldi	r25, 0x01	; 1
    2374:	91 83       	std	Z+1, r25	; 0x01
    2376:	80 83       	st	Z, r24
    2378:	fe 01       	movw	r30, r28
    237a:	e5 55       	subi	r30, 0x55	; 85
    237c:	ff 4f       	sbci	r31, 0xFF	; 255
    237e:	80 81       	ld	r24, Z
    2380:	91 81       	ldd	r25, Z+1	; 0x01
    2382:	01 97       	sbiw	r24, 0x01	; 1
    2384:	f1 f7       	brne	.-4      	; 0x2382 <LCD_voidInit+0xa46>
    2386:	fe 01       	movw	r30, r28
    2388:	e5 55       	subi	r30, 0x55	; 85
    238a:	ff 4f       	sbci	r31, 0xFF	; 255
    238c:	91 83       	std	Z+1, r25	; 0x01
    238e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2390:	de 01       	movw	r26, r28
    2392:	a3 55       	subi	r26, 0x53	; 83
    2394:	bf 4f       	sbci	r27, 0xFF	; 255
    2396:	fe 01       	movw	r30, r28
    2398:	e3 55       	subi	r30, 0x53	; 83
    239a:	ff 4f       	sbci	r31, 0xFF	; 255
    239c:	80 81       	ld	r24, Z
    239e:	91 81       	ldd	r25, Z+1	; 0x01
    23a0:	01 97       	sbiw	r24, 0x01	; 1
    23a2:	11 96       	adiw	r26, 0x01	; 1
    23a4:	9c 93       	st	X, r25
    23a6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23a8:	fe 01       	movw	r30, r28
    23aa:	e3 55       	subi	r30, 0x53	; 83
    23ac:	ff 4f       	sbci	r31, 0xFF	; 255
    23ae:	80 81       	ld	r24, Z
    23b0:	91 81       	ldd	r25, Z+1	; 0x01
    23b2:	00 97       	sbiw	r24, 0x00	; 0
    23b4:	d1 f6       	brne	.-76     	; 0x236a <LCD_voidInit+0xa2e>
    23b6:	27 c0       	rjmp	.+78     	; 0x2406 <LCD_voidInit+0xaca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23b8:	8e 01       	movw	r16, r28
    23ba:	03 55       	subi	r16, 0x53	; 83
    23bc:	1f 4f       	sbci	r17, 0xFF	; 255
    23be:	fe 01       	movw	r30, r28
    23c0:	e1 55       	subi	r30, 0x51	; 81
    23c2:	ff 4f       	sbci	r31, 0xFF	; 255
    23c4:	60 81       	ld	r22, Z
    23c6:	71 81       	ldd	r23, Z+1	; 0x01
    23c8:	82 81       	ldd	r24, Z+2	; 0x02
    23ca:	93 81       	ldd	r25, Z+3	; 0x03
    23cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23d0:	dc 01       	movw	r26, r24
    23d2:	cb 01       	movw	r24, r22
    23d4:	f8 01       	movw	r30, r16
    23d6:	91 83       	std	Z+1, r25	; 0x01
    23d8:	80 83       	st	Z, r24
    23da:	de 01       	movw	r26, r28
    23dc:	a7 55       	subi	r26, 0x57	; 87
    23de:	bf 4f       	sbci	r27, 0xFF	; 255
    23e0:	fe 01       	movw	r30, r28
    23e2:	e3 55       	subi	r30, 0x53	; 83
    23e4:	ff 4f       	sbci	r31, 0xFF	; 255
    23e6:	80 81       	ld	r24, Z
    23e8:	91 81       	ldd	r25, Z+1	; 0x01
    23ea:	8d 93       	st	X+, r24
    23ec:	9c 93       	st	X, r25
    23ee:	fe 01       	movw	r30, r28
    23f0:	e7 55       	subi	r30, 0x57	; 87
    23f2:	ff 4f       	sbci	r31, 0xFF	; 255
    23f4:	80 81       	ld	r24, Z
    23f6:	91 81       	ldd	r25, Z+1	; 0x01
    23f8:	01 97       	sbiw	r24, 0x01	; 1
    23fa:	f1 f7       	brne	.-4      	; 0x23f8 <LCD_voidInit+0xabc>
    23fc:	fe 01       	movw	r30, r28
    23fe:	e7 55       	subi	r30, 0x57	; 87
    2400:	ff 4f       	sbci	r31, 0xFF	; 255
    2402:	91 83       	std	Z+1, r25	; 0x01
    2404:	80 83       	st	Z, r24
		_delay_ms(1);
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB4_PIN,DIO_u8_LOW);
    2406:	81 e0       	ldi	r24, 0x01	; 1
    2408:	60 e0       	ldi	r22, 0x00	; 0
    240a:	40 e0       	ldi	r20, 0x00	; 0
    240c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB5_PIN,DIO_u8_LOW);
    2410:	81 e0       	ldi	r24, 0x01	; 1
    2412:	61 e0       	ldi	r22, 0x01	; 1
    2414:	40 e0       	ldi	r20, 0x00	; 0
    2416:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB6_PIN,DIO_u8_LOW);
    241a:	81 e0       	ldi	r24, 0x01	; 1
    241c:	62 e0       	ldi	r22, 0x02	; 2
    241e:	40 e0       	ldi	r20, 0x00	; 0
    2420:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB7_PIN,DIO_u8_LOW);
    2424:	81 e0       	ldi	r24, 0x01	; 1
    2426:	64 e0       	ldi	r22, 0x04	; 4
    2428:	40 e0       	ldi	r20, 0x00	; 0
    242a:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>


		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_HIGH);
    242e:	80 e0       	ldi	r24, 0x00	; 0
    2430:	62 e0       	ldi	r22, 0x02	; 2
    2432:	41 e0       	ldi	r20, 0x01	; 1
    2434:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    2438:	fe 01       	movw	r30, r28
    243a:	eb 55       	subi	r30, 0x5B	; 91
    243c:	ff 4f       	sbci	r31, 0xFF	; 255
    243e:	80 e0       	ldi	r24, 0x00	; 0
    2440:	90 e0       	ldi	r25, 0x00	; 0
    2442:	a0 e8       	ldi	r26, 0x80	; 128
    2444:	bf e3       	ldi	r27, 0x3F	; 63
    2446:	80 83       	st	Z, r24
    2448:	91 83       	std	Z+1, r25	; 0x01
    244a:	a2 83       	std	Z+2, r26	; 0x02
    244c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    244e:	8e 01       	movw	r16, r28
    2450:	0f 55       	subi	r16, 0x5F	; 95
    2452:	1f 4f       	sbci	r17, 0xFF	; 255
    2454:	fe 01       	movw	r30, r28
    2456:	eb 55       	subi	r30, 0x5B	; 91
    2458:	ff 4f       	sbci	r31, 0xFF	; 255
    245a:	60 81       	ld	r22, Z
    245c:	71 81       	ldd	r23, Z+1	; 0x01
    245e:	82 81       	ldd	r24, Z+2	; 0x02
    2460:	93 81       	ldd	r25, Z+3	; 0x03
    2462:	20 e0       	ldi	r18, 0x00	; 0
    2464:	30 e0       	ldi	r19, 0x00	; 0
    2466:	4a e7       	ldi	r20, 0x7A	; 122
    2468:	55 e4       	ldi	r21, 0x45	; 69
    246a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    246e:	dc 01       	movw	r26, r24
    2470:	cb 01       	movw	r24, r22
    2472:	f8 01       	movw	r30, r16
    2474:	80 83       	st	Z, r24
    2476:	91 83       	std	Z+1, r25	; 0x01
    2478:	a2 83       	std	Z+2, r26	; 0x02
    247a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    247c:	fe 01       	movw	r30, r28
    247e:	ef 55       	subi	r30, 0x5F	; 95
    2480:	ff 4f       	sbci	r31, 0xFF	; 255
    2482:	60 81       	ld	r22, Z
    2484:	71 81       	ldd	r23, Z+1	; 0x01
    2486:	82 81       	ldd	r24, Z+2	; 0x02
    2488:	93 81       	ldd	r25, Z+3	; 0x03
    248a:	20 e0       	ldi	r18, 0x00	; 0
    248c:	30 e0       	ldi	r19, 0x00	; 0
    248e:	40 e8       	ldi	r20, 0x80	; 128
    2490:	5f e3       	ldi	r21, 0x3F	; 63
    2492:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2496:	88 23       	and	r24, r24
    2498:	44 f4       	brge	.+16     	; 0x24aa <LCD_voidInit+0xb6e>
		__ticks = 1;
    249a:	fe 01       	movw	r30, r28
    249c:	e1 56       	subi	r30, 0x61	; 97
    249e:	ff 4f       	sbci	r31, 0xFF	; 255
    24a0:	81 e0       	ldi	r24, 0x01	; 1
    24a2:	90 e0       	ldi	r25, 0x00	; 0
    24a4:	91 83       	std	Z+1, r25	; 0x01
    24a6:	80 83       	st	Z, r24
    24a8:	64 c0       	rjmp	.+200    	; 0x2572 <LCD_voidInit+0xc36>
	else if (__tmp > 65535)
    24aa:	fe 01       	movw	r30, r28
    24ac:	ef 55       	subi	r30, 0x5F	; 95
    24ae:	ff 4f       	sbci	r31, 0xFF	; 255
    24b0:	60 81       	ld	r22, Z
    24b2:	71 81       	ldd	r23, Z+1	; 0x01
    24b4:	82 81       	ldd	r24, Z+2	; 0x02
    24b6:	93 81       	ldd	r25, Z+3	; 0x03
    24b8:	20 e0       	ldi	r18, 0x00	; 0
    24ba:	3f ef       	ldi	r19, 0xFF	; 255
    24bc:	4f e7       	ldi	r20, 0x7F	; 127
    24be:	57 e4       	ldi	r21, 0x47	; 71
    24c0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    24c4:	18 16       	cp	r1, r24
    24c6:	0c f0       	brlt	.+2      	; 0x24ca <LCD_voidInit+0xb8e>
    24c8:	43 c0       	rjmp	.+134    	; 0x2550 <LCD_voidInit+0xc14>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24ca:	fe 01       	movw	r30, r28
    24cc:	eb 55       	subi	r30, 0x5B	; 91
    24ce:	ff 4f       	sbci	r31, 0xFF	; 255
    24d0:	60 81       	ld	r22, Z
    24d2:	71 81       	ldd	r23, Z+1	; 0x01
    24d4:	82 81       	ldd	r24, Z+2	; 0x02
    24d6:	93 81       	ldd	r25, Z+3	; 0x03
    24d8:	20 e0       	ldi	r18, 0x00	; 0
    24da:	30 e0       	ldi	r19, 0x00	; 0
    24dc:	40 e2       	ldi	r20, 0x20	; 32
    24de:	51 e4       	ldi	r21, 0x41	; 65
    24e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24e4:	dc 01       	movw	r26, r24
    24e6:	cb 01       	movw	r24, r22
    24e8:	8e 01       	movw	r16, r28
    24ea:	01 56       	subi	r16, 0x61	; 97
    24ec:	1f 4f       	sbci	r17, 0xFF	; 255
    24ee:	bc 01       	movw	r22, r24
    24f0:	cd 01       	movw	r24, r26
    24f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24f6:	dc 01       	movw	r26, r24
    24f8:	cb 01       	movw	r24, r22
    24fa:	f8 01       	movw	r30, r16
    24fc:	91 83       	std	Z+1, r25	; 0x01
    24fe:	80 83       	st	Z, r24
    2500:	1f c0       	rjmp	.+62     	; 0x2540 <LCD_voidInit+0xc04>
    2502:	fe 01       	movw	r30, r28
    2504:	e3 56       	subi	r30, 0x63	; 99
    2506:	ff 4f       	sbci	r31, 0xFF	; 255
    2508:	80 e9       	ldi	r24, 0x90	; 144
    250a:	91 e0       	ldi	r25, 0x01	; 1
    250c:	91 83       	std	Z+1, r25	; 0x01
    250e:	80 83       	st	Z, r24
    2510:	fe 01       	movw	r30, r28
    2512:	e3 56       	subi	r30, 0x63	; 99
    2514:	ff 4f       	sbci	r31, 0xFF	; 255
    2516:	80 81       	ld	r24, Z
    2518:	91 81       	ldd	r25, Z+1	; 0x01
    251a:	01 97       	sbiw	r24, 0x01	; 1
    251c:	f1 f7       	brne	.-4      	; 0x251a <LCD_voidInit+0xbde>
    251e:	fe 01       	movw	r30, r28
    2520:	e3 56       	subi	r30, 0x63	; 99
    2522:	ff 4f       	sbci	r31, 0xFF	; 255
    2524:	91 83       	std	Z+1, r25	; 0x01
    2526:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2528:	de 01       	movw	r26, r28
    252a:	a1 56       	subi	r26, 0x61	; 97
    252c:	bf 4f       	sbci	r27, 0xFF	; 255
    252e:	fe 01       	movw	r30, r28
    2530:	e1 56       	subi	r30, 0x61	; 97
    2532:	ff 4f       	sbci	r31, 0xFF	; 255
    2534:	80 81       	ld	r24, Z
    2536:	91 81       	ldd	r25, Z+1	; 0x01
    2538:	01 97       	sbiw	r24, 0x01	; 1
    253a:	11 96       	adiw	r26, 0x01	; 1
    253c:	9c 93       	st	X, r25
    253e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2540:	fe 01       	movw	r30, r28
    2542:	e1 56       	subi	r30, 0x61	; 97
    2544:	ff 4f       	sbci	r31, 0xFF	; 255
    2546:	80 81       	ld	r24, Z
    2548:	91 81       	ldd	r25, Z+1	; 0x01
    254a:	00 97       	sbiw	r24, 0x00	; 0
    254c:	d1 f6       	brne	.-76     	; 0x2502 <LCD_voidInit+0xbc6>
    254e:	27 c0       	rjmp	.+78     	; 0x259e <LCD_voidInit+0xc62>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2550:	8e 01       	movw	r16, r28
    2552:	01 56       	subi	r16, 0x61	; 97
    2554:	1f 4f       	sbci	r17, 0xFF	; 255
    2556:	fe 01       	movw	r30, r28
    2558:	ef 55       	subi	r30, 0x5F	; 95
    255a:	ff 4f       	sbci	r31, 0xFF	; 255
    255c:	60 81       	ld	r22, Z
    255e:	71 81       	ldd	r23, Z+1	; 0x01
    2560:	82 81       	ldd	r24, Z+2	; 0x02
    2562:	93 81       	ldd	r25, Z+3	; 0x03
    2564:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2568:	dc 01       	movw	r26, r24
    256a:	cb 01       	movw	r24, r22
    256c:	f8 01       	movw	r30, r16
    256e:	91 83       	std	Z+1, r25	; 0x01
    2570:	80 83       	st	Z, r24
    2572:	de 01       	movw	r26, r28
    2574:	a5 56       	subi	r26, 0x65	; 101
    2576:	bf 4f       	sbci	r27, 0xFF	; 255
    2578:	fe 01       	movw	r30, r28
    257a:	e1 56       	subi	r30, 0x61	; 97
    257c:	ff 4f       	sbci	r31, 0xFF	; 255
    257e:	80 81       	ld	r24, Z
    2580:	91 81       	ldd	r25, Z+1	; 0x01
    2582:	8d 93       	st	X+, r24
    2584:	9c 93       	st	X, r25
    2586:	fe 01       	movw	r30, r28
    2588:	e5 56       	subi	r30, 0x65	; 101
    258a:	ff 4f       	sbci	r31, 0xFF	; 255
    258c:	80 81       	ld	r24, Z
    258e:	91 81       	ldd	r25, Z+1	; 0x01
    2590:	01 97       	sbiw	r24, 0x01	; 1
    2592:	f1 f7       	brne	.-4      	; 0x2590 <LCD_voidInit+0xc54>
    2594:	fe 01       	movw	r30, r28
    2596:	e5 56       	subi	r30, 0x65	; 101
    2598:	ff 4f       	sbci	r31, 0xFF	; 255
    259a:	91 83       	std	Z+1, r25	; 0x01
    259c:	80 83       	st	Z, r24
		_delay_ms(1);

		// SECOND 4 BITS (display on/off control)
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_LOW);
    259e:	80 e0       	ldi	r24, 0x00	; 0
    25a0:	62 e0       	ldi	r22, 0x02	; 2
    25a2:	40 e0       	ldi	r20, 0x00	; 0
    25a4:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_RS_PIN ,DIO_u8_LOW);
    25a8:	80 e0       	ldi	r24, 0x00	; 0
    25aa:	63 e0       	ldi	r22, 0x03	; 3
    25ac:	40 e0       	ldi	r20, 0x00	; 0
    25ae:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    25b2:	fe 01       	movw	r30, r28
    25b4:	e9 56       	subi	r30, 0x69	; 105
    25b6:	ff 4f       	sbci	r31, 0xFF	; 255
    25b8:	80 e0       	ldi	r24, 0x00	; 0
    25ba:	90 e0       	ldi	r25, 0x00	; 0
    25bc:	a0 e8       	ldi	r26, 0x80	; 128
    25be:	bf e3       	ldi	r27, 0x3F	; 63
    25c0:	80 83       	st	Z, r24
    25c2:	91 83       	std	Z+1, r25	; 0x01
    25c4:	a2 83       	std	Z+2, r26	; 0x02
    25c6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    25c8:	8e 01       	movw	r16, r28
    25ca:	0d 56       	subi	r16, 0x6D	; 109
    25cc:	1f 4f       	sbci	r17, 0xFF	; 255
    25ce:	fe 01       	movw	r30, r28
    25d0:	e9 56       	subi	r30, 0x69	; 105
    25d2:	ff 4f       	sbci	r31, 0xFF	; 255
    25d4:	60 81       	ld	r22, Z
    25d6:	71 81       	ldd	r23, Z+1	; 0x01
    25d8:	82 81       	ldd	r24, Z+2	; 0x02
    25da:	93 81       	ldd	r25, Z+3	; 0x03
    25dc:	20 e0       	ldi	r18, 0x00	; 0
    25de:	30 e0       	ldi	r19, 0x00	; 0
    25e0:	4a e7       	ldi	r20, 0x7A	; 122
    25e2:	55 e4       	ldi	r21, 0x45	; 69
    25e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25e8:	dc 01       	movw	r26, r24
    25ea:	cb 01       	movw	r24, r22
    25ec:	f8 01       	movw	r30, r16
    25ee:	80 83       	st	Z, r24
    25f0:	91 83       	std	Z+1, r25	; 0x01
    25f2:	a2 83       	std	Z+2, r26	; 0x02
    25f4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    25f6:	fe 01       	movw	r30, r28
    25f8:	ed 56       	subi	r30, 0x6D	; 109
    25fa:	ff 4f       	sbci	r31, 0xFF	; 255
    25fc:	60 81       	ld	r22, Z
    25fe:	71 81       	ldd	r23, Z+1	; 0x01
    2600:	82 81       	ldd	r24, Z+2	; 0x02
    2602:	93 81       	ldd	r25, Z+3	; 0x03
    2604:	20 e0       	ldi	r18, 0x00	; 0
    2606:	30 e0       	ldi	r19, 0x00	; 0
    2608:	40 e8       	ldi	r20, 0x80	; 128
    260a:	5f e3       	ldi	r21, 0x3F	; 63
    260c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2610:	88 23       	and	r24, r24
    2612:	44 f4       	brge	.+16     	; 0x2624 <LCD_voidInit+0xce8>
		__ticks = 1;
    2614:	fe 01       	movw	r30, r28
    2616:	ef 56       	subi	r30, 0x6F	; 111
    2618:	ff 4f       	sbci	r31, 0xFF	; 255
    261a:	81 e0       	ldi	r24, 0x01	; 1
    261c:	90 e0       	ldi	r25, 0x00	; 0
    261e:	91 83       	std	Z+1, r25	; 0x01
    2620:	80 83       	st	Z, r24
    2622:	64 c0       	rjmp	.+200    	; 0x26ec <LCD_voidInit+0xdb0>
	else if (__tmp > 65535)
    2624:	fe 01       	movw	r30, r28
    2626:	ed 56       	subi	r30, 0x6D	; 109
    2628:	ff 4f       	sbci	r31, 0xFF	; 255
    262a:	60 81       	ld	r22, Z
    262c:	71 81       	ldd	r23, Z+1	; 0x01
    262e:	82 81       	ldd	r24, Z+2	; 0x02
    2630:	93 81       	ldd	r25, Z+3	; 0x03
    2632:	20 e0       	ldi	r18, 0x00	; 0
    2634:	3f ef       	ldi	r19, 0xFF	; 255
    2636:	4f e7       	ldi	r20, 0x7F	; 127
    2638:	57 e4       	ldi	r21, 0x47	; 71
    263a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    263e:	18 16       	cp	r1, r24
    2640:	0c f0       	brlt	.+2      	; 0x2644 <LCD_voidInit+0xd08>
    2642:	43 c0       	rjmp	.+134    	; 0x26ca <LCD_voidInit+0xd8e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2644:	fe 01       	movw	r30, r28
    2646:	e9 56       	subi	r30, 0x69	; 105
    2648:	ff 4f       	sbci	r31, 0xFF	; 255
    264a:	60 81       	ld	r22, Z
    264c:	71 81       	ldd	r23, Z+1	; 0x01
    264e:	82 81       	ldd	r24, Z+2	; 0x02
    2650:	93 81       	ldd	r25, Z+3	; 0x03
    2652:	20 e0       	ldi	r18, 0x00	; 0
    2654:	30 e0       	ldi	r19, 0x00	; 0
    2656:	40 e2       	ldi	r20, 0x20	; 32
    2658:	51 e4       	ldi	r21, 0x41	; 65
    265a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    265e:	dc 01       	movw	r26, r24
    2660:	cb 01       	movw	r24, r22
    2662:	8e 01       	movw	r16, r28
    2664:	0f 56       	subi	r16, 0x6F	; 111
    2666:	1f 4f       	sbci	r17, 0xFF	; 255
    2668:	bc 01       	movw	r22, r24
    266a:	cd 01       	movw	r24, r26
    266c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2670:	dc 01       	movw	r26, r24
    2672:	cb 01       	movw	r24, r22
    2674:	f8 01       	movw	r30, r16
    2676:	91 83       	std	Z+1, r25	; 0x01
    2678:	80 83       	st	Z, r24
    267a:	1f c0       	rjmp	.+62     	; 0x26ba <LCD_voidInit+0xd7e>
    267c:	fe 01       	movw	r30, r28
    267e:	e1 57       	subi	r30, 0x71	; 113
    2680:	ff 4f       	sbci	r31, 0xFF	; 255
    2682:	80 e9       	ldi	r24, 0x90	; 144
    2684:	91 e0       	ldi	r25, 0x01	; 1
    2686:	91 83       	std	Z+1, r25	; 0x01
    2688:	80 83       	st	Z, r24
    268a:	fe 01       	movw	r30, r28
    268c:	e1 57       	subi	r30, 0x71	; 113
    268e:	ff 4f       	sbci	r31, 0xFF	; 255
    2690:	80 81       	ld	r24, Z
    2692:	91 81       	ldd	r25, Z+1	; 0x01
    2694:	01 97       	sbiw	r24, 0x01	; 1
    2696:	f1 f7       	brne	.-4      	; 0x2694 <LCD_voidInit+0xd58>
    2698:	fe 01       	movw	r30, r28
    269a:	e1 57       	subi	r30, 0x71	; 113
    269c:	ff 4f       	sbci	r31, 0xFF	; 255
    269e:	91 83       	std	Z+1, r25	; 0x01
    26a0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26a2:	de 01       	movw	r26, r28
    26a4:	af 56       	subi	r26, 0x6F	; 111
    26a6:	bf 4f       	sbci	r27, 0xFF	; 255
    26a8:	fe 01       	movw	r30, r28
    26aa:	ef 56       	subi	r30, 0x6F	; 111
    26ac:	ff 4f       	sbci	r31, 0xFF	; 255
    26ae:	80 81       	ld	r24, Z
    26b0:	91 81       	ldd	r25, Z+1	; 0x01
    26b2:	01 97       	sbiw	r24, 0x01	; 1
    26b4:	11 96       	adiw	r26, 0x01	; 1
    26b6:	9c 93       	st	X, r25
    26b8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26ba:	fe 01       	movw	r30, r28
    26bc:	ef 56       	subi	r30, 0x6F	; 111
    26be:	ff 4f       	sbci	r31, 0xFF	; 255
    26c0:	80 81       	ld	r24, Z
    26c2:	91 81       	ldd	r25, Z+1	; 0x01
    26c4:	00 97       	sbiw	r24, 0x00	; 0
    26c6:	d1 f6       	brne	.-76     	; 0x267c <LCD_voidInit+0xd40>
    26c8:	27 c0       	rjmp	.+78     	; 0x2718 <LCD_voidInit+0xddc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26ca:	8e 01       	movw	r16, r28
    26cc:	0f 56       	subi	r16, 0x6F	; 111
    26ce:	1f 4f       	sbci	r17, 0xFF	; 255
    26d0:	fe 01       	movw	r30, r28
    26d2:	ed 56       	subi	r30, 0x6D	; 109
    26d4:	ff 4f       	sbci	r31, 0xFF	; 255
    26d6:	60 81       	ld	r22, Z
    26d8:	71 81       	ldd	r23, Z+1	; 0x01
    26da:	82 81       	ldd	r24, Z+2	; 0x02
    26dc:	93 81       	ldd	r25, Z+3	; 0x03
    26de:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26e2:	dc 01       	movw	r26, r24
    26e4:	cb 01       	movw	r24, r22
    26e6:	f8 01       	movw	r30, r16
    26e8:	91 83       	std	Z+1, r25	; 0x01
    26ea:	80 83       	st	Z, r24
    26ec:	de 01       	movw	r26, r28
    26ee:	a3 57       	subi	r26, 0x73	; 115
    26f0:	bf 4f       	sbci	r27, 0xFF	; 255
    26f2:	fe 01       	movw	r30, r28
    26f4:	ef 56       	subi	r30, 0x6F	; 111
    26f6:	ff 4f       	sbci	r31, 0xFF	; 255
    26f8:	80 81       	ld	r24, Z
    26fa:	91 81       	ldd	r25, Z+1	; 0x01
    26fc:	8d 93       	st	X+, r24
    26fe:	9c 93       	st	X, r25
    2700:	fe 01       	movw	r30, r28
    2702:	e3 57       	subi	r30, 0x73	; 115
    2704:	ff 4f       	sbci	r31, 0xFF	; 255
    2706:	80 81       	ld	r24, Z
    2708:	91 81       	ldd	r25, Z+1	; 0x01
    270a:	01 97       	sbiw	r24, 0x01	; 1
    270c:	f1 f7       	brne	.-4      	; 0x270a <LCD_voidInit+0xdce>
    270e:	fe 01       	movw	r30, r28
    2710:	e3 57       	subi	r30, 0x73	; 115
    2712:	ff 4f       	sbci	r31, 0xFF	; 255
    2714:	91 83       	std	Z+1, r25	; 0x01
    2716:	80 83       	st	Z, r24
		_delay_ms(1);
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB4_PIN,DIO_u8_LOW); //B
    2718:	81 e0       	ldi	r24, 0x01	; 1
    271a:	60 e0       	ldi	r22, 0x00	; 0
    271c:	40 e0       	ldi	r20, 0x00	; 0
    271e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB5_PIN,DIO_u8_LOW); //C
    2722:	81 e0       	ldi	r24, 0x01	; 1
    2724:	61 e0       	ldi	r22, 0x01	; 1
    2726:	40 e0       	ldi	r20, 0x00	; 0
    2728:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB6_PIN,DIO_u8_HIGH); //D
    272c:	81 e0       	ldi	r24, 0x01	; 1
    272e:	62 e0       	ldi	r22, 0x02	; 2
    2730:	41 e0       	ldi	r20, 0x01	; 1
    2732:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB7_PIN,DIO_u8_HIGH);
    2736:	81 e0       	ldi	r24, 0x01	; 1
    2738:	64 e0       	ldi	r22, 0x04	; 4
    273a:	41 e0       	ldi	r20, 0x01	; 1
    273c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>

		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_HIGH);
    2740:	80 e0       	ldi	r24, 0x00	; 0
    2742:	62 e0       	ldi	r22, 0x02	; 2
    2744:	41 e0       	ldi	r20, 0x01	; 1
    2746:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    274a:	fe 01       	movw	r30, r28
    274c:	e7 57       	subi	r30, 0x77	; 119
    274e:	ff 4f       	sbci	r31, 0xFF	; 255
    2750:	80 e0       	ldi	r24, 0x00	; 0
    2752:	90 e0       	ldi	r25, 0x00	; 0
    2754:	ac e0       	ldi	r26, 0x0C	; 12
    2756:	b2 e4       	ldi	r27, 0x42	; 66
    2758:	80 83       	st	Z, r24
    275a:	91 83       	std	Z+1, r25	; 0x01
    275c:	a2 83       	std	Z+2, r26	; 0x02
    275e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2760:	8e 01       	movw	r16, r28
    2762:	0b 57       	subi	r16, 0x7B	; 123
    2764:	1f 4f       	sbci	r17, 0xFF	; 255
    2766:	fe 01       	movw	r30, r28
    2768:	e7 57       	subi	r30, 0x77	; 119
    276a:	ff 4f       	sbci	r31, 0xFF	; 255
    276c:	60 81       	ld	r22, Z
    276e:	71 81       	ldd	r23, Z+1	; 0x01
    2770:	82 81       	ldd	r24, Z+2	; 0x02
    2772:	93 81       	ldd	r25, Z+3	; 0x03
    2774:	20 e0       	ldi	r18, 0x00	; 0
    2776:	30 e0       	ldi	r19, 0x00	; 0
    2778:	4a e7       	ldi	r20, 0x7A	; 122
    277a:	55 e4       	ldi	r21, 0x45	; 69
    277c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2780:	dc 01       	movw	r26, r24
    2782:	cb 01       	movw	r24, r22
    2784:	f8 01       	movw	r30, r16
    2786:	80 83       	st	Z, r24
    2788:	91 83       	std	Z+1, r25	; 0x01
    278a:	a2 83       	std	Z+2, r26	; 0x02
    278c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    278e:	fe 01       	movw	r30, r28
    2790:	eb 57       	subi	r30, 0x7B	; 123
    2792:	ff 4f       	sbci	r31, 0xFF	; 255
    2794:	60 81       	ld	r22, Z
    2796:	71 81       	ldd	r23, Z+1	; 0x01
    2798:	82 81       	ldd	r24, Z+2	; 0x02
    279a:	93 81       	ldd	r25, Z+3	; 0x03
    279c:	20 e0       	ldi	r18, 0x00	; 0
    279e:	30 e0       	ldi	r19, 0x00	; 0
    27a0:	40 e8       	ldi	r20, 0x80	; 128
    27a2:	5f e3       	ldi	r21, 0x3F	; 63
    27a4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    27a8:	88 23       	and	r24, r24
    27aa:	44 f4       	brge	.+16     	; 0x27bc <LCD_voidInit+0xe80>
		__ticks = 1;
    27ac:	fe 01       	movw	r30, r28
    27ae:	ed 57       	subi	r30, 0x7D	; 125
    27b0:	ff 4f       	sbci	r31, 0xFF	; 255
    27b2:	81 e0       	ldi	r24, 0x01	; 1
    27b4:	90 e0       	ldi	r25, 0x00	; 0
    27b6:	91 83       	std	Z+1, r25	; 0x01
    27b8:	80 83       	st	Z, r24
    27ba:	64 c0       	rjmp	.+200    	; 0x2884 <LCD_voidInit+0xf48>
	else if (__tmp > 65535)
    27bc:	fe 01       	movw	r30, r28
    27be:	eb 57       	subi	r30, 0x7B	; 123
    27c0:	ff 4f       	sbci	r31, 0xFF	; 255
    27c2:	60 81       	ld	r22, Z
    27c4:	71 81       	ldd	r23, Z+1	; 0x01
    27c6:	82 81       	ldd	r24, Z+2	; 0x02
    27c8:	93 81       	ldd	r25, Z+3	; 0x03
    27ca:	20 e0       	ldi	r18, 0x00	; 0
    27cc:	3f ef       	ldi	r19, 0xFF	; 255
    27ce:	4f e7       	ldi	r20, 0x7F	; 127
    27d0:	57 e4       	ldi	r21, 0x47	; 71
    27d2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    27d6:	18 16       	cp	r1, r24
    27d8:	0c f0       	brlt	.+2      	; 0x27dc <LCD_voidInit+0xea0>
    27da:	43 c0       	rjmp	.+134    	; 0x2862 <LCD_voidInit+0xf26>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27dc:	fe 01       	movw	r30, r28
    27de:	e7 57       	subi	r30, 0x77	; 119
    27e0:	ff 4f       	sbci	r31, 0xFF	; 255
    27e2:	60 81       	ld	r22, Z
    27e4:	71 81       	ldd	r23, Z+1	; 0x01
    27e6:	82 81       	ldd	r24, Z+2	; 0x02
    27e8:	93 81       	ldd	r25, Z+3	; 0x03
    27ea:	20 e0       	ldi	r18, 0x00	; 0
    27ec:	30 e0       	ldi	r19, 0x00	; 0
    27ee:	40 e2       	ldi	r20, 0x20	; 32
    27f0:	51 e4       	ldi	r21, 0x41	; 65
    27f2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27f6:	dc 01       	movw	r26, r24
    27f8:	cb 01       	movw	r24, r22
    27fa:	8e 01       	movw	r16, r28
    27fc:	0d 57       	subi	r16, 0x7D	; 125
    27fe:	1f 4f       	sbci	r17, 0xFF	; 255
    2800:	bc 01       	movw	r22, r24
    2802:	cd 01       	movw	r24, r26
    2804:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2808:	dc 01       	movw	r26, r24
    280a:	cb 01       	movw	r24, r22
    280c:	f8 01       	movw	r30, r16
    280e:	91 83       	std	Z+1, r25	; 0x01
    2810:	80 83       	st	Z, r24
    2812:	1f c0       	rjmp	.+62     	; 0x2852 <LCD_voidInit+0xf16>
    2814:	fe 01       	movw	r30, r28
    2816:	ef 57       	subi	r30, 0x7F	; 127
    2818:	ff 4f       	sbci	r31, 0xFF	; 255
    281a:	80 e9       	ldi	r24, 0x90	; 144
    281c:	91 e0       	ldi	r25, 0x01	; 1
    281e:	91 83       	std	Z+1, r25	; 0x01
    2820:	80 83       	st	Z, r24
    2822:	fe 01       	movw	r30, r28
    2824:	ef 57       	subi	r30, 0x7F	; 127
    2826:	ff 4f       	sbci	r31, 0xFF	; 255
    2828:	80 81       	ld	r24, Z
    282a:	91 81       	ldd	r25, Z+1	; 0x01
    282c:	01 97       	sbiw	r24, 0x01	; 1
    282e:	f1 f7       	brne	.-4      	; 0x282c <LCD_voidInit+0xef0>
    2830:	fe 01       	movw	r30, r28
    2832:	ef 57       	subi	r30, 0x7F	; 127
    2834:	ff 4f       	sbci	r31, 0xFF	; 255
    2836:	91 83       	std	Z+1, r25	; 0x01
    2838:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    283a:	de 01       	movw	r26, r28
    283c:	ad 57       	subi	r26, 0x7D	; 125
    283e:	bf 4f       	sbci	r27, 0xFF	; 255
    2840:	fe 01       	movw	r30, r28
    2842:	ed 57       	subi	r30, 0x7D	; 125
    2844:	ff 4f       	sbci	r31, 0xFF	; 255
    2846:	80 81       	ld	r24, Z
    2848:	91 81       	ldd	r25, Z+1	; 0x01
    284a:	01 97       	sbiw	r24, 0x01	; 1
    284c:	11 96       	adiw	r26, 0x01	; 1
    284e:	9c 93       	st	X, r25
    2850:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2852:	fe 01       	movw	r30, r28
    2854:	ed 57       	subi	r30, 0x7D	; 125
    2856:	ff 4f       	sbci	r31, 0xFF	; 255
    2858:	80 81       	ld	r24, Z
    285a:	91 81       	ldd	r25, Z+1	; 0x01
    285c:	00 97       	sbiw	r24, 0x00	; 0
    285e:	d1 f6       	brne	.-76     	; 0x2814 <LCD_voidInit+0xed8>
    2860:	27 c0       	rjmp	.+78     	; 0x28b0 <LCD_voidInit+0xf74>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2862:	8e 01       	movw	r16, r28
    2864:	0d 57       	subi	r16, 0x7D	; 125
    2866:	1f 4f       	sbci	r17, 0xFF	; 255
    2868:	fe 01       	movw	r30, r28
    286a:	eb 57       	subi	r30, 0x7B	; 123
    286c:	ff 4f       	sbci	r31, 0xFF	; 255
    286e:	60 81       	ld	r22, Z
    2870:	71 81       	ldd	r23, Z+1	; 0x01
    2872:	82 81       	ldd	r24, Z+2	; 0x02
    2874:	93 81       	ldd	r25, Z+3	; 0x03
    2876:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    287a:	dc 01       	movw	r26, r24
    287c:	cb 01       	movw	r24, r22
    287e:	f8 01       	movw	r30, r16
    2880:	91 83       	std	Z+1, r25	; 0x01
    2882:	80 83       	st	Z, r24
    2884:	de 01       	movw	r26, r28
    2886:	a1 58       	subi	r26, 0x81	; 129
    2888:	bf 4f       	sbci	r27, 0xFF	; 255
    288a:	fe 01       	movw	r30, r28
    288c:	ed 57       	subi	r30, 0x7D	; 125
    288e:	ff 4f       	sbci	r31, 0xFF	; 255
    2890:	80 81       	ld	r24, Z
    2892:	91 81       	ldd	r25, Z+1	; 0x01
    2894:	8d 93       	st	X+, r24
    2896:	9c 93       	st	X, r25
    2898:	fe 01       	movw	r30, r28
    289a:	e1 58       	subi	r30, 0x81	; 129
    289c:	ff 4f       	sbci	r31, 0xFF	; 255
    289e:	80 81       	ld	r24, Z
    28a0:	91 81       	ldd	r25, Z+1	; 0x01
    28a2:	01 97       	sbiw	r24, 0x01	; 1
    28a4:	f1 f7       	brne	.-4      	; 0x28a2 <LCD_voidInit+0xf66>
    28a6:	fe 01       	movw	r30, r28
    28a8:	e1 58       	subi	r30, 0x81	; 129
    28aa:	ff 4f       	sbci	r31, 0xFF	; 255
    28ac:	91 83       	std	Z+1, r25	; 0x01
    28ae:	80 83       	st	Z, r24
		_delay_ms(35);
		//FIRST 4 BITS (display clear)
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_LOW);
    28b0:	80 e0       	ldi	r24, 0x00	; 0
    28b2:	62 e0       	ldi	r22, 0x02	; 2
    28b4:	40 e0       	ldi	r20, 0x00	; 0
    28b6:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_RS_PIN ,DIO_u8_LOW);
    28ba:	80 e0       	ldi	r24, 0x00	; 0
    28bc:	63 e0       	ldi	r22, 0x03	; 3
    28be:	40 e0       	ldi	r20, 0x00	; 0
    28c0:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    28c4:	fe 01       	movw	r30, r28
    28c6:	e5 58       	subi	r30, 0x85	; 133
    28c8:	ff 4f       	sbci	r31, 0xFF	; 255
    28ca:	80 e0       	ldi	r24, 0x00	; 0
    28cc:	90 e0       	ldi	r25, 0x00	; 0
    28ce:	a0 e8       	ldi	r26, 0x80	; 128
    28d0:	bf e3       	ldi	r27, 0x3F	; 63
    28d2:	80 83       	st	Z, r24
    28d4:	91 83       	std	Z+1, r25	; 0x01
    28d6:	a2 83       	std	Z+2, r26	; 0x02
    28d8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    28da:	8e 01       	movw	r16, r28
    28dc:	09 58       	subi	r16, 0x89	; 137
    28de:	1f 4f       	sbci	r17, 0xFF	; 255
    28e0:	fe 01       	movw	r30, r28
    28e2:	e5 58       	subi	r30, 0x85	; 133
    28e4:	ff 4f       	sbci	r31, 0xFF	; 255
    28e6:	60 81       	ld	r22, Z
    28e8:	71 81       	ldd	r23, Z+1	; 0x01
    28ea:	82 81       	ldd	r24, Z+2	; 0x02
    28ec:	93 81       	ldd	r25, Z+3	; 0x03
    28ee:	20 e0       	ldi	r18, 0x00	; 0
    28f0:	30 e0       	ldi	r19, 0x00	; 0
    28f2:	4a e7       	ldi	r20, 0x7A	; 122
    28f4:	55 e4       	ldi	r21, 0x45	; 69
    28f6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28fa:	dc 01       	movw	r26, r24
    28fc:	cb 01       	movw	r24, r22
    28fe:	f8 01       	movw	r30, r16
    2900:	80 83       	st	Z, r24
    2902:	91 83       	std	Z+1, r25	; 0x01
    2904:	a2 83       	std	Z+2, r26	; 0x02
    2906:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2908:	fe 01       	movw	r30, r28
    290a:	e9 58       	subi	r30, 0x89	; 137
    290c:	ff 4f       	sbci	r31, 0xFF	; 255
    290e:	60 81       	ld	r22, Z
    2910:	71 81       	ldd	r23, Z+1	; 0x01
    2912:	82 81       	ldd	r24, Z+2	; 0x02
    2914:	93 81       	ldd	r25, Z+3	; 0x03
    2916:	20 e0       	ldi	r18, 0x00	; 0
    2918:	30 e0       	ldi	r19, 0x00	; 0
    291a:	40 e8       	ldi	r20, 0x80	; 128
    291c:	5f e3       	ldi	r21, 0x3F	; 63
    291e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2922:	88 23       	and	r24, r24
    2924:	44 f4       	brge	.+16     	; 0x2936 <LCD_voidInit+0xffa>
		__ticks = 1;
    2926:	fe 01       	movw	r30, r28
    2928:	eb 58       	subi	r30, 0x8B	; 139
    292a:	ff 4f       	sbci	r31, 0xFF	; 255
    292c:	81 e0       	ldi	r24, 0x01	; 1
    292e:	90 e0       	ldi	r25, 0x00	; 0
    2930:	91 83       	std	Z+1, r25	; 0x01
    2932:	80 83       	st	Z, r24
    2934:	64 c0       	rjmp	.+200    	; 0x29fe <LCD_voidInit+0x10c2>
	else if (__tmp > 65535)
    2936:	fe 01       	movw	r30, r28
    2938:	e9 58       	subi	r30, 0x89	; 137
    293a:	ff 4f       	sbci	r31, 0xFF	; 255
    293c:	60 81       	ld	r22, Z
    293e:	71 81       	ldd	r23, Z+1	; 0x01
    2940:	82 81       	ldd	r24, Z+2	; 0x02
    2942:	93 81       	ldd	r25, Z+3	; 0x03
    2944:	20 e0       	ldi	r18, 0x00	; 0
    2946:	3f ef       	ldi	r19, 0xFF	; 255
    2948:	4f e7       	ldi	r20, 0x7F	; 127
    294a:	57 e4       	ldi	r21, 0x47	; 71
    294c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2950:	18 16       	cp	r1, r24
    2952:	0c f0       	brlt	.+2      	; 0x2956 <LCD_voidInit+0x101a>
    2954:	43 c0       	rjmp	.+134    	; 0x29dc <LCD_voidInit+0x10a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2956:	fe 01       	movw	r30, r28
    2958:	e5 58       	subi	r30, 0x85	; 133
    295a:	ff 4f       	sbci	r31, 0xFF	; 255
    295c:	60 81       	ld	r22, Z
    295e:	71 81       	ldd	r23, Z+1	; 0x01
    2960:	82 81       	ldd	r24, Z+2	; 0x02
    2962:	93 81       	ldd	r25, Z+3	; 0x03
    2964:	20 e0       	ldi	r18, 0x00	; 0
    2966:	30 e0       	ldi	r19, 0x00	; 0
    2968:	40 e2       	ldi	r20, 0x20	; 32
    296a:	51 e4       	ldi	r21, 0x41	; 65
    296c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2970:	dc 01       	movw	r26, r24
    2972:	cb 01       	movw	r24, r22
    2974:	8e 01       	movw	r16, r28
    2976:	0b 58       	subi	r16, 0x8B	; 139
    2978:	1f 4f       	sbci	r17, 0xFF	; 255
    297a:	bc 01       	movw	r22, r24
    297c:	cd 01       	movw	r24, r26
    297e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2982:	dc 01       	movw	r26, r24
    2984:	cb 01       	movw	r24, r22
    2986:	f8 01       	movw	r30, r16
    2988:	91 83       	std	Z+1, r25	; 0x01
    298a:	80 83       	st	Z, r24
    298c:	1f c0       	rjmp	.+62     	; 0x29cc <LCD_voidInit+0x1090>
    298e:	fe 01       	movw	r30, r28
    2990:	ed 58       	subi	r30, 0x8D	; 141
    2992:	ff 4f       	sbci	r31, 0xFF	; 255
    2994:	80 e9       	ldi	r24, 0x90	; 144
    2996:	91 e0       	ldi	r25, 0x01	; 1
    2998:	91 83       	std	Z+1, r25	; 0x01
    299a:	80 83       	st	Z, r24
    299c:	fe 01       	movw	r30, r28
    299e:	ed 58       	subi	r30, 0x8D	; 141
    29a0:	ff 4f       	sbci	r31, 0xFF	; 255
    29a2:	80 81       	ld	r24, Z
    29a4:	91 81       	ldd	r25, Z+1	; 0x01
    29a6:	01 97       	sbiw	r24, 0x01	; 1
    29a8:	f1 f7       	brne	.-4      	; 0x29a6 <LCD_voidInit+0x106a>
    29aa:	fe 01       	movw	r30, r28
    29ac:	ed 58       	subi	r30, 0x8D	; 141
    29ae:	ff 4f       	sbci	r31, 0xFF	; 255
    29b0:	91 83       	std	Z+1, r25	; 0x01
    29b2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29b4:	de 01       	movw	r26, r28
    29b6:	ab 58       	subi	r26, 0x8B	; 139
    29b8:	bf 4f       	sbci	r27, 0xFF	; 255
    29ba:	fe 01       	movw	r30, r28
    29bc:	eb 58       	subi	r30, 0x8B	; 139
    29be:	ff 4f       	sbci	r31, 0xFF	; 255
    29c0:	80 81       	ld	r24, Z
    29c2:	91 81       	ldd	r25, Z+1	; 0x01
    29c4:	01 97       	sbiw	r24, 0x01	; 1
    29c6:	11 96       	adiw	r26, 0x01	; 1
    29c8:	9c 93       	st	X, r25
    29ca:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29cc:	fe 01       	movw	r30, r28
    29ce:	eb 58       	subi	r30, 0x8B	; 139
    29d0:	ff 4f       	sbci	r31, 0xFF	; 255
    29d2:	80 81       	ld	r24, Z
    29d4:	91 81       	ldd	r25, Z+1	; 0x01
    29d6:	00 97       	sbiw	r24, 0x00	; 0
    29d8:	d1 f6       	brne	.-76     	; 0x298e <LCD_voidInit+0x1052>
    29da:	27 c0       	rjmp	.+78     	; 0x2a2a <LCD_voidInit+0x10ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29dc:	8e 01       	movw	r16, r28
    29de:	0b 58       	subi	r16, 0x8B	; 139
    29e0:	1f 4f       	sbci	r17, 0xFF	; 255
    29e2:	fe 01       	movw	r30, r28
    29e4:	e9 58       	subi	r30, 0x89	; 137
    29e6:	ff 4f       	sbci	r31, 0xFF	; 255
    29e8:	60 81       	ld	r22, Z
    29ea:	71 81       	ldd	r23, Z+1	; 0x01
    29ec:	82 81       	ldd	r24, Z+2	; 0x02
    29ee:	93 81       	ldd	r25, Z+3	; 0x03
    29f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29f4:	dc 01       	movw	r26, r24
    29f6:	cb 01       	movw	r24, r22
    29f8:	f8 01       	movw	r30, r16
    29fa:	91 83       	std	Z+1, r25	; 0x01
    29fc:	80 83       	st	Z, r24
    29fe:	de 01       	movw	r26, r28
    2a00:	af 58       	subi	r26, 0x8F	; 143
    2a02:	bf 4f       	sbci	r27, 0xFF	; 255
    2a04:	fe 01       	movw	r30, r28
    2a06:	eb 58       	subi	r30, 0x8B	; 139
    2a08:	ff 4f       	sbci	r31, 0xFF	; 255
    2a0a:	80 81       	ld	r24, Z
    2a0c:	91 81       	ldd	r25, Z+1	; 0x01
    2a0e:	8d 93       	st	X+, r24
    2a10:	9c 93       	st	X, r25
    2a12:	fe 01       	movw	r30, r28
    2a14:	ef 58       	subi	r30, 0x8F	; 143
    2a16:	ff 4f       	sbci	r31, 0xFF	; 255
    2a18:	80 81       	ld	r24, Z
    2a1a:	91 81       	ldd	r25, Z+1	; 0x01
    2a1c:	01 97       	sbiw	r24, 0x01	; 1
    2a1e:	f1 f7       	brne	.-4      	; 0x2a1c <LCD_voidInit+0x10e0>
    2a20:	fe 01       	movw	r30, r28
    2a22:	ef 58       	subi	r30, 0x8F	; 143
    2a24:	ff 4f       	sbci	r31, 0xFF	; 255
    2a26:	91 83       	std	Z+1, r25	; 0x01
    2a28:	80 83       	st	Z, r24
		_delay_ms(1);
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB4_PIN,DIO_u8_LOW);
    2a2a:	81 e0       	ldi	r24, 0x01	; 1
    2a2c:	60 e0       	ldi	r22, 0x00	; 0
    2a2e:	40 e0       	ldi	r20, 0x00	; 0
    2a30:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB5_PIN,DIO_u8_LOW);
    2a34:	81 e0       	ldi	r24, 0x01	; 1
    2a36:	61 e0       	ldi	r22, 0x01	; 1
    2a38:	40 e0       	ldi	r20, 0x00	; 0
    2a3a:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB6_PIN,DIO_u8_LOW);
    2a3e:	81 e0       	ldi	r24, 0x01	; 1
    2a40:	62 e0       	ldi	r22, 0x02	; 2
    2a42:	40 e0       	ldi	r20, 0x00	; 0
    2a44:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB7_PIN,DIO_u8_LOW);
    2a48:	81 e0       	ldi	r24, 0x01	; 1
    2a4a:	64 e0       	ldi	r22, 0x04	; 4
    2a4c:	40 e0       	ldi	r20, 0x00	; 0
    2a4e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>

		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_HIGH);
    2a52:	80 e0       	ldi	r24, 0x00	; 0
    2a54:	62 e0       	ldi	r22, 0x02	; 2
    2a56:	41 e0       	ldi	r20, 0x01	; 1
    2a58:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    2a5c:	fe 01       	movw	r30, r28
    2a5e:	e3 59       	subi	r30, 0x93	; 147
    2a60:	ff 4f       	sbci	r31, 0xFF	; 255
    2a62:	80 e0       	ldi	r24, 0x00	; 0
    2a64:	90 e0       	ldi	r25, 0x00	; 0
    2a66:	a0 e8       	ldi	r26, 0x80	; 128
    2a68:	bf e3       	ldi	r27, 0x3F	; 63
    2a6a:	80 83       	st	Z, r24
    2a6c:	91 83       	std	Z+1, r25	; 0x01
    2a6e:	a2 83       	std	Z+2, r26	; 0x02
    2a70:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a72:	8e 01       	movw	r16, r28
    2a74:	07 59       	subi	r16, 0x97	; 151
    2a76:	1f 4f       	sbci	r17, 0xFF	; 255
    2a78:	fe 01       	movw	r30, r28
    2a7a:	e3 59       	subi	r30, 0x93	; 147
    2a7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a7e:	60 81       	ld	r22, Z
    2a80:	71 81       	ldd	r23, Z+1	; 0x01
    2a82:	82 81       	ldd	r24, Z+2	; 0x02
    2a84:	93 81       	ldd	r25, Z+3	; 0x03
    2a86:	20 e0       	ldi	r18, 0x00	; 0
    2a88:	30 e0       	ldi	r19, 0x00	; 0
    2a8a:	4a e7       	ldi	r20, 0x7A	; 122
    2a8c:	55 e4       	ldi	r21, 0x45	; 69
    2a8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a92:	dc 01       	movw	r26, r24
    2a94:	cb 01       	movw	r24, r22
    2a96:	f8 01       	movw	r30, r16
    2a98:	80 83       	st	Z, r24
    2a9a:	91 83       	std	Z+1, r25	; 0x01
    2a9c:	a2 83       	std	Z+2, r26	; 0x02
    2a9e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2aa0:	fe 01       	movw	r30, r28
    2aa2:	e7 59       	subi	r30, 0x97	; 151
    2aa4:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa6:	60 81       	ld	r22, Z
    2aa8:	71 81       	ldd	r23, Z+1	; 0x01
    2aaa:	82 81       	ldd	r24, Z+2	; 0x02
    2aac:	93 81       	ldd	r25, Z+3	; 0x03
    2aae:	20 e0       	ldi	r18, 0x00	; 0
    2ab0:	30 e0       	ldi	r19, 0x00	; 0
    2ab2:	40 e8       	ldi	r20, 0x80	; 128
    2ab4:	5f e3       	ldi	r21, 0x3F	; 63
    2ab6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2aba:	88 23       	and	r24, r24
    2abc:	44 f4       	brge	.+16     	; 0x2ace <LCD_voidInit+0x1192>
		__ticks = 1;
    2abe:	fe 01       	movw	r30, r28
    2ac0:	e9 59       	subi	r30, 0x99	; 153
    2ac2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac4:	81 e0       	ldi	r24, 0x01	; 1
    2ac6:	90 e0       	ldi	r25, 0x00	; 0
    2ac8:	91 83       	std	Z+1, r25	; 0x01
    2aca:	80 83       	st	Z, r24
    2acc:	64 c0       	rjmp	.+200    	; 0x2b96 <LCD_voidInit+0x125a>
	else if (__tmp > 65535)
    2ace:	fe 01       	movw	r30, r28
    2ad0:	e7 59       	subi	r30, 0x97	; 151
    2ad2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ad4:	60 81       	ld	r22, Z
    2ad6:	71 81       	ldd	r23, Z+1	; 0x01
    2ad8:	82 81       	ldd	r24, Z+2	; 0x02
    2ada:	93 81       	ldd	r25, Z+3	; 0x03
    2adc:	20 e0       	ldi	r18, 0x00	; 0
    2ade:	3f ef       	ldi	r19, 0xFF	; 255
    2ae0:	4f e7       	ldi	r20, 0x7F	; 127
    2ae2:	57 e4       	ldi	r21, 0x47	; 71
    2ae4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ae8:	18 16       	cp	r1, r24
    2aea:	0c f0       	brlt	.+2      	; 0x2aee <LCD_voidInit+0x11b2>
    2aec:	43 c0       	rjmp	.+134    	; 0x2b74 <LCD_voidInit+0x1238>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2aee:	fe 01       	movw	r30, r28
    2af0:	e3 59       	subi	r30, 0x93	; 147
    2af2:	ff 4f       	sbci	r31, 0xFF	; 255
    2af4:	60 81       	ld	r22, Z
    2af6:	71 81       	ldd	r23, Z+1	; 0x01
    2af8:	82 81       	ldd	r24, Z+2	; 0x02
    2afa:	93 81       	ldd	r25, Z+3	; 0x03
    2afc:	20 e0       	ldi	r18, 0x00	; 0
    2afe:	30 e0       	ldi	r19, 0x00	; 0
    2b00:	40 e2       	ldi	r20, 0x20	; 32
    2b02:	51 e4       	ldi	r21, 0x41	; 65
    2b04:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b08:	dc 01       	movw	r26, r24
    2b0a:	cb 01       	movw	r24, r22
    2b0c:	8e 01       	movw	r16, r28
    2b0e:	09 59       	subi	r16, 0x99	; 153
    2b10:	1f 4f       	sbci	r17, 0xFF	; 255
    2b12:	bc 01       	movw	r22, r24
    2b14:	cd 01       	movw	r24, r26
    2b16:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b1a:	dc 01       	movw	r26, r24
    2b1c:	cb 01       	movw	r24, r22
    2b1e:	f8 01       	movw	r30, r16
    2b20:	91 83       	std	Z+1, r25	; 0x01
    2b22:	80 83       	st	Z, r24
    2b24:	1f c0       	rjmp	.+62     	; 0x2b64 <LCD_voidInit+0x1228>
    2b26:	fe 01       	movw	r30, r28
    2b28:	eb 59       	subi	r30, 0x9B	; 155
    2b2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b2c:	80 e9       	ldi	r24, 0x90	; 144
    2b2e:	91 e0       	ldi	r25, 0x01	; 1
    2b30:	91 83       	std	Z+1, r25	; 0x01
    2b32:	80 83       	st	Z, r24
    2b34:	fe 01       	movw	r30, r28
    2b36:	eb 59       	subi	r30, 0x9B	; 155
    2b38:	ff 4f       	sbci	r31, 0xFF	; 255
    2b3a:	80 81       	ld	r24, Z
    2b3c:	91 81       	ldd	r25, Z+1	; 0x01
    2b3e:	01 97       	sbiw	r24, 0x01	; 1
    2b40:	f1 f7       	brne	.-4      	; 0x2b3e <LCD_voidInit+0x1202>
    2b42:	fe 01       	movw	r30, r28
    2b44:	eb 59       	subi	r30, 0x9B	; 155
    2b46:	ff 4f       	sbci	r31, 0xFF	; 255
    2b48:	91 83       	std	Z+1, r25	; 0x01
    2b4a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b4c:	de 01       	movw	r26, r28
    2b4e:	a9 59       	subi	r26, 0x99	; 153
    2b50:	bf 4f       	sbci	r27, 0xFF	; 255
    2b52:	fe 01       	movw	r30, r28
    2b54:	e9 59       	subi	r30, 0x99	; 153
    2b56:	ff 4f       	sbci	r31, 0xFF	; 255
    2b58:	80 81       	ld	r24, Z
    2b5a:	91 81       	ldd	r25, Z+1	; 0x01
    2b5c:	01 97       	sbiw	r24, 0x01	; 1
    2b5e:	11 96       	adiw	r26, 0x01	; 1
    2b60:	9c 93       	st	X, r25
    2b62:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b64:	fe 01       	movw	r30, r28
    2b66:	e9 59       	subi	r30, 0x99	; 153
    2b68:	ff 4f       	sbci	r31, 0xFF	; 255
    2b6a:	80 81       	ld	r24, Z
    2b6c:	91 81       	ldd	r25, Z+1	; 0x01
    2b6e:	00 97       	sbiw	r24, 0x00	; 0
    2b70:	d1 f6       	brne	.-76     	; 0x2b26 <LCD_voidInit+0x11ea>
    2b72:	27 c0       	rjmp	.+78     	; 0x2bc2 <LCD_voidInit+0x1286>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b74:	8e 01       	movw	r16, r28
    2b76:	09 59       	subi	r16, 0x99	; 153
    2b78:	1f 4f       	sbci	r17, 0xFF	; 255
    2b7a:	fe 01       	movw	r30, r28
    2b7c:	e7 59       	subi	r30, 0x97	; 151
    2b7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b80:	60 81       	ld	r22, Z
    2b82:	71 81       	ldd	r23, Z+1	; 0x01
    2b84:	82 81       	ldd	r24, Z+2	; 0x02
    2b86:	93 81       	ldd	r25, Z+3	; 0x03
    2b88:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b8c:	dc 01       	movw	r26, r24
    2b8e:	cb 01       	movw	r24, r22
    2b90:	f8 01       	movw	r30, r16
    2b92:	91 83       	std	Z+1, r25	; 0x01
    2b94:	80 83       	st	Z, r24
    2b96:	de 01       	movw	r26, r28
    2b98:	ad 59       	subi	r26, 0x9D	; 157
    2b9a:	bf 4f       	sbci	r27, 0xFF	; 255
    2b9c:	fe 01       	movw	r30, r28
    2b9e:	e9 59       	subi	r30, 0x99	; 153
    2ba0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba2:	80 81       	ld	r24, Z
    2ba4:	91 81       	ldd	r25, Z+1	; 0x01
    2ba6:	8d 93       	st	X+, r24
    2ba8:	9c 93       	st	X, r25
    2baa:	fe 01       	movw	r30, r28
    2bac:	ed 59       	subi	r30, 0x9D	; 157
    2bae:	ff 4f       	sbci	r31, 0xFF	; 255
    2bb0:	80 81       	ld	r24, Z
    2bb2:	91 81       	ldd	r25, Z+1	; 0x01
    2bb4:	01 97       	sbiw	r24, 0x01	; 1
    2bb6:	f1 f7       	brne	.-4      	; 0x2bb4 <LCD_voidInit+0x1278>
    2bb8:	fe 01       	movw	r30, r28
    2bba:	ed 59       	subi	r30, 0x9D	; 157
    2bbc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bbe:	91 83       	std	Z+1, r25	; 0x01
    2bc0:	80 83       	st	Z, r24
		_delay_ms(1);

		//SECOND  4 BITS (display clear)
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_LOW);
    2bc2:	80 e0       	ldi	r24, 0x00	; 0
    2bc4:	62 e0       	ldi	r22, 0x02	; 2
    2bc6:	40 e0       	ldi	r20, 0x00	; 0
    2bc8:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_RS_PIN ,DIO_u8_LOW);
    2bcc:	80 e0       	ldi	r24, 0x00	; 0
    2bce:	63 e0       	ldi	r22, 0x03	; 3
    2bd0:	40 e0       	ldi	r20, 0x00	; 0
    2bd2:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    2bd6:	fe 01       	movw	r30, r28
    2bd8:	e1 5a       	subi	r30, 0xA1	; 161
    2bda:	ff 4f       	sbci	r31, 0xFF	; 255
    2bdc:	80 e0       	ldi	r24, 0x00	; 0
    2bde:	90 e0       	ldi	r25, 0x00	; 0
    2be0:	a0 e8       	ldi	r26, 0x80	; 128
    2be2:	bf e3       	ldi	r27, 0x3F	; 63
    2be4:	80 83       	st	Z, r24
    2be6:	91 83       	std	Z+1, r25	; 0x01
    2be8:	a2 83       	std	Z+2, r26	; 0x02
    2bea:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2bec:	8e 01       	movw	r16, r28
    2bee:	05 5a       	subi	r16, 0xA5	; 165
    2bf0:	1f 4f       	sbci	r17, 0xFF	; 255
    2bf2:	fe 01       	movw	r30, r28
    2bf4:	e1 5a       	subi	r30, 0xA1	; 161
    2bf6:	ff 4f       	sbci	r31, 0xFF	; 255
    2bf8:	60 81       	ld	r22, Z
    2bfa:	71 81       	ldd	r23, Z+1	; 0x01
    2bfc:	82 81       	ldd	r24, Z+2	; 0x02
    2bfe:	93 81       	ldd	r25, Z+3	; 0x03
    2c00:	20 e0       	ldi	r18, 0x00	; 0
    2c02:	30 e0       	ldi	r19, 0x00	; 0
    2c04:	4a e7       	ldi	r20, 0x7A	; 122
    2c06:	55 e4       	ldi	r21, 0x45	; 69
    2c08:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c0c:	dc 01       	movw	r26, r24
    2c0e:	cb 01       	movw	r24, r22
    2c10:	f8 01       	movw	r30, r16
    2c12:	80 83       	st	Z, r24
    2c14:	91 83       	std	Z+1, r25	; 0x01
    2c16:	a2 83       	std	Z+2, r26	; 0x02
    2c18:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c1a:	fe 01       	movw	r30, r28
    2c1c:	e5 5a       	subi	r30, 0xA5	; 165
    2c1e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c20:	60 81       	ld	r22, Z
    2c22:	71 81       	ldd	r23, Z+1	; 0x01
    2c24:	82 81       	ldd	r24, Z+2	; 0x02
    2c26:	93 81       	ldd	r25, Z+3	; 0x03
    2c28:	20 e0       	ldi	r18, 0x00	; 0
    2c2a:	30 e0       	ldi	r19, 0x00	; 0
    2c2c:	40 e8       	ldi	r20, 0x80	; 128
    2c2e:	5f e3       	ldi	r21, 0x3F	; 63
    2c30:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2c34:	88 23       	and	r24, r24
    2c36:	44 f4       	brge	.+16     	; 0x2c48 <LCD_voidInit+0x130c>
		__ticks = 1;
    2c38:	fe 01       	movw	r30, r28
    2c3a:	e7 5a       	subi	r30, 0xA7	; 167
    2c3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c3e:	81 e0       	ldi	r24, 0x01	; 1
    2c40:	90 e0       	ldi	r25, 0x00	; 0
    2c42:	91 83       	std	Z+1, r25	; 0x01
    2c44:	80 83       	st	Z, r24
    2c46:	64 c0       	rjmp	.+200    	; 0x2d10 <LCD_voidInit+0x13d4>
	else if (__tmp > 65535)
    2c48:	fe 01       	movw	r30, r28
    2c4a:	e5 5a       	subi	r30, 0xA5	; 165
    2c4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c4e:	60 81       	ld	r22, Z
    2c50:	71 81       	ldd	r23, Z+1	; 0x01
    2c52:	82 81       	ldd	r24, Z+2	; 0x02
    2c54:	93 81       	ldd	r25, Z+3	; 0x03
    2c56:	20 e0       	ldi	r18, 0x00	; 0
    2c58:	3f ef       	ldi	r19, 0xFF	; 255
    2c5a:	4f e7       	ldi	r20, 0x7F	; 127
    2c5c:	57 e4       	ldi	r21, 0x47	; 71
    2c5e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2c62:	18 16       	cp	r1, r24
    2c64:	0c f0       	brlt	.+2      	; 0x2c68 <LCD_voidInit+0x132c>
    2c66:	43 c0       	rjmp	.+134    	; 0x2cee <LCD_voidInit+0x13b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c68:	fe 01       	movw	r30, r28
    2c6a:	e1 5a       	subi	r30, 0xA1	; 161
    2c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c6e:	60 81       	ld	r22, Z
    2c70:	71 81       	ldd	r23, Z+1	; 0x01
    2c72:	82 81       	ldd	r24, Z+2	; 0x02
    2c74:	93 81       	ldd	r25, Z+3	; 0x03
    2c76:	20 e0       	ldi	r18, 0x00	; 0
    2c78:	30 e0       	ldi	r19, 0x00	; 0
    2c7a:	40 e2       	ldi	r20, 0x20	; 32
    2c7c:	51 e4       	ldi	r21, 0x41	; 65
    2c7e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c82:	dc 01       	movw	r26, r24
    2c84:	cb 01       	movw	r24, r22
    2c86:	8e 01       	movw	r16, r28
    2c88:	07 5a       	subi	r16, 0xA7	; 167
    2c8a:	1f 4f       	sbci	r17, 0xFF	; 255
    2c8c:	bc 01       	movw	r22, r24
    2c8e:	cd 01       	movw	r24, r26
    2c90:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c94:	dc 01       	movw	r26, r24
    2c96:	cb 01       	movw	r24, r22
    2c98:	f8 01       	movw	r30, r16
    2c9a:	91 83       	std	Z+1, r25	; 0x01
    2c9c:	80 83       	st	Z, r24
    2c9e:	1f c0       	rjmp	.+62     	; 0x2cde <LCD_voidInit+0x13a2>
    2ca0:	fe 01       	movw	r30, r28
    2ca2:	e9 5a       	subi	r30, 0xA9	; 169
    2ca4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ca6:	80 e9       	ldi	r24, 0x90	; 144
    2ca8:	91 e0       	ldi	r25, 0x01	; 1
    2caa:	91 83       	std	Z+1, r25	; 0x01
    2cac:	80 83       	st	Z, r24
    2cae:	fe 01       	movw	r30, r28
    2cb0:	e9 5a       	subi	r30, 0xA9	; 169
    2cb2:	ff 4f       	sbci	r31, 0xFF	; 255
    2cb4:	80 81       	ld	r24, Z
    2cb6:	91 81       	ldd	r25, Z+1	; 0x01
    2cb8:	01 97       	sbiw	r24, 0x01	; 1
    2cba:	f1 f7       	brne	.-4      	; 0x2cb8 <LCD_voidInit+0x137c>
    2cbc:	fe 01       	movw	r30, r28
    2cbe:	e9 5a       	subi	r30, 0xA9	; 169
    2cc0:	ff 4f       	sbci	r31, 0xFF	; 255
    2cc2:	91 83       	std	Z+1, r25	; 0x01
    2cc4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cc6:	de 01       	movw	r26, r28
    2cc8:	a7 5a       	subi	r26, 0xA7	; 167
    2cca:	bf 4f       	sbci	r27, 0xFF	; 255
    2ccc:	fe 01       	movw	r30, r28
    2cce:	e7 5a       	subi	r30, 0xA7	; 167
    2cd0:	ff 4f       	sbci	r31, 0xFF	; 255
    2cd2:	80 81       	ld	r24, Z
    2cd4:	91 81       	ldd	r25, Z+1	; 0x01
    2cd6:	01 97       	sbiw	r24, 0x01	; 1
    2cd8:	11 96       	adiw	r26, 0x01	; 1
    2cda:	9c 93       	st	X, r25
    2cdc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2cde:	fe 01       	movw	r30, r28
    2ce0:	e7 5a       	subi	r30, 0xA7	; 167
    2ce2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ce4:	80 81       	ld	r24, Z
    2ce6:	91 81       	ldd	r25, Z+1	; 0x01
    2ce8:	00 97       	sbiw	r24, 0x00	; 0
    2cea:	d1 f6       	brne	.-76     	; 0x2ca0 <LCD_voidInit+0x1364>
    2cec:	27 c0       	rjmp	.+78     	; 0x2d3c <LCD_voidInit+0x1400>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cee:	8e 01       	movw	r16, r28
    2cf0:	07 5a       	subi	r16, 0xA7	; 167
    2cf2:	1f 4f       	sbci	r17, 0xFF	; 255
    2cf4:	fe 01       	movw	r30, r28
    2cf6:	e5 5a       	subi	r30, 0xA5	; 165
    2cf8:	ff 4f       	sbci	r31, 0xFF	; 255
    2cfa:	60 81       	ld	r22, Z
    2cfc:	71 81       	ldd	r23, Z+1	; 0x01
    2cfe:	82 81       	ldd	r24, Z+2	; 0x02
    2d00:	93 81       	ldd	r25, Z+3	; 0x03
    2d02:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d06:	dc 01       	movw	r26, r24
    2d08:	cb 01       	movw	r24, r22
    2d0a:	f8 01       	movw	r30, r16
    2d0c:	91 83       	std	Z+1, r25	; 0x01
    2d0e:	80 83       	st	Z, r24
    2d10:	de 01       	movw	r26, r28
    2d12:	ab 5a       	subi	r26, 0xAB	; 171
    2d14:	bf 4f       	sbci	r27, 0xFF	; 255
    2d16:	fe 01       	movw	r30, r28
    2d18:	e7 5a       	subi	r30, 0xA7	; 167
    2d1a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d1c:	80 81       	ld	r24, Z
    2d1e:	91 81       	ldd	r25, Z+1	; 0x01
    2d20:	8d 93       	st	X+, r24
    2d22:	9c 93       	st	X, r25
    2d24:	fe 01       	movw	r30, r28
    2d26:	eb 5a       	subi	r30, 0xAB	; 171
    2d28:	ff 4f       	sbci	r31, 0xFF	; 255
    2d2a:	80 81       	ld	r24, Z
    2d2c:	91 81       	ldd	r25, Z+1	; 0x01
    2d2e:	01 97       	sbiw	r24, 0x01	; 1
    2d30:	f1 f7       	brne	.-4      	; 0x2d2e <LCD_voidInit+0x13f2>
    2d32:	fe 01       	movw	r30, r28
    2d34:	eb 5a       	subi	r30, 0xAB	; 171
    2d36:	ff 4f       	sbci	r31, 0xFF	; 255
    2d38:	91 83       	std	Z+1, r25	; 0x01
    2d3a:	80 83       	st	Z, r24
		_delay_ms(1);
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB4_PIN,DIO_u8_HIGH);
    2d3c:	81 e0       	ldi	r24, 0x01	; 1
    2d3e:	60 e0       	ldi	r22, 0x00	; 0
    2d40:	41 e0       	ldi	r20, 0x01	; 1
    2d42:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB5_PIN,DIO_u8_LOW);
    2d46:	81 e0       	ldi	r24, 0x01	; 1
    2d48:	61 e0       	ldi	r22, 0x01	; 1
    2d4a:	40 e0       	ldi	r20, 0x00	; 0
    2d4c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB6_PIN,DIO_u8_LOW);
    2d50:	81 e0       	ldi	r24, 0x01	; 1
    2d52:	62 e0       	ldi	r22, 0x02	; 2
    2d54:	40 e0       	ldi	r20, 0x00	; 0
    2d56:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB7_PIN,DIO_u8_LOW);
    2d5a:	81 e0       	ldi	r24, 0x01	; 1
    2d5c:	64 e0       	ldi	r22, 0x04	; 4
    2d5e:	40 e0       	ldi	r20, 0x00	; 0
    2d60:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_HIGH);
    2d64:	80 e0       	ldi	r24, 0x00	; 0
    2d66:	62 e0       	ldi	r22, 0x02	; 2
    2d68:	41 e0       	ldi	r20, 0x01	; 1
    2d6a:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    2d6e:	fe 01       	movw	r30, r28
    2d70:	ef 5a       	subi	r30, 0xAF	; 175
    2d72:	ff 4f       	sbci	r31, 0xFF	; 255
    2d74:	80 e0       	ldi	r24, 0x00	; 0
    2d76:	90 e0       	ldi	r25, 0x00	; 0
    2d78:	ac e0       	ldi	r26, 0x0C	; 12
    2d7a:	b2 e4       	ldi	r27, 0x42	; 66
    2d7c:	80 83       	st	Z, r24
    2d7e:	91 83       	std	Z+1, r25	; 0x01
    2d80:	a2 83       	std	Z+2, r26	; 0x02
    2d82:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d84:	8e 01       	movw	r16, r28
    2d86:	03 5b       	subi	r16, 0xB3	; 179
    2d88:	1f 4f       	sbci	r17, 0xFF	; 255
    2d8a:	fe 01       	movw	r30, r28
    2d8c:	ef 5a       	subi	r30, 0xAF	; 175
    2d8e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d90:	60 81       	ld	r22, Z
    2d92:	71 81       	ldd	r23, Z+1	; 0x01
    2d94:	82 81       	ldd	r24, Z+2	; 0x02
    2d96:	93 81       	ldd	r25, Z+3	; 0x03
    2d98:	20 e0       	ldi	r18, 0x00	; 0
    2d9a:	30 e0       	ldi	r19, 0x00	; 0
    2d9c:	4a e7       	ldi	r20, 0x7A	; 122
    2d9e:	55 e4       	ldi	r21, 0x45	; 69
    2da0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2da4:	dc 01       	movw	r26, r24
    2da6:	cb 01       	movw	r24, r22
    2da8:	f8 01       	movw	r30, r16
    2daa:	80 83       	st	Z, r24
    2dac:	91 83       	std	Z+1, r25	; 0x01
    2dae:	a2 83       	std	Z+2, r26	; 0x02
    2db0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2db2:	fe 01       	movw	r30, r28
    2db4:	e3 5b       	subi	r30, 0xB3	; 179
    2db6:	ff 4f       	sbci	r31, 0xFF	; 255
    2db8:	60 81       	ld	r22, Z
    2dba:	71 81       	ldd	r23, Z+1	; 0x01
    2dbc:	82 81       	ldd	r24, Z+2	; 0x02
    2dbe:	93 81       	ldd	r25, Z+3	; 0x03
    2dc0:	20 e0       	ldi	r18, 0x00	; 0
    2dc2:	30 e0       	ldi	r19, 0x00	; 0
    2dc4:	40 e8       	ldi	r20, 0x80	; 128
    2dc6:	5f e3       	ldi	r21, 0x3F	; 63
    2dc8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2dcc:	88 23       	and	r24, r24
    2dce:	44 f4       	brge	.+16     	; 0x2de0 <LCD_voidInit+0x14a4>
		__ticks = 1;
    2dd0:	fe 01       	movw	r30, r28
    2dd2:	e5 5b       	subi	r30, 0xB5	; 181
    2dd4:	ff 4f       	sbci	r31, 0xFF	; 255
    2dd6:	81 e0       	ldi	r24, 0x01	; 1
    2dd8:	90 e0       	ldi	r25, 0x00	; 0
    2dda:	91 83       	std	Z+1, r25	; 0x01
    2ddc:	80 83       	st	Z, r24
    2dde:	64 c0       	rjmp	.+200    	; 0x2ea8 <LCD_voidInit+0x156c>
	else if (__tmp > 65535)
    2de0:	fe 01       	movw	r30, r28
    2de2:	e3 5b       	subi	r30, 0xB3	; 179
    2de4:	ff 4f       	sbci	r31, 0xFF	; 255
    2de6:	60 81       	ld	r22, Z
    2de8:	71 81       	ldd	r23, Z+1	; 0x01
    2dea:	82 81       	ldd	r24, Z+2	; 0x02
    2dec:	93 81       	ldd	r25, Z+3	; 0x03
    2dee:	20 e0       	ldi	r18, 0x00	; 0
    2df0:	3f ef       	ldi	r19, 0xFF	; 255
    2df2:	4f e7       	ldi	r20, 0x7F	; 127
    2df4:	57 e4       	ldi	r21, 0x47	; 71
    2df6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2dfa:	18 16       	cp	r1, r24
    2dfc:	0c f0       	brlt	.+2      	; 0x2e00 <LCD_voidInit+0x14c4>
    2dfe:	43 c0       	rjmp	.+134    	; 0x2e86 <LCD_voidInit+0x154a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e00:	fe 01       	movw	r30, r28
    2e02:	ef 5a       	subi	r30, 0xAF	; 175
    2e04:	ff 4f       	sbci	r31, 0xFF	; 255
    2e06:	60 81       	ld	r22, Z
    2e08:	71 81       	ldd	r23, Z+1	; 0x01
    2e0a:	82 81       	ldd	r24, Z+2	; 0x02
    2e0c:	93 81       	ldd	r25, Z+3	; 0x03
    2e0e:	20 e0       	ldi	r18, 0x00	; 0
    2e10:	30 e0       	ldi	r19, 0x00	; 0
    2e12:	40 e2       	ldi	r20, 0x20	; 32
    2e14:	51 e4       	ldi	r21, 0x41	; 65
    2e16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e1a:	dc 01       	movw	r26, r24
    2e1c:	cb 01       	movw	r24, r22
    2e1e:	8e 01       	movw	r16, r28
    2e20:	05 5b       	subi	r16, 0xB5	; 181
    2e22:	1f 4f       	sbci	r17, 0xFF	; 255
    2e24:	bc 01       	movw	r22, r24
    2e26:	cd 01       	movw	r24, r26
    2e28:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e2c:	dc 01       	movw	r26, r24
    2e2e:	cb 01       	movw	r24, r22
    2e30:	f8 01       	movw	r30, r16
    2e32:	91 83       	std	Z+1, r25	; 0x01
    2e34:	80 83       	st	Z, r24
    2e36:	1f c0       	rjmp	.+62     	; 0x2e76 <LCD_voidInit+0x153a>
    2e38:	fe 01       	movw	r30, r28
    2e3a:	e7 5b       	subi	r30, 0xB7	; 183
    2e3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e3e:	80 e9       	ldi	r24, 0x90	; 144
    2e40:	91 e0       	ldi	r25, 0x01	; 1
    2e42:	91 83       	std	Z+1, r25	; 0x01
    2e44:	80 83       	st	Z, r24
    2e46:	fe 01       	movw	r30, r28
    2e48:	e7 5b       	subi	r30, 0xB7	; 183
    2e4a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e4c:	80 81       	ld	r24, Z
    2e4e:	91 81       	ldd	r25, Z+1	; 0x01
    2e50:	01 97       	sbiw	r24, 0x01	; 1
    2e52:	f1 f7       	brne	.-4      	; 0x2e50 <LCD_voidInit+0x1514>
    2e54:	fe 01       	movw	r30, r28
    2e56:	e7 5b       	subi	r30, 0xB7	; 183
    2e58:	ff 4f       	sbci	r31, 0xFF	; 255
    2e5a:	91 83       	std	Z+1, r25	; 0x01
    2e5c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e5e:	de 01       	movw	r26, r28
    2e60:	a5 5b       	subi	r26, 0xB5	; 181
    2e62:	bf 4f       	sbci	r27, 0xFF	; 255
    2e64:	fe 01       	movw	r30, r28
    2e66:	e5 5b       	subi	r30, 0xB5	; 181
    2e68:	ff 4f       	sbci	r31, 0xFF	; 255
    2e6a:	80 81       	ld	r24, Z
    2e6c:	91 81       	ldd	r25, Z+1	; 0x01
    2e6e:	01 97       	sbiw	r24, 0x01	; 1
    2e70:	11 96       	adiw	r26, 0x01	; 1
    2e72:	9c 93       	st	X, r25
    2e74:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e76:	fe 01       	movw	r30, r28
    2e78:	e5 5b       	subi	r30, 0xB5	; 181
    2e7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e7c:	80 81       	ld	r24, Z
    2e7e:	91 81       	ldd	r25, Z+1	; 0x01
    2e80:	00 97       	sbiw	r24, 0x00	; 0
    2e82:	d1 f6       	brne	.-76     	; 0x2e38 <LCD_voidInit+0x14fc>
    2e84:	27 c0       	rjmp	.+78     	; 0x2ed4 <LCD_voidInit+0x1598>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e86:	8e 01       	movw	r16, r28
    2e88:	05 5b       	subi	r16, 0xB5	; 181
    2e8a:	1f 4f       	sbci	r17, 0xFF	; 255
    2e8c:	fe 01       	movw	r30, r28
    2e8e:	e3 5b       	subi	r30, 0xB3	; 179
    2e90:	ff 4f       	sbci	r31, 0xFF	; 255
    2e92:	60 81       	ld	r22, Z
    2e94:	71 81       	ldd	r23, Z+1	; 0x01
    2e96:	82 81       	ldd	r24, Z+2	; 0x02
    2e98:	93 81       	ldd	r25, Z+3	; 0x03
    2e9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e9e:	dc 01       	movw	r26, r24
    2ea0:	cb 01       	movw	r24, r22
    2ea2:	f8 01       	movw	r30, r16
    2ea4:	91 83       	std	Z+1, r25	; 0x01
    2ea6:	80 83       	st	Z, r24
    2ea8:	de 01       	movw	r26, r28
    2eaa:	a9 5b       	subi	r26, 0xB9	; 185
    2eac:	bf 4f       	sbci	r27, 0xFF	; 255
    2eae:	fe 01       	movw	r30, r28
    2eb0:	e5 5b       	subi	r30, 0xB5	; 181
    2eb2:	ff 4f       	sbci	r31, 0xFF	; 255
    2eb4:	80 81       	ld	r24, Z
    2eb6:	91 81       	ldd	r25, Z+1	; 0x01
    2eb8:	8d 93       	st	X+, r24
    2eba:	9c 93       	st	X, r25
    2ebc:	fe 01       	movw	r30, r28
    2ebe:	e9 5b       	subi	r30, 0xB9	; 185
    2ec0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec2:	80 81       	ld	r24, Z
    2ec4:	91 81       	ldd	r25, Z+1	; 0x01
    2ec6:	01 97       	sbiw	r24, 0x01	; 1
    2ec8:	f1 f7       	brne	.-4      	; 0x2ec6 <LCD_voidInit+0x158a>
    2eca:	fe 01       	movw	r30, r28
    2ecc:	e9 5b       	subi	r30, 0xB9	; 185
    2ece:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed0:	91 83       	std	Z+1, r25	; 0x01
    2ed2:	80 83       	st	Z, r24
		_delay_ms(35);

		//FIRST 4 BITS (entry mode set)
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_LOW);
    2ed4:	80 e0       	ldi	r24, 0x00	; 0
    2ed6:	62 e0       	ldi	r22, 0x02	; 2
    2ed8:	40 e0       	ldi	r20, 0x00	; 0
    2eda:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_RS_PIN ,DIO_u8_LOW);
    2ede:	80 e0       	ldi	r24, 0x00	; 0
    2ee0:	63 e0       	ldi	r22, 0x03	; 3
    2ee2:	40 e0       	ldi	r20, 0x00	; 0
    2ee4:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    2ee8:	fe 01       	movw	r30, r28
    2eea:	ed 5b       	subi	r30, 0xBD	; 189
    2eec:	ff 4f       	sbci	r31, 0xFF	; 255
    2eee:	80 e0       	ldi	r24, 0x00	; 0
    2ef0:	90 e0       	ldi	r25, 0x00	; 0
    2ef2:	a0 e8       	ldi	r26, 0x80	; 128
    2ef4:	bf e3       	ldi	r27, 0x3F	; 63
    2ef6:	80 83       	st	Z, r24
    2ef8:	91 83       	std	Z+1, r25	; 0x01
    2efa:	a2 83       	std	Z+2, r26	; 0x02
    2efc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2efe:	8e 01       	movw	r16, r28
    2f00:	01 5c       	subi	r16, 0xC1	; 193
    2f02:	1f 4f       	sbci	r17, 0xFF	; 255
    2f04:	fe 01       	movw	r30, r28
    2f06:	ed 5b       	subi	r30, 0xBD	; 189
    2f08:	ff 4f       	sbci	r31, 0xFF	; 255
    2f0a:	60 81       	ld	r22, Z
    2f0c:	71 81       	ldd	r23, Z+1	; 0x01
    2f0e:	82 81       	ldd	r24, Z+2	; 0x02
    2f10:	93 81       	ldd	r25, Z+3	; 0x03
    2f12:	20 e0       	ldi	r18, 0x00	; 0
    2f14:	30 e0       	ldi	r19, 0x00	; 0
    2f16:	4a e7       	ldi	r20, 0x7A	; 122
    2f18:	55 e4       	ldi	r21, 0x45	; 69
    2f1a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f1e:	dc 01       	movw	r26, r24
    2f20:	cb 01       	movw	r24, r22
    2f22:	f8 01       	movw	r30, r16
    2f24:	80 83       	st	Z, r24
    2f26:	91 83       	std	Z+1, r25	; 0x01
    2f28:	a2 83       	std	Z+2, r26	; 0x02
    2f2a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f2c:	fe 01       	movw	r30, r28
    2f2e:	ff 96       	adiw	r30, 0x3f	; 63
    2f30:	60 81       	ld	r22, Z
    2f32:	71 81       	ldd	r23, Z+1	; 0x01
    2f34:	82 81       	ldd	r24, Z+2	; 0x02
    2f36:	93 81       	ldd	r25, Z+3	; 0x03
    2f38:	20 e0       	ldi	r18, 0x00	; 0
    2f3a:	30 e0       	ldi	r19, 0x00	; 0
    2f3c:	40 e8       	ldi	r20, 0x80	; 128
    2f3e:	5f e3       	ldi	r21, 0x3F	; 63
    2f40:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2f44:	88 23       	and	r24, r24
    2f46:	2c f4       	brge	.+10     	; 0x2f52 <LCD_voidInit+0x1616>
		__ticks = 1;
    2f48:	81 e0       	ldi	r24, 0x01	; 1
    2f4a:	90 e0       	ldi	r25, 0x00	; 0
    2f4c:	9e af       	std	Y+62, r25	; 0x3e
    2f4e:	8d af       	std	Y+61, r24	; 0x3d
    2f50:	46 c0       	rjmp	.+140    	; 0x2fde <LCD_voidInit+0x16a2>
	else if (__tmp > 65535)
    2f52:	fe 01       	movw	r30, r28
    2f54:	ff 96       	adiw	r30, 0x3f	; 63
    2f56:	60 81       	ld	r22, Z
    2f58:	71 81       	ldd	r23, Z+1	; 0x01
    2f5a:	82 81       	ldd	r24, Z+2	; 0x02
    2f5c:	93 81       	ldd	r25, Z+3	; 0x03
    2f5e:	20 e0       	ldi	r18, 0x00	; 0
    2f60:	3f ef       	ldi	r19, 0xFF	; 255
    2f62:	4f e7       	ldi	r20, 0x7F	; 127
    2f64:	57 e4       	ldi	r21, 0x47	; 71
    2f66:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2f6a:	18 16       	cp	r1, r24
    2f6c:	64 f5       	brge	.+88     	; 0x2fc6 <LCD_voidInit+0x168a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f6e:	fe 01       	movw	r30, r28
    2f70:	ed 5b       	subi	r30, 0xBD	; 189
    2f72:	ff 4f       	sbci	r31, 0xFF	; 255
    2f74:	60 81       	ld	r22, Z
    2f76:	71 81       	ldd	r23, Z+1	; 0x01
    2f78:	82 81       	ldd	r24, Z+2	; 0x02
    2f7a:	93 81       	ldd	r25, Z+3	; 0x03
    2f7c:	20 e0       	ldi	r18, 0x00	; 0
    2f7e:	30 e0       	ldi	r19, 0x00	; 0
    2f80:	40 e2       	ldi	r20, 0x20	; 32
    2f82:	51 e4       	ldi	r21, 0x41	; 65
    2f84:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f88:	dc 01       	movw	r26, r24
    2f8a:	cb 01       	movw	r24, r22
    2f8c:	bc 01       	movw	r22, r24
    2f8e:	cd 01       	movw	r24, r26
    2f90:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f94:	dc 01       	movw	r26, r24
    2f96:	cb 01       	movw	r24, r22
    2f98:	9e af       	std	Y+62, r25	; 0x3e
    2f9a:	8d af       	std	Y+61, r24	; 0x3d
    2f9c:	0f c0       	rjmp	.+30     	; 0x2fbc <LCD_voidInit+0x1680>
    2f9e:	80 e9       	ldi	r24, 0x90	; 144
    2fa0:	91 e0       	ldi	r25, 0x01	; 1
    2fa2:	9c af       	std	Y+60, r25	; 0x3c
    2fa4:	8b af       	std	Y+59, r24	; 0x3b
    2fa6:	8b ad       	ldd	r24, Y+59	; 0x3b
    2fa8:	9c ad       	ldd	r25, Y+60	; 0x3c
    2faa:	01 97       	sbiw	r24, 0x01	; 1
    2fac:	f1 f7       	brne	.-4      	; 0x2faa <LCD_voidInit+0x166e>
    2fae:	9c af       	std	Y+60, r25	; 0x3c
    2fb0:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2fb2:	8d ad       	ldd	r24, Y+61	; 0x3d
    2fb4:	9e ad       	ldd	r25, Y+62	; 0x3e
    2fb6:	01 97       	sbiw	r24, 0x01	; 1
    2fb8:	9e af       	std	Y+62, r25	; 0x3e
    2fba:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fbc:	8d ad       	ldd	r24, Y+61	; 0x3d
    2fbe:	9e ad       	ldd	r25, Y+62	; 0x3e
    2fc0:	00 97       	sbiw	r24, 0x00	; 0
    2fc2:	69 f7       	brne	.-38     	; 0x2f9e <LCD_voidInit+0x1662>
    2fc4:	16 c0       	rjmp	.+44     	; 0x2ff2 <LCD_voidInit+0x16b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fc6:	fe 01       	movw	r30, r28
    2fc8:	ff 96       	adiw	r30, 0x3f	; 63
    2fca:	60 81       	ld	r22, Z
    2fcc:	71 81       	ldd	r23, Z+1	; 0x01
    2fce:	82 81       	ldd	r24, Z+2	; 0x02
    2fd0:	93 81       	ldd	r25, Z+3	; 0x03
    2fd2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2fd6:	dc 01       	movw	r26, r24
    2fd8:	cb 01       	movw	r24, r22
    2fda:	9e af       	std	Y+62, r25	; 0x3e
    2fdc:	8d af       	std	Y+61, r24	; 0x3d
    2fde:	8d ad       	ldd	r24, Y+61	; 0x3d
    2fe0:	9e ad       	ldd	r25, Y+62	; 0x3e
    2fe2:	9a af       	std	Y+58, r25	; 0x3a
    2fe4:	89 af       	std	Y+57, r24	; 0x39
    2fe6:	89 ad       	ldd	r24, Y+57	; 0x39
    2fe8:	9a ad       	ldd	r25, Y+58	; 0x3a
    2fea:	01 97       	sbiw	r24, 0x01	; 1
    2fec:	f1 f7       	brne	.-4      	; 0x2fea <LCD_voidInit+0x16ae>
    2fee:	9a af       	std	Y+58, r25	; 0x3a
    2ff0:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(1);
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB4_PIN,DIO_u8_LOW);
    2ff2:	81 e0       	ldi	r24, 0x01	; 1
    2ff4:	60 e0       	ldi	r22, 0x00	; 0
    2ff6:	40 e0       	ldi	r20, 0x00	; 0
    2ff8:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB5_PIN,DIO_u8_LOW);
    2ffc:	81 e0       	ldi	r24, 0x01	; 1
    2ffe:	61 e0       	ldi	r22, 0x01	; 1
    3000:	40 e0       	ldi	r20, 0x00	; 0
    3002:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB6_PIN,DIO_u8_LOW);
    3006:	81 e0       	ldi	r24, 0x01	; 1
    3008:	62 e0       	ldi	r22, 0x02	; 2
    300a:	40 e0       	ldi	r20, 0x00	; 0
    300c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB7_PIN,DIO_u8_LOW);
    3010:	81 e0       	ldi	r24, 0x01	; 1
    3012:	64 e0       	ldi	r22, 0x04	; 4
    3014:	40 e0       	ldi	r20, 0x00	; 0
    3016:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>

		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_HIGH);
    301a:	80 e0       	ldi	r24, 0x00	; 0
    301c:	62 e0       	ldi	r22, 0x02	; 2
    301e:	41 e0       	ldi	r20, 0x01	; 1
    3020:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    3024:	80 e0       	ldi	r24, 0x00	; 0
    3026:	90 e0       	ldi	r25, 0x00	; 0
    3028:	a0 e8       	ldi	r26, 0x80	; 128
    302a:	bf e3       	ldi	r27, 0x3F	; 63
    302c:	8d ab       	std	Y+53, r24	; 0x35
    302e:	9e ab       	std	Y+54, r25	; 0x36
    3030:	af ab       	std	Y+55, r26	; 0x37
    3032:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3034:	6d a9       	ldd	r22, Y+53	; 0x35
    3036:	7e a9       	ldd	r23, Y+54	; 0x36
    3038:	8f a9       	ldd	r24, Y+55	; 0x37
    303a:	98 ad       	ldd	r25, Y+56	; 0x38
    303c:	20 e0       	ldi	r18, 0x00	; 0
    303e:	30 e0       	ldi	r19, 0x00	; 0
    3040:	4a e7       	ldi	r20, 0x7A	; 122
    3042:	55 e4       	ldi	r21, 0x45	; 69
    3044:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3048:	dc 01       	movw	r26, r24
    304a:	cb 01       	movw	r24, r22
    304c:	89 ab       	std	Y+49, r24	; 0x31
    304e:	9a ab       	std	Y+50, r25	; 0x32
    3050:	ab ab       	std	Y+51, r26	; 0x33
    3052:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3054:	69 a9       	ldd	r22, Y+49	; 0x31
    3056:	7a a9       	ldd	r23, Y+50	; 0x32
    3058:	8b a9       	ldd	r24, Y+51	; 0x33
    305a:	9c a9       	ldd	r25, Y+52	; 0x34
    305c:	20 e0       	ldi	r18, 0x00	; 0
    305e:	30 e0       	ldi	r19, 0x00	; 0
    3060:	40 e8       	ldi	r20, 0x80	; 128
    3062:	5f e3       	ldi	r21, 0x3F	; 63
    3064:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3068:	88 23       	and	r24, r24
    306a:	2c f4       	brge	.+10     	; 0x3076 <LCD_voidInit+0x173a>
		__ticks = 1;
    306c:	81 e0       	ldi	r24, 0x01	; 1
    306e:	90 e0       	ldi	r25, 0x00	; 0
    3070:	98 ab       	std	Y+48, r25	; 0x30
    3072:	8f a7       	std	Y+47, r24	; 0x2f
    3074:	3f c0       	rjmp	.+126    	; 0x30f4 <LCD_voidInit+0x17b8>
	else if (__tmp > 65535)
    3076:	69 a9       	ldd	r22, Y+49	; 0x31
    3078:	7a a9       	ldd	r23, Y+50	; 0x32
    307a:	8b a9       	ldd	r24, Y+51	; 0x33
    307c:	9c a9       	ldd	r25, Y+52	; 0x34
    307e:	20 e0       	ldi	r18, 0x00	; 0
    3080:	3f ef       	ldi	r19, 0xFF	; 255
    3082:	4f e7       	ldi	r20, 0x7F	; 127
    3084:	57 e4       	ldi	r21, 0x47	; 71
    3086:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    308a:	18 16       	cp	r1, r24
    308c:	4c f5       	brge	.+82     	; 0x30e0 <LCD_voidInit+0x17a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    308e:	6d a9       	ldd	r22, Y+53	; 0x35
    3090:	7e a9       	ldd	r23, Y+54	; 0x36
    3092:	8f a9       	ldd	r24, Y+55	; 0x37
    3094:	98 ad       	ldd	r25, Y+56	; 0x38
    3096:	20 e0       	ldi	r18, 0x00	; 0
    3098:	30 e0       	ldi	r19, 0x00	; 0
    309a:	40 e2       	ldi	r20, 0x20	; 32
    309c:	51 e4       	ldi	r21, 0x41	; 65
    309e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30a2:	dc 01       	movw	r26, r24
    30a4:	cb 01       	movw	r24, r22
    30a6:	bc 01       	movw	r22, r24
    30a8:	cd 01       	movw	r24, r26
    30aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30ae:	dc 01       	movw	r26, r24
    30b0:	cb 01       	movw	r24, r22
    30b2:	98 ab       	std	Y+48, r25	; 0x30
    30b4:	8f a7       	std	Y+47, r24	; 0x2f
    30b6:	0f c0       	rjmp	.+30     	; 0x30d6 <LCD_voidInit+0x179a>
    30b8:	80 e9       	ldi	r24, 0x90	; 144
    30ba:	91 e0       	ldi	r25, 0x01	; 1
    30bc:	9e a7       	std	Y+46, r25	; 0x2e
    30be:	8d a7       	std	Y+45, r24	; 0x2d
    30c0:	8d a5       	ldd	r24, Y+45	; 0x2d
    30c2:	9e a5       	ldd	r25, Y+46	; 0x2e
    30c4:	01 97       	sbiw	r24, 0x01	; 1
    30c6:	f1 f7       	brne	.-4      	; 0x30c4 <LCD_voidInit+0x1788>
    30c8:	9e a7       	std	Y+46, r25	; 0x2e
    30ca:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30cc:	8f a5       	ldd	r24, Y+47	; 0x2f
    30ce:	98 a9       	ldd	r25, Y+48	; 0x30
    30d0:	01 97       	sbiw	r24, 0x01	; 1
    30d2:	98 ab       	std	Y+48, r25	; 0x30
    30d4:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30d6:	8f a5       	ldd	r24, Y+47	; 0x2f
    30d8:	98 a9       	ldd	r25, Y+48	; 0x30
    30da:	00 97       	sbiw	r24, 0x00	; 0
    30dc:	69 f7       	brne	.-38     	; 0x30b8 <LCD_voidInit+0x177c>
    30de:	14 c0       	rjmp	.+40     	; 0x3108 <LCD_voidInit+0x17cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30e0:	69 a9       	ldd	r22, Y+49	; 0x31
    30e2:	7a a9       	ldd	r23, Y+50	; 0x32
    30e4:	8b a9       	ldd	r24, Y+51	; 0x33
    30e6:	9c a9       	ldd	r25, Y+52	; 0x34
    30e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30ec:	dc 01       	movw	r26, r24
    30ee:	cb 01       	movw	r24, r22
    30f0:	98 ab       	std	Y+48, r25	; 0x30
    30f2:	8f a7       	std	Y+47, r24	; 0x2f
    30f4:	8f a5       	ldd	r24, Y+47	; 0x2f
    30f6:	98 a9       	ldd	r25, Y+48	; 0x30
    30f8:	9c a7       	std	Y+44, r25	; 0x2c
    30fa:	8b a7       	std	Y+43, r24	; 0x2b
    30fc:	8b a5       	ldd	r24, Y+43	; 0x2b
    30fe:	9c a5       	ldd	r25, Y+44	; 0x2c
    3100:	01 97       	sbiw	r24, 0x01	; 1
    3102:	f1 f7       	brne	.-4      	; 0x3100 <LCD_voidInit+0x17c4>
    3104:	9c a7       	std	Y+44, r25	; 0x2c
    3106:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(1);

		//SECOND 4 BITS (entry mode set)
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_LOW);
    3108:	80 e0       	ldi	r24, 0x00	; 0
    310a:	62 e0       	ldi	r22, 0x02	; 2
    310c:	40 e0       	ldi	r20, 0x00	; 0
    310e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_RS_PIN ,DIO_u8_LOW);
    3112:	80 e0       	ldi	r24, 0x00	; 0
    3114:	63 e0       	ldi	r22, 0x03	; 3
    3116:	40 e0       	ldi	r20, 0x00	; 0
    3118:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    311c:	80 e0       	ldi	r24, 0x00	; 0
    311e:	90 e0       	ldi	r25, 0x00	; 0
    3120:	a0 e8       	ldi	r26, 0x80	; 128
    3122:	bf e3       	ldi	r27, 0x3F	; 63
    3124:	8f a3       	std	Y+39, r24	; 0x27
    3126:	98 a7       	std	Y+40, r25	; 0x28
    3128:	a9 a7       	std	Y+41, r26	; 0x29
    312a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    312c:	6f a1       	ldd	r22, Y+39	; 0x27
    312e:	78 a5       	ldd	r23, Y+40	; 0x28
    3130:	89 a5       	ldd	r24, Y+41	; 0x29
    3132:	9a a5       	ldd	r25, Y+42	; 0x2a
    3134:	20 e0       	ldi	r18, 0x00	; 0
    3136:	30 e0       	ldi	r19, 0x00	; 0
    3138:	4a e7       	ldi	r20, 0x7A	; 122
    313a:	55 e4       	ldi	r21, 0x45	; 69
    313c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3140:	dc 01       	movw	r26, r24
    3142:	cb 01       	movw	r24, r22
    3144:	8b a3       	std	Y+35, r24	; 0x23
    3146:	9c a3       	std	Y+36, r25	; 0x24
    3148:	ad a3       	std	Y+37, r26	; 0x25
    314a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    314c:	6b a1       	ldd	r22, Y+35	; 0x23
    314e:	7c a1       	ldd	r23, Y+36	; 0x24
    3150:	8d a1       	ldd	r24, Y+37	; 0x25
    3152:	9e a1       	ldd	r25, Y+38	; 0x26
    3154:	20 e0       	ldi	r18, 0x00	; 0
    3156:	30 e0       	ldi	r19, 0x00	; 0
    3158:	40 e8       	ldi	r20, 0x80	; 128
    315a:	5f e3       	ldi	r21, 0x3F	; 63
    315c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3160:	88 23       	and	r24, r24
    3162:	2c f4       	brge	.+10     	; 0x316e <LCD_voidInit+0x1832>
		__ticks = 1;
    3164:	81 e0       	ldi	r24, 0x01	; 1
    3166:	90 e0       	ldi	r25, 0x00	; 0
    3168:	9a a3       	std	Y+34, r25	; 0x22
    316a:	89 a3       	std	Y+33, r24	; 0x21
    316c:	3f c0       	rjmp	.+126    	; 0x31ec <LCD_voidInit+0x18b0>
	else if (__tmp > 65535)
    316e:	6b a1       	ldd	r22, Y+35	; 0x23
    3170:	7c a1       	ldd	r23, Y+36	; 0x24
    3172:	8d a1       	ldd	r24, Y+37	; 0x25
    3174:	9e a1       	ldd	r25, Y+38	; 0x26
    3176:	20 e0       	ldi	r18, 0x00	; 0
    3178:	3f ef       	ldi	r19, 0xFF	; 255
    317a:	4f e7       	ldi	r20, 0x7F	; 127
    317c:	57 e4       	ldi	r21, 0x47	; 71
    317e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3182:	18 16       	cp	r1, r24
    3184:	4c f5       	brge	.+82     	; 0x31d8 <LCD_voidInit+0x189c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3186:	6f a1       	ldd	r22, Y+39	; 0x27
    3188:	78 a5       	ldd	r23, Y+40	; 0x28
    318a:	89 a5       	ldd	r24, Y+41	; 0x29
    318c:	9a a5       	ldd	r25, Y+42	; 0x2a
    318e:	20 e0       	ldi	r18, 0x00	; 0
    3190:	30 e0       	ldi	r19, 0x00	; 0
    3192:	40 e2       	ldi	r20, 0x20	; 32
    3194:	51 e4       	ldi	r21, 0x41	; 65
    3196:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    319a:	dc 01       	movw	r26, r24
    319c:	cb 01       	movw	r24, r22
    319e:	bc 01       	movw	r22, r24
    31a0:	cd 01       	movw	r24, r26
    31a2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31a6:	dc 01       	movw	r26, r24
    31a8:	cb 01       	movw	r24, r22
    31aa:	9a a3       	std	Y+34, r25	; 0x22
    31ac:	89 a3       	std	Y+33, r24	; 0x21
    31ae:	0f c0       	rjmp	.+30     	; 0x31ce <LCD_voidInit+0x1892>
    31b0:	80 e9       	ldi	r24, 0x90	; 144
    31b2:	91 e0       	ldi	r25, 0x01	; 1
    31b4:	98 a3       	std	Y+32, r25	; 0x20
    31b6:	8f 8f       	std	Y+31, r24	; 0x1f
    31b8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    31ba:	98 a1       	ldd	r25, Y+32	; 0x20
    31bc:	01 97       	sbiw	r24, 0x01	; 1
    31be:	f1 f7       	brne	.-4      	; 0x31bc <LCD_voidInit+0x1880>
    31c0:	98 a3       	std	Y+32, r25	; 0x20
    31c2:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31c4:	89 a1       	ldd	r24, Y+33	; 0x21
    31c6:	9a a1       	ldd	r25, Y+34	; 0x22
    31c8:	01 97       	sbiw	r24, 0x01	; 1
    31ca:	9a a3       	std	Y+34, r25	; 0x22
    31cc:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31ce:	89 a1       	ldd	r24, Y+33	; 0x21
    31d0:	9a a1       	ldd	r25, Y+34	; 0x22
    31d2:	00 97       	sbiw	r24, 0x00	; 0
    31d4:	69 f7       	brne	.-38     	; 0x31b0 <LCD_voidInit+0x1874>
    31d6:	14 c0       	rjmp	.+40     	; 0x3200 <LCD_voidInit+0x18c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31d8:	6b a1       	ldd	r22, Y+35	; 0x23
    31da:	7c a1       	ldd	r23, Y+36	; 0x24
    31dc:	8d a1       	ldd	r24, Y+37	; 0x25
    31de:	9e a1       	ldd	r25, Y+38	; 0x26
    31e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31e4:	dc 01       	movw	r26, r24
    31e6:	cb 01       	movw	r24, r22
    31e8:	9a a3       	std	Y+34, r25	; 0x22
    31ea:	89 a3       	std	Y+33, r24	; 0x21
    31ec:	89 a1       	ldd	r24, Y+33	; 0x21
    31ee:	9a a1       	ldd	r25, Y+34	; 0x22
    31f0:	9e 8f       	std	Y+30, r25	; 0x1e
    31f2:	8d 8f       	std	Y+29, r24	; 0x1d
    31f4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    31f6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    31f8:	01 97       	sbiw	r24, 0x01	; 1
    31fa:	f1 f7       	brne	.-4      	; 0x31f8 <LCD_voidInit+0x18bc>
    31fc:	9e 8f       	std	Y+30, r25	; 0x1e
    31fe:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(1);
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB4_PIN,DIO_u8_LOW);
    3200:	81 e0       	ldi	r24, 0x01	; 1
    3202:	60 e0       	ldi	r22, 0x00	; 0
    3204:	40 e0       	ldi	r20, 0x00	; 0
    3206:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB5_PIN,DIO_u8_HIGH);
    320a:	81 e0       	ldi	r24, 0x01	; 1
    320c:	61 e0       	ldi	r22, 0x01	; 1
    320e:	41 e0       	ldi	r20, 0x01	; 1
    3210:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB6_PIN,DIO_u8_HIGH);
    3214:	81 e0       	ldi	r24, 0x01	; 1
    3216:	62 e0       	ldi	r22, 0x02	; 2
    3218:	41 e0       	ldi	r20, 0x01	; 1
    321a:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB7_PIN,DIO_u8_LOW);
    321e:	81 e0       	ldi	r24, 0x01	; 1
    3220:	64 e0       	ldi	r22, 0x04	; 4
    3222:	40 e0       	ldi	r20, 0x00	; 0
    3224:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>

		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_HIGH);
    3228:	80 e0       	ldi	r24, 0x00	; 0
    322a:	62 e0       	ldi	r22, 0x02	; 2
    322c:	41 e0       	ldi	r20, 0x01	; 1
    322e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    3232:	80 e0       	ldi	r24, 0x00	; 0
    3234:	90 e0       	ldi	r25, 0x00	; 0
    3236:	a0 e0       	ldi	r26, 0x00	; 0
    3238:	b0 e4       	ldi	r27, 0x40	; 64
    323a:	89 8f       	std	Y+25, r24	; 0x19
    323c:	9a 8f       	std	Y+26, r25	; 0x1a
    323e:	ab 8f       	std	Y+27, r26	; 0x1b
    3240:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3242:	69 8d       	ldd	r22, Y+25	; 0x19
    3244:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3246:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3248:	9c 8d       	ldd	r25, Y+28	; 0x1c
    324a:	20 e0       	ldi	r18, 0x00	; 0
    324c:	30 e0       	ldi	r19, 0x00	; 0
    324e:	4a e7       	ldi	r20, 0x7A	; 122
    3250:	55 e4       	ldi	r21, 0x45	; 69
    3252:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3256:	dc 01       	movw	r26, r24
    3258:	cb 01       	movw	r24, r22
    325a:	8d 8b       	std	Y+21, r24	; 0x15
    325c:	9e 8b       	std	Y+22, r25	; 0x16
    325e:	af 8b       	std	Y+23, r26	; 0x17
    3260:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3262:	6d 89       	ldd	r22, Y+21	; 0x15
    3264:	7e 89       	ldd	r23, Y+22	; 0x16
    3266:	8f 89       	ldd	r24, Y+23	; 0x17
    3268:	98 8d       	ldd	r25, Y+24	; 0x18
    326a:	20 e0       	ldi	r18, 0x00	; 0
    326c:	30 e0       	ldi	r19, 0x00	; 0
    326e:	40 e8       	ldi	r20, 0x80	; 128
    3270:	5f e3       	ldi	r21, 0x3F	; 63
    3272:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3276:	88 23       	and	r24, r24
    3278:	2c f4       	brge	.+10     	; 0x3284 <LCD_voidInit+0x1948>
		__ticks = 1;
    327a:	81 e0       	ldi	r24, 0x01	; 1
    327c:	90 e0       	ldi	r25, 0x00	; 0
    327e:	9c 8b       	std	Y+20, r25	; 0x14
    3280:	8b 8b       	std	Y+19, r24	; 0x13
    3282:	3f c0       	rjmp	.+126    	; 0x3302 <LCD_voidInit+0x19c6>
	else if (__tmp > 65535)
    3284:	6d 89       	ldd	r22, Y+21	; 0x15
    3286:	7e 89       	ldd	r23, Y+22	; 0x16
    3288:	8f 89       	ldd	r24, Y+23	; 0x17
    328a:	98 8d       	ldd	r25, Y+24	; 0x18
    328c:	20 e0       	ldi	r18, 0x00	; 0
    328e:	3f ef       	ldi	r19, 0xFF	; 255
    3290:	4f e7       	ldi	r20, 0x7F	; 127
    3292:	57 e4       	ldi	r21, 0x47	; 71
    3294:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3298:	18 16       	cp	r1, r24
    329a:	4c f5       	brge	.+82     	; 0x32ee <LCD_voidInit+0x19b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    329c:	69 8d       	ldd	r22, Y+25	; 0x19
    329e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    32a0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    32a2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    32a4:	20 e0       	ldi	r18, 0x00	; 0
    32a6:	30 e0       	ldi	r19, 0x00	; 0
    32a8:	40 e2       	ldi	r20, 0x20	; 32
    32aa:	51 e4       	ldi	r21, 0x41	; 65
    32ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32b0:	dc 01       	movw	r26, r24
    32b2:	cb 01       	movw	r24, r22
    32b4:	bc 01       	movw	r22, r24
    32b6:	cd 01       	movw	r24, r26
    32b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32bc:	dc 01       	movw	r26, r24
    32be:	cb 01       	movw	r24, r22
    32c0:	9c 8b       	std	Y+20, r25	; 0x14
    32c2:	8b 8b       	std	Y+19, r24	; 0x13
    32c4:	0f c0       	rjmp	.+30     	; 0x32e4 <LCD_voidInit+0x19a8>
    32c6:	80 e9       	ldi	r24, 0x90	; 144
    32c8:	91 e0       	ldi	r25, 0x01	; 1
    32ca:	9a 8b       	std	Y+18, r25	; 0x12
    32cc:	89 8b       	std	Y+17, r24	; 0x11
    32ce:	89 89       	ldd	r24, Y+17	; 0x11
    32d0:	9a 89       	ldd	r25, Y+18	; 0x12
    32d2:	01 97       	sbiw	r24, 0x01	; 1
    32d4:	f1 f7       	brne	.-4      	; 0x32d2 <LCD_voidInit+0x1996>
    32d6:	9a 8b       	std	Y+18, r25	; 0x12
    32d8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    32da:	8b 89       	ldd	r24, Y+19	; 0x13
    32dc:	9c 89       	ldd	r25, Y+20	; 0x14
    32de:	01 97       	sbiw	r24, 0x01	; 1
    32e0:	9c 8b       	std	Y+20, r25	; 0x14
    32e2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32e4:	8b 89       	ldd	r24, Y+19	; 0x13
    32e6:	9c 89       	ldd	r25, Y+20	; 0x14
    32e8:	00 97       	sbiw	r24, 0x00	; 0
    32ea:	69 f7       	brne	.-38     	; 0x32c6 <LCD_voidInit+0x198a>
    32ec:	14 c0       	rjmp	.+40     	; 0x3316 <LCD_voidInit+0x19da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32ee:	6d 89       	ldd	r22, Y+21	; 0x15
    32f0:	7e 89       	ldd	r23, Y+22	; 0x16
    32f2:	8f 89       	ldd	r24, Y+23	; 0x17
    32f4:	98 8d       	ldd	r25, Y+24	; 0x18
    32f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32fa:	dc 01       	movw	r26, r24
    32fc:	cb 01       	movw	r24, r22
    32fe:	9c 8b       	std	Y+20, r25	; 0x14
    3300:	8b 8b       	std	Y+19, r24	; 0x13
    3302:	8b 89       	ldd	r24, Y+19	; 0x13
    3304:	9c 89       	ldd	r25, Y+20	; 0x14
    3306:	98 8b       	std	Y+16, r25	; 0x10
    3308:	8f 87       	std	Y+15, r24	; 0x0f
    330a:	8f 85       	ldd	r24, Y+15	; 0x0f
    330c:	98 89       	ldd	r25, Y+16	; 0x10
    330e:	01 97       	sbiw	r24, 0x01	; 1
    3310:	f1 f7       	brne	.-4      	; 0x330e <LCD_voidInit+0x19d2>
    3312:	98 8b       	std	Y+16, r25	; 0x10
    3314:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(2);
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN ,DIO_u8_LOW);
    3316:	80 e0       	ldi	r24, 0x00	; 0
    3318:	62 e0       	ldi	r22, 0x02	; 2
    331a:	40 e0       	ldi	r20, 0x00	; 0
    331c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    3320:	80 e0       	ldi	r24, 0x00	; 0
    3322:	90 e0       	ldi	r25, 0x00	; 0
    3324:	a0 e8       	ldi	r26, 0x80	; 128
    3326:	bf e3       	ldi	r27, 0x3F	; 63
    3328:	8b 87       	std	Y+11, r24	; 0x0b
    332a:	9c 87       	std	Y+12, r25	; 0x0c
    332c:	ad 87       	std	Y+13, r26	; 0x0d
    332e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3330:	6b 85       	ldd	r22, Y+11	; 0x0b
    3332:	7c 85       	ldd	r23, Y+12	; 0x0c
    3334:	8d 85       	ldd	r24, Y+13	; 0x0d
    3336:	9e 85       	ldd	r25, Y+14	; 0x0e
    3338:	20 e0       	ldi	r18, 0x00	; 0
    333a:	30 e0       	ldi	r19, 0x00	; 0
    333c:	4a e7       	ldi	r20, 0x7A	; 122
    333e:	55 e4       	ldi	r21, 0x45	; 69
    3340:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3344:	dc 01       	movw	r26, r24
    3346:	cb 01       	movw	r24, r22
    3348:	8f 83       	std	Y+7, r24	; 0x07
    334a:	98 87       	std	Y+8, r25	; 0x08
    334c:	a9 87       	std	Y+9, r26	; 0x09
    334e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3350:	6f 81       	ldd	r22, Y+7	; 0x07
    3352:	78 85       	ldd	r23, Y+8	; 0x08
    3354:	89 85       	ldd	r24, Y+9	; 0x09
    3356:	9a 85       	ldd	r25, Y+10	; 0x0a
    3358:	20 e0       	ldi	r18, 0x00	; 0
    335a:	30 e0       	ldi	r19, 0x00	; 0
    335c:	40 e8       	ldi	r20, 0x80	; 128
    335e:	5f e3       	ldi	r21, 0x3F	; 63
    3360:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3364:	88 23       	and	r24, r24
    3366:	2c f4       	brge	.+10     	; 0x3372 <LCD_voidInit+0x1a36>
		__ticks = 1;
    3368:	81 e0       	ldi	r24, 0x01	; 1
    336a:	90 e0       	ldi	r25, 0x00	; 0
    336c:	9e 83       	std	Y+6, r25	; 0x06
    336e:	8d 83       	std	Y+5, r24	; 0x05
    3370:	3f c0       	rjmp	.+126    	; 0x33f0 <LCD_voidInit+0x1ab4>
	else if (__tmp > 65535)
    3372:	6f 81       	ldd	r22, Y+7	; 0x07
    3374:	78 85       	ldd	r23, Y+8	; 0x08
    3376:	89 85       	ldd	r24, Y+9	; 0x09
    3378:	9a 85       	ldd	r25, Y+10	; 0x0a
    337a:	20 e0       	ldi	r18, 0x00	; 0
    337c:	3f ef       	ldi	r19, 0xFF	; 255
    337e:	4f e7       	ldi	r20, 0x7F	; 127
    3380:	57 e4       	ldi	r21, 0x47	; 71
    3382:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3386:	18 16       	cp	r1, r24
    3388:	4c f5       	brge	.+82     	; 0x33dc <LCD_voidInit+0x1aa0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    338a:	6b 85       	ldd	r22, Y+11	; 0x0b
    338c:	7c 85       	ldd	r23, Y+12	; 0x0c
    338e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3390:	9e 85       	ldd	r25, Y+14	; 0x0e
    3392:	20 e0       	ldi	r18, 0x00	; 0
    3394:	30 e0       	ldi	r19, 0x00	; 0
    3396:	40 e2       	ldi	r20, 0x20	; 32
    3398:	51 e4       	ldi	r21, 0x41	; 65
    339a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    339e:	dc 01       	movw	r26, r24
    33a0:	cb 01       	movw	r24, r22
    33a2:	bc 01       	movw	r22, r24
    33a4:	cd 01       	movw	r24, r26
    33a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33aa:	dc 01       	movw	r26, r24
    33ac:	cb 01       	movw	r24, r22
    33ae:	9e 83       	std	Y+6, r25	; 0x06
    33b0:	8d 83       	std	Y+5, r24	; 0x05
    33b2:	0f c0       	rjmp	.+30     	; 0x33d2 <LCD_voidInit+0x1a96>
    33b4:	80 e9       	ldi	r24, 0x90	; 144
    33b6:	91 e0       	ldi	r25, 0x01	; 1
    33b8:	9c 83       	std	Y+4, r25	; 0x04
    33ba:	8b 83       	std	Y+3, r24	; 0x03
    33bc:	8b 81       	ldd	r24, Y+3	; 0x03
    33be:	9c 81       	ldd	r25, Y+4	; 0x04
    33c0:	01 97       	sbiw	r24, 0x01	; 1
    33c2:	f1 f7       	brne	.-4      	; 0x33c0 <LCD_voidInit+0x1a84>
    33c4:	9c 83       	std	Y+4, r25	; 0x04
    33c6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33c8:	8d 81       	ldd	r24, Y+5	; 0x05
    33ca:	9e 81       	ldd	r25, Y+6	; 0x06
    33cc:	01 97       	sbiw	r24, 0x01	; 1
    33ce:	9e 83       	std	Y+6, r25	; 0x06
    33d0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33d2:	8d 81       	ldd	r24, Y+5	; 0x05
    33d4:	9e 81       	ldd	r25, Y+6	; 0x06
    33d6:	00 97       	sbiw	r24, 0x00	; 0
    33d8:	69 f7       	brne	.-38     	; 0x33b4 <LCD_voidInit+0x1a78>
    33da:	14 c0       	rjmp	.+40     	; 0x3404 <LCD_voidInit+0x1ac8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33dc:	6f 81       	ldd	r22, Y+7	; 0x07
    33de:	78 85       	ldd	r23, Y+8	; 0x08
    33e0:	89 85       	ldd	r24, Y+9	; 0x09
    33e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    33e4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33e8:	dc 01       	movw	r26, r24
    33ea:	cb 01       	movw	r24, r22
    33ec:	9e 83       	std	Y+6, r25	; 0x06
    33ee:	8d 83       	std	Y+5, r24	; 0x05
    33f0:	8d 81       	ldd	r24, Y+5	; 0x05
    33f2:	9e 81       	ldd	r25, Y+6	; 0x06
    33f4:	9a 83       	std	Y+2, r25	; 0x02
    33f6:	89 83       	std	Y+1, r24	; 0x01
    33f8:	89 81       	ldd	r24, Y+1	; 0x01
    33fa:	9a 81       	ldd	r25, Y+2	; 0x02
    33fc:	01 97       	sbiw	r24, 0x01	; 1
    33fe:	f1 f7       	brne	.-4      	; 0x33fc <LCD_voidInit+0x1ac0>
    3400:	9a 83       	std	Y+2, r25	; 0x02
    3402:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(1);

}
    3404:	c6 5f       	subi	r28, 0xF6	; 246
    3406:	de 4f       	sbci	r29, 0xFE	; 254
    3408:	0f b6       	in	r0, 0x3f	; 63
    340a:	f8 94       	cli
    340c:	de bf       	out	0x3e, r29	; 62
    340e:	0f be       	out	0x3f, r0	; 63
    3410:	cd bf       	out	0x3d, r28	; 61
    3412:	cf 91       	pop	r28
    3414:	df 91       	pop	r29
    3416:	1f 91       	pop	r17
    3418:	0f 91       	pop	r16
    341a:	08 95       	ret

0000341c <LCD_voidSendCmnd>:

void LCD_voidSendCmnd(u8  Copy_u8Cmnd)
{
    341c:	df 93       	push	r29
    341e:	cf 93       	push	r28
    3420:	cd b7       	in	r28, 0x3d	; 61
    3422:	de b7       	in	r29, 0x3e	; 62
    3424:	e9 97       	sbiw	r28, 0x39	; 57
    3426:	0f b6       	in	r0, 0x3f	; 63
    3428:	f8 94       	cli
    342a:	de bf       	out	0x3e, r29	; 62
    342c:	0f be       	out	0x3f, r0	; 63
    342e:	cd bf       	out	0x3d, r28	; 61
    3430:	89 af       	std	Y+57, r24	; 0x39
	DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN,DIO_u8_LOW);
    3432:	80 e0       	ldi	r24, 0x00	; 0
    3434:	62 e0       	ldi	r22, 0x02	; 2
    3436:	40 e0       	ldi	r20, 0x00	; 0
    3438:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_u8_PORTA,LCD_RS_PIN,DIO_u8_LOW);
    343c:	80 e0       	ldi	r24, 0x00	; 0
    343e:	63 e0       	ldi	r22, 0x03	; 3
    3440:	40 e0       	ldi	r20, 0x00	; 0
    3442:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>

	DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB4_PIN,GET_BIT(Copy_u8Cmnd,4));
    3446:	89 ad       	ldd	r24, Y+57	; 0x39
    3448:	82 95       	swap	r24
    344a:	8f 70       	andi	r24, 0x0F	; 15
    344c:	98 2f       	mov	r25, r24
    344e:	91 70       	andi	r25, 0x01	; 1
    3450:	81 e0       	ldi	r24, 0x01	; 1
    3452:	60 e0       	ldi	r22, 0x00	; 0
    3454:	49 2f       	mov	r20, r25
    3456:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB5_PIN,GET_BIT(Copy_u8Cmnd,5));
    345a:	89 ad       	ldd	r24, Y+57	; 0x39
    345c:	82 95       	swap	r24
    345e:	86 95       	lsr	r24
    3460:	87 70       	andi	r24, 0x07	; 7
    3462:	98 2f       	mov	r25, r24
    3464:	91 70       	andi	r25, 0x01	; 1
    3466:	81 e0       	ldi	r24, 0x01	; 1
    3468:	61 e0       	ldi	r22, 0x01	; 1
    346a:	49 2f       	mov	r20, r25
    346c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB6_PIN,GET_BIT(Copy_u8Cmnd,6));
    3470:	89 ad       	ldd	r24, Y+57	; 0x39
    3472:	82 95       	swap	r24
    3474:	86 95       	lsr	r24
    3476:	86 95       	lsr	r24
    3478:	83 70       	andi	r24, 0x03	; 3
    347a:	98 2f       	mov	r25, r24
    347c:	91 70       	andi	r25, 0x01	; 1
    347e:	81 e0       	ldi	r24, 0x01	; 1
    3480:	62 e0       	ldi	r22, 0x02	; 2
    3482:	49 2f       	mov	r20, r25
    3484:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB7_PIN,GET_BIT(Copy_u8Cmnd,7));
    3488:	89 ad       	ldd	r24, Y+57	; 0x39
    348a:	98 2f       	mov	r25, r24
    348c:	99 1f       	adc	r25, r25
    348e:	99 27       	eor	r25, r25
    3490:	99 1f       	adc	r25, r25
    3492:	81 e0       	ldi	r24, 0x01	; 1
    3494:	64 e0       	ldi	r22, 0x04	; 4
    3496:	49 2f       	mov	r20, r25
    3498:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>

	DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN,DIO_u8_HIGH);
    349c:	80 e0       	ldi	r24, 0x00	; 0
    349e:	62 e0       	ldi	r22, 0x02	; 2
    34a0:	41 e0       	ldi	r20, 0x01	; 1
    34a2:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    34a6:	80 e0       	ldi	r24, 0x00	; 0
    34a8:	90 e0       	ldi	r25, 0x00	; 0
    34aa:	a0 e0       	ldi	r26, 0x00	; 0
    34ac:	b0 e4       	ldi	r27, 0x40	; 64
    34ae:	8d ab       	std	Y+53, r24	; 0x35
    34b0:	9e ab       	std	Y+54, r25	; 0x36
    34b2:	af ab       	std	Y+55, r26	; 0x37
    34b4:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    34b6:	6d a9       	ldd	r22, Y+53	; 0x35
    34b8:	7e a9       	ldd	r23, Y+54	; 0x36
    34ba:	8f a9       	ldd	r24, Y+55	; 0x37
    34bc:	98 ad       	ldd	r25, Y+56	; 0x38
    34be:	20 e0       	ldi	r18, 0x00	; 0
    34c0:	30 e0       	ldi	r19, 0x00	; 0
    34c2:	4a e7       	ldi	r20, 0x7A	; 122
    34c4:	55 e4       	ldi	r21, 0x45	; 69
    34c6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34ca:	dc 01       	movw	r26, r24
    34cc:	cb 01       	movw	r24, r22
    34ce:	89 ab       	std	Y+49, r24	; 0x31
    34d0:	9a ab       	std	Y+50, r25	; 0x32
    34d2:	ab ab       	std	Y+51, r26	; 0x33
    34d4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    34d6:	69 a9       	ldd	r22, Y+49	; 0x31
    34d8:	7a a9       	ldd	r23, Y+50	; 0x32
    34da:	8b a9       	ldd	r24, Y+51	; 0x33
    34dc:	9c a9       	ldd	r25, Y+52	; 0x34
    34de:	20 e0       	ldi	r18, 0x00	; 0
    34e0:	30 e0       	ldi	r19, 0x00	; 0
    34e2:	40 e8       	ldi	r20, 0x80	; 128
    34e4:	5f e3       	ldi	r21, 0x3F	; 63
    34e6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    34ea:	88 23       	and	r24, r24
    34ec:	2c f4       	brge	.+10     	; 0x34f8 <LCD_voidSendCmnd+0xdc>
		__ticks = 1;
    34ee:	81 e0       	ldi	r24, 0x01	; 1
    34f0:	90 e0       	ldi	r25, 0x00	; 0
    34f2:	98 ab       	std	Y+48, r25	; 0x30
    34f4:	8f a7       	std	Y+47, r24	; 0x2f
    34f6:	3f c0       	rjmp	.+126    	; 0x3576 <LCD_voidSendCmnd+0x15a>
	else if (__tmp > 65535)
    34f8:	69 a9       	ldd	r22, Y+49	; 0x31
    34fa:	7a a9       	ldd	r23, Y+50	; 0x32
    34fc:	8b a9       	ldd	r24, Y+51	; 0x33
    34fe:	9c a9       	ldd	r25, Y+52	; 0x34
    3500:	20 e0       	ldi	r18, 0x00	; 0
    3502:	3f ef       	ldi	r19, 0xFF	; 255
    3504:	4f e7       	ldi	r20, 0x7F	; 127
    3506:	57 e4       	ldi	r21, 0x47	; 71
    3508:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    350c:	18 16       	cp	r1, r24
    350e:	4c f5       	brge	.+82     	; 0x3562 <LCD_voidSendCmnd+0x146>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3510:	6d a9       	ldd	r22, Y+53	; 0x35
    3512:	7e a9       	ldd	r23, Y+54	; 0x36
    3514:	8f a9       	ldd	r24, Y+55	; 0x37
    3516:	98 ad       	ldd	r25, Y+56	; 0x38
    3518:	20 e0       	ldi	r18, 0x00	; 0
    351a:	30 e0       	ldi	r19, 0x00	; 0
    351c:	40 e2       	ldi	r20, 0x20	; 32
    351e:	51 e4       	ldi	r21, 0x41	; 65
    3520:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3524:	dc 01       	movw	r26, r24
    3526:	cb 01       	movw	r24, r22
    3528:	bc 01       	movw	r22, r24
    352a:	cd 01       	movw	r24, r26
    352c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3530:	dc 01       	movw	r26, r24
    3532:	cb 01       	movw	r24, r22
    3534:	98 ab       	std	Y+48, r25	; 0x30
    3536:	8f a7       	std	Y+47, r24	; 0x2f
    3538:	0f c0       	rjmp	.+30     	; 0x3558 <LCD_voidSendCmnd+0x13c>
    353a:	80 e9       	ldi	r24, 0x90	; 144
    353c:	91 e0       	ldi	r25, 0x01	; 1
    353e:	9e a7       	std	Y+46, r25	; 0x2e
    3540:	8d a7       	std	Y+45, r24	; 0x2d
    3542:	8d a5       	ldd	r24, Y+45	; 0x2d
    3544:	9e a5       	ldd	r25, Y+46	; 0x2e
    3546:	01 97       	sbiw	r24, 0x01	; 1
    3548:	f1 f7       	brne	.-4      	; 0x3546 <LCD_voidSendCmnd+0x12a>
    354a:	9e a7       	std	Y+46, r25	; 0x2e
    354c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    354e:	8f a5       	ldd	r24, Y+47	; 0x2f
    3550:	98 a9       	ldd	r25, Y+48	; 0x30
    3552:	01 97       	sbiw	r24, 0x01	; 1
    3554:	98 ab       	std	Y+48, r25	; 0x30
    3556:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3558:	8f a5       	ldd	r24, Y+47	; 0x2f
    355a:	98 a9       	ldd	r25, Y+48	; 0x30
    355c:	00 97       	sbiw	r24, 0x00	; 0
    355e:	69 f7       	brne	.-38     	; 0x353a <LCD_voidSendCmnd+0x11e>
    3560:	14 c0       	rjmp	.+40     	; 0x358a <LCD_voidSendCmnd+0x16e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3562:	69 a9       	ldd	r22, Y+49	; 0x31
    3564:	7a a9       	ldd	r23, Y+50	; 0x32
    3566:	8b a9       	ldd	r24, Y+51	; 0x33
    3568:	9c a9       	ldd	r25, Y+52	; 0x34
    356a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    356e:	dc 01       	movw	r26, r24
    3570:	cb 01       	movw	r24, r22
    3572:	98 ab       	std	Y+48, r25	; 0x30
    3574:	8f a7       	std	Y+47, r24	; 0x2f
    3576:	8f a5       	ldd	r24, Y+47	; 0x2f
    3578:	98 a9       	ldd	r25, Y+48	; 0x30
    357a:	9c a7       	std	Y+44, r25	; 0x2c
    357c:	8b a7       	std	Y+43, r24	; 0x2b
    357e:	8b a5       	ldd	r24, Y+43	; 0x2b
    3580:	9c a5       	ldd	r25, Y+44	; 0x2c
    3582:	01 97       	sbiw	r24, 0x01	; 1
    3584:	f1 f7       	brne	.-4      	; 0x3582 <LCD_voidSendCmnd+0x166>
    3586:	9c a7       	std	Y+44, r25	; 0x2c
    3588:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(2);

		//second 4 bits
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN,DIO_u8_LOW);
    358a:	80 e0       	ldi	r24, 0x00	; 0
    358c:	62 e0       	ldi	r22, 0x02	; 2
    358e:	40 e0       	ldi	r20, 0x00	; 0
    3590:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    3594:	80 e0       	ldi	r24, 0x00	; 0
    3596:	90 e0       	ldi	r25, 0x00	; 0
    3598:	a0 e0       	ldi	r26, 0x00	; 0
    359a:	b0 e4       	ldi	r27, 0x40	; 64
    359c:	8f a3       	std	Y+39, r24	; 0x27
    359e:	98 a7       	std	Y+40, r25	; 0x28
    35a0:	a9 a7       	std	Y+41, r26	; 0x29
    35a2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35a4:	6f a1       	ldd	r22, Y+39	; 0x27
    35a6:	78 a5       	ldd	r23, Y+40	; 0x28
    35a8:	89 a5       	ldd	r24, Y+41	; 0x29
    35aa:	9a a5       	ldd	r25, Y+42	; 0x2a
    35ac:	20 e0       	ldi	r18, 0x00	; 0
    35ae:	30 e0       	ldi	r19, 0x00	; 0
    35b0:	4a e7       	ldi	r20, 0x7A	; 122
    35b2:	55 e4       	ldi	r21, 0x45	; 69
    35b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35b8:	dc 01       	movw	r26, r24
    35ba:	cb 01       	movw	r24, r22
    35bc:	8b a3       	std	Y+35, r24	; 0x23
    35be:	9c a3       	std	Y+36, r25	; 0x24
    35c0:	ad a3       	std	Y+37, r26	; 0x25
    35c2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    35c4:	6b a1       	ldd	r22, Y+35	; 0x23
    35c6:	7c a1       	ldd	r23, Y+36	; 0x24
    35c8:	8d a1       	ldd	r24, Y+37	; 0x25
    35ca:	9e a1       	ldd	r25, Y+38	; 0x26
    35cc:	20 e0       	ldi	r18, 0x00	; 0
    35ce:	30 e0       	ldi	r19, 0x00	; 0
    35d0:	40 e8       	ldi	r20, 0x80	; 128
    35d2:	5f e3       	ldi	r21, 0x3F	; 63
    35d4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    35d8:	88 23       	and	r24, r24
    35da:	2c f4       	brge	.+10     	; 0x35e6 <LCD_voidSendCmnd+0x1ca>
		__ticks = 1;
    35dc:	81 e0       	ldi	r24, 0x01	; 1
    35de:	90 e0       	ldi	r25, 0x00	; 0
    35e0:	9a a3       	std	Y+34, r25	; 0x22
    35e2:	89 a3       	std	Y+33, r24	; 0x21
    35e4:	3f c0       	rjmp	.+126    	; 0x3664 <LCD_voidSendCmnd+0x248>
	else if (__tmp > 65535)
    35e6:	6b a1       	ldd	r22, Y+35	; 0x23
    35e8:	7c a1       	ldd	r23, Y+36	; 0x24
    35ea:	8d a1       	ldd	r24, Y+37	; 0x25
    35ec:	9e a1       	ldd	r25, Y+38	; 0x26
    35ee:	20 e0       	ldi	r18, 0x00	; 0
    35f0:	3f ef       	ldi	r19, 0xFF	; 255
    35f2:	4f e7       	ldi	r20, 0x7F	; 127
    35f4:	57 e4       	ldi	r21, 0x47	; 71
    35f6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    35fa:	18 16       	cp	r1, r24
    35fc:	4c f5       	brge	.+82     	; 0x3650 <LCD_voidSendCmnd+0x234>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35fe:	6f a1       	ldd	r22, Y+39	; 0x27
    3600:	78 a5       	ldd	r23, Y+40	; 0x28
    3602:	89 a5       	ldd	r24, Y+41	; 0x29
    3604:	9a a5       	ldd	r25, Y+42	; 0x2a
    3606:	20 e0       	ldi	r18, 0x00	; 0
    3608:	30 e0       	ldi	r19, 0x00	; 0
    360a:	40 e2       	ldi	r20, 0x20	; 32
    360c:	51 e4       	ldi	r21, 0x41	; 65
    360e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3612:	dc 01       	movw	r26, r24
    3614:	cb 01       	movw	r24, r22
    3616:	bc 01       	movw	r22, r24
    3618:	cd 01       	movw	r24, r26
    361a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    361e:	dc 01       	movw	r26, r24
    3620:	cb 01       	movw	r24, r22
    3622:	9a a3       	std	Y+34, r25	; 0x22
    3624:	89 a3       	std	Y+33, r24	; 0x21
    3626:	0f c0       	rjmp	.+30     	; 0x3646 <LCD_voidSendCmnd+0x22a>
    3628:	80 e9       	ldi	r24, 0x90	; 144
    362a:	91 e0       	ldi	r25, 0x01	; 1
    362c:	98 a3       	std	Y+32, r25	; 0x20
    362e:	8f 8f       	std	Y+31, r24	; 0x1f
    3630:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3632:	98 a1       	ldd	r25, Y+32	; 0x20
    3634:	01 97       	sbiw	r24, 0x01	; 1
    3636:	f1 f7       	brne	.-4      	; 0x3634 <LCD_voidSendCmnd+0x218>
    3638:	98 a3       	std	Y+32, r25	; 0x20
    363a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    363c:	89 a1       	ldd	r24, Y+33	; 0x21
    363e:	9a a1       	ldd	r25, Y+34	; 0x22
    3640:	01 97       	sbiw	r24, 0x01	; 1
    3642:	9a a3       	std	Y+34, r25	; 0x22
    3644:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3646:	89 a1       	ldd	r24, Y+33	; 0x21
    3648:	9a a1       	ldd	r25, Y+34	; 0x22
    364a:	00 97       	sbiw	r24, 0x00	; 0
    364c:	69 f7       	brne	.-38     	; 0x3628 <LCD_voidSendCmnd+0x20c>
    364e:	14 c0       	rjmp	.+40     	; 0x3678 <LCD_voidSendCmnd+0x25c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3650:	6b a1       	ldd	r22, Y+35	; 0x23
    3652:	7c a1       	ldd	r23, Y+36	; 0x24
    3654:	8d a1       	ldd	r24, Y+37	; 0x25
    3656:	9e a1       	ldd	r25, Y+38	; 0x26
    3658:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    365c:	dc 01       	movw	r26, r24
    365e:	cb 01       	movw	r24, r22
    3660:	9a a3       	std	Y+34, r25	; 0x22
    3662:	89 a3       	std	Y+33, r24	; 0x21
    3664:	89 a1       	ldd	r24, Y+33	; 0x21
    3666:	9a a1       	ldd	r25, Y+34	; 0x22
    3668:	9e 8f       	std	Y+30, r25	; 0x1e
    366a:	8d 8f       	std	Y+29, r24	; 0x1d
    366c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    366e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3670:	01 97       	sbiw	r24, 0x01	; 1
    3672:	f1 f7       	brne	.-4      	; 0x3670 <LCD_voidSendCmnd+0x254>
    3674:	9e 8f       	std	Y+30, r25	; 0x1e
    3676:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(2);

		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB4_PIN,GET_BIT(Copy_u8Cmnd,0));
    3678:	89 ad       	ldd	r24, Y+57	; 0x39
    367a:	98 2f       	mov	r25, r24
    367c:	91 70       	andi	r25, 0x01	; 1
    367e:	81 e0       	ldi	r24, 0x01	; 1
    3680:	60 e0       	ldi	r22, 0x00	; 0
    3682:	49 2f       	mov	r20, r25
    3684:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB5_PIN,GET_BIT(Copy_u8Cmnd,1));
    3688:	89 ad       	ldd	r24, Y+57	; 0x39
    368a:	86 95       	lsr	r24
    368c:	98 2f       	mov	r25, r24
    368e:	91 70       	andi	r25, 0x01	; 1
    3690:	81 e0       	ldi	r24, 0x01	; 1
    3692:	61 e0       	ldi	r22, 0x01	; 1
    3694:	49 2f       	mov	r20, r25
    3696:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB6_PIN,GET_BIT(Copy_u8Cmnd,2));
    369a:	89 ad       	ldd	r24, Y+57	; 0x39
    369c:	86 95       	lsr	r24
    369e:	86 95       	lsr	r24
    36a0:	98 2f       	mov	r25, r24
    36a2:	91 70       	andi	r25, 0x01	; 1
    36a4:	81 e0       	ldi	r24, 0x01	; 1
    36a6:	62 e0       	ldi	r22, 0x02	; 2
    36a8:	49 2f       	mov	r20, r25
    36aa:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB7_PIN,GET_BIT(Copy_u8Cmnd,3));
    36ae:	89 ad       	ldd	r24, Y+57	; 0x39
    36b0:	86 95       	lsr	r24
    36b2:	86 95       	lsr	r24
    36b4:	86 95       	lsr	r24
    36b6:	98 2f       	mov	r25, r24
    36b8:	91 70       	andi	r25, 0x01	; 1
    36ba:	81 e0       	ldi	r24, 0x01	; 1
    36bc:	64 e0       	ldi	r22, 0x04	; 4
    36be:	49 2f       	mov	r20, r25
    36c0:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>

		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN,DIO_u8_HIGH);
    36c4:	80 e0       	ldi	r24, 0x00	; 0
    36c6:	62 e0       	ldi	r22, 0x02	; 2
    36c8:	41 e0       	ldi	r20, 0x01	; 1
    36ca:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    36ce:	80 e0       	ldi	r24, 0x00	; 0
    36d0:	90 e0       	ldi	r25, 0x00	; 0
    36d2:	a0 e0       	ldi	r26, 0x00	; 0
    36d4:	b0 e4       	ldi	r27, 0x40	; 64
    36d6:	89 8f       	std	Y+25, r24	; 0x19
    36d8:	9a 8f       	std	Y+26, r25	; 0x1a
    36da:	ab 8f       	std	Y+27, r26	; 0x1b
    36dc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36de:	69 8d       	ldd	r22, Y+25	; 0x19
    36e0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    36e2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    36e4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    36e6:	20 e0       	ldi	r18, 0x00	; 0
    36e8:	30 e0       	ldi	r19, 0x00	; 0
    36ea:	4a e7       	ldi	r20, 0x7A	; 122
    36ec:	55 e4       	ldi	r21, 0x45	; 69
    36ee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    36f2:	dc 01       	movw	r26, r24
    36f4:	cb 01       	movw	r24, r22
    36f6:	8d 8b       	std	Y+21, r24	; 0x15
    36f8:	9e 8b       	std	Y+22, r25	; 0x16
    36fa:	af 8b       	std	Y+23, r26	; 0x17
    36fc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    36fe:	6d 89       	ldd	r22, Y+21	; 0x15
    3700:	7e 89       	ldd	r23, Y+22	; 0x16
    3702:	8f 89       	ldd	r24, Y+23	; 0x17
    3704:	98 8d       	ldd	r25, Y+24	; 0x18
    3706:	20 e0       	ldi	r18, 0x00	; 0
    3708:	30 e0       	ldi	r19, 0x00	; 0
    370a:	40 e8       	ldi	r20, 0x80	; 128
    370c:	5f e3       	ldi	r21, 0x3F	; 63
    370e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3712:	88 23       	and	r24, r24
    3714:	2c f4       	brge	.+10     	; 0x3720 <LCD_voidSendCmnd+0x304>
		__ticks = 1;
    3716:	81 e0       	ldi	r24, 0x01	; 1
    3718:	90 e0       	ldi	r25, 0x00	; 0
    371a:	9c 8b       	std	Y+20, r25	; 0x14
    371c:	8b 8b       	std	Y+19, r24	; 0x13
    371e:	3f c0       	rjmp	.+126    	; 0x379e <LCD_voidSendCmnd+0x382>
	else if (__tmp > 65535)
    3720:	6d 89       	ldd	r22, Y+21	; 0x15
    3722:	7e 89       	ldd	r23, Y+22	; 0x16
    3724:	8f 89       	ldd	r24, Y+23	; 0x17
    3726:	98 8d       	ldd	r25, Y+24	; 0x18
    3728:	20 e0       	ldi	r18, 0x00	; 0
    372a:	3f ef       	ldi	r19, 0xFF	; 255
    372c:	4f e7       	ldi	r20, 0x7F	; 127
    372e:	57 e4       	ldi	r21, 0x47	; 71
    3730:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3734:	18 16       	cp	r1, r24
    3736:	4c f5       	brge	.+82     	; 0x378a <LCD_voidSendCmnd+0x36e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3738:	69 8d       	ldd	r22, Y+25	; 0x19
    373a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    373c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    373e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3740:	20 e0       	ldi	r18, 0x00	; 0
    3742:	30 e0       	ldi	r19, 0x00	; 0
    3744:	40 e2       	ldi	r20, 0x20	; 32
    3746:	51 e4       	ldi	r21, 0x41	; 65
    3748:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    374c:	dc 01       	movw	r26, r24
    374e:	cb 01       	movw	r24, r22
    3750:	bc 01       	movw	r22, r24
    3752:	cd 01       	movw	r24, r26
    3754:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3758:	dc 01       	movw	r26, r24
    375a:	cb 01       	movw	r24, r22
    375c:	9c 8b       	std	Y+20, r25	; 0x14
    375e:	8b 8b       	std	Y+19, r24	; 0x13
    3760:	0f c0       	rjmp	.+30     	; 0x3780 <LCD_voidSendCmnd+0x364>
    3762:	80 e9       	ldi	r24, 0x90	; 144
    3764:	91 e0       	ldi	r25, 0x01	; 1
    3766:	9a 8b       	std	Y+18, r25	; 0x12
    3768:	89 8b       	std	Y+17, r24	; 0x11
    376a:	89 89       	ldd	r24, Y+17	; 0x11
    376c:	9a 89       	ldd	r25, Y+18	; 0x12
    376e:	01 97       	sbiw	r24, 0x01	; 1
    3770:	f1 f7       	brne	.-4      	; 0x376e <LCD_voidSendCmnd+0x352>
    3772:	9a 8b       	std	Y+18, r25	; 0x12
    3774:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3776:	8b 89       	ldd	r24, Y+19	; 0x13
    3778:	9c 89       	ldd	r25, Y+20	; 0x14
    377a:	01 97       	sbiw	r24, 0x01	; 1
    377c:	9c 8b       	std	Y+20, r25	; 0x14
    377e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3780:	8b 89       	ldd	r24, Y+19	; 0x13
    3782:	9c 89       	ldd	r25, Y+20	; 0x14
    3784:	00 97       	sbiw	r24, 0x00	; 0
    3786:	69 f7       	brne	.-38     	; 0x3762 <LCD_voidSendCmnd+0x346>
    3788:	14 c0       	rjmp	.+40     	; 0x37b2 <LCD_voidSendCmnd+0x396>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    378a:	6d 89       	ldd	r22, Y+21	; 0x15
    378c:	7e 89       	ldd	r23, Y+22	; 0x16
    378e:	8f 89       	ldd	r24, Y+23	; 0x17
    3790:	98 8d       	ldd	r25, Y+24	; 0x18
    3792:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3796:	dc 01       	movw	r26, r24
    3798:	cb 01       	movw	r24, r22
    379a:	9c 8b       	std	Y+20, r25	; 0x14
    379c:	8b 8b       	std	Y+19, r24	; 0x13
    379e:	8b 89       	ldd	r24, Y+19	; 0x13
    37a0:	9c 89       	ldd	r25, Y+20	; 0x14
    37a2:	98 8b       	std	Y+16, r25	; 0x10
    37a4:	8f 87       	std	Y+15, r24	; 0x0f
    37a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    37a8:	98 89       	ldd	r25, Y+16	; 0x10
    37aa:	01 97       	sbiw	r24, 0x01	; 1
    37ac:	f1 f7       	brne	.-4      	; 0x37aa <LCD_voidSendCmnd+0x38e>
    37ae:	98 8b       	std	Y+16, r25	; 0x10
    37b0:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(2);
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN,DIO_u8_LOW);
    37b2:	80 e0       	ldi	r24, 0x00	; 0
    37b4:	62 e0       	ldi	r22, 0x02	; 2
    37b6:	40 e0       	ldi	r20, 0x00	; 0
    37b8:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    37bc:	80 e0       	ldi	r24, 0x00	; 0
    37be:	90 e0       	ldi	r25, 0x00	; 0
    37c0:	a0 e0       	ldi	r26, 0x00	; 0
    37c2:	b0 e4       	ldi	r27, 0x40	; 64
    37c4:	8b 87       	std	Y+11, r24	; 0x0b
    37c6:	9c 87       	std	Y+12, r25	; 0x0c
    37c8:	ad 87       	std	Y+13, r26	; 0x0d
    37ca:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    37cc:	6b 85       	ldd	r22, Y+11	; 0x0b
    37ce:	7c 85       	ldd	r23, Y+12	; 0x0c
    37d0:	8d 85       	ldd	r24, Y+13	; 0x0d
    37d2:	9e 85       	ldd	r25, Y+14	; 0x0e
    37d4:	20 e0       	ldi	r18, 0x00	; 0
    37d6:	30 e0       	ldi	r19, 0x00	; 0
    37d8:	4a e7       	ldi	r20, 0x7A	; 122
    37da:	55 e4       	ldi	r21, 0x45	; 69
    37dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    37e0:	dc 01       	movw	r26, r24
    37e2:	cb 01       	movw	r24, r22
    37e4:	8f 83       	std	Y+7, r24	; 0x07
    37e6:	98 87       	std	Y+8, r25	; 0x08
    37e8:	a9 87       	std	Y+9, r26	; 0x09
    37ea:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    37ec:	6f 81       	ldd	r22, Y+7	; 0x07
    37ee:	78 85       	ldd	r23, Y+8	; 0x08
    37f0:	89 85       	ldd	r24, Y+9	; 0x09
    37f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    37f4:	20 e0       	ldi	r18, 0x00	; 0
    37f6:	30 e0       	ldi	r19, 0x00	; 0
    37f8:	40 e8       	ldi	r20, 0x80	; 128
    37fa:	5f e3       	ldi	r21, 0x3F	; 63
    37fc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3800:	88 23       	and	r24, r24
    3802:	2c f4       	brge	.+10     	; 0x380e <LCD_voidSendCmnd+0x3f2>
		__ticks = 1;
    3804:	81 e0       	ldi	r24, 0x01	; 1
    3806:	90 e0       	ldi	r25, 0x00	; 0
    3808:	9e 83       	std	Y+6, r25	; 0x06
    380a:	8d 83       	std	Y+5, r24	; 0x05
    380c:	3f c0       	rjmp	.+126    	; 0x388c <LCD_voidSendCmnd+0x470>
	else if (__tmp > 65535)
    380e:	6f 81       	ldd	r22, Y+7	; 0x07
    3810:	78 85       	ldd	r23, Y+8	; 0x08
    3812:	89 85       	ldd	r24, Y+9	; 0x09
    3814:	9a 85       	ldd	r25, Y+10	; 0x0a
    3816:	20 e0       	ldi	r18, 0x00	; 0
    3818:	3f ef       	ldi	r19, 0xFF	; 255
    381a:	4f e7       	ldi	r20, 0x7F	; 127
    381c:	57 e4       	ldi	r21, 0x47	; 71
    381e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3822:	18 16       	cp	r1, r24
    3824:	4c f5       	brge	.+82     	; 0x3878 <LCD_voidSendCmnd+0x45c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3826:	6b 85       	ldd	r22, Y+11	; 0x0b
    3828:	7c 85       	ldd	r23, Y+12	; 0x0c
    382a:	8d 85       	ldd	r24, Y+13	; 0x0d
    382c:	9e 85       	ldd	r25, Y+14	; 0x0e
    382e:	20 e0       	ldi	r18, 0x00	; 0
    3830:	30 e0       	ldi	r19, 0x00	; 0
    3832:	40 e2       	ldi	r20, 0x20	; 32
    3834:	51 e4       	ldi	r21, 0x41	; 65
    3836:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    383a:	dc 01       	movw	r26, r24
    383c:	cb 01       	movw	r24, r22
    383e:	bc 01       	movw	r22, r24
    3840:	cd 01       	movw	r24, r26
    3842:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3846:	dc 01       	movw	r26, r24
    3848:	cb 01       	movw	r24, r22
    384a:	9e 83       	std	Y+6, r25	; 0x06
    384c:	8d 83       	std	Y+5, r24	; 0x05
    384e:	0f c0       	rjmp	.+30     	; 0x386e <LCD_voidSendCmnd+0x452>
    3850:	80 e9       	ldi	r24, 0x90	; 144
    3852:	91 e0       	ldi	r25, 0x01	; 1
    3854:	9c 83       	std	Y+4, r25	; 0x04
    3856:	8b 83       	std	Y+3, r24	; 0x03
    3858:	8b 81       	ldd	r24, Y+3	; 0x03
    385a:	9c 81       	ldd	r25, Y+4	; 0x04
    385c:	01 97       	sbiw	r24, 0x01	; 1
    385e:	f1 f7       	brne	.-4      	; 0x385c <LCD_voidSendCmnd+0x440>
    3860:	9c 83       	std	Y+4, r25	; 0x04
    3862:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3864:	8d 81       	ldd	r24, Y+5	; 0x05
    3866:	9e 81       	ldd	r25, Y+6	; 0x06
    3868:	01 97       	sbiw	r24, 0x01	; 1
    386a:	9e 83       	std	Y+6, r25	; 0x06
    386c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    386e:	8d 81       	ldd	r24, Y+5	; 0x05
    3870:	9e 81       	ldd	r25, Y+6	; 0x06
    3872:	00 97       	sbiw	r24, 0x00	; 0
    3874:	69 f7       	brne	.-38     	; 0x3850 <LCD_voidSendCmnd+0x434>
    3876:	14 c0       	rjmp	.+40     	; 0x38a0 <LCD_voidSendCmnd+0x484>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3878:	6f 81       	ldd	r22, Y+7	; 0x07
    387a:	78 85       	ldd	r23, Y+8	; 0x08
    387c:	89 85       	ldd	r24, Y+9	; 0x09
    387e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3880:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3884:	dc 01       	movw	r26, r24
    3886:	cb 01       	movw	r24, r22
    3888:	9e 83       	std	Y+6, r25	; 0x06
    388a:	8d 83       	std	Y+5, r24	; 0x05
    388c:	8d 81       	ldd	r24, Y+5	; 0x05
    388e:	9e 81       	ldd	r25, Y+6	; 0x06
    3890:	9a 83       	std	Y+2, r25	; 0x02
    3892:	89 83       	std	Y+1, r24	; 0x01
    3894:	89 81       	ldd	r24, Y+1	; 0x01
    3896:	9a 81       	ldd	r25, Y+2	; 0x02
    3898:	01 97       	sbiw	r24, 0x01	; 1
    389a:	f1 f7       	brne	.-4      	; 0x3898 <LCD_voidSendCmnd+0x47c>
    389c:	9a 83       	std	Y+2, r25	; 0x02
    389e:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(2);
}
    38a0:	e9 96       	adiw	r28, 0x39	; 57
    38a2:	0f b6       	in	r0, 0x3f	; 63
    38a4:	f8 94       	cli
    38a6:	de bf       	out	0x3e, r29	; 62
    38a8:	0f be       	out	0x3f, r0	; 63
    38aa:	cd bf       	out	0x3d, r28	; 61
    38ac:	cf 91       	pop	r28
    38ae:	df 91       	pop	r29
    38b0:	08 95       	ret

000038b2 <LCD_voidSendChar>:

void LCD_voidSendChar(u8 Copy_u8Char)
{
    38b2:	df 93       	push	r29
    38b4:	cf 93       	push	r28
    38b6:	cd b7       	in	r28, 0x3d	; 61
    38b8:	de b7       	in	r29, 0x3e	; 62
    38ba:	e9 97       	sbiw	r28, 0x39	; 57
    38bc:	0f b6       	in	r0, 0x3f	; 63
    38be:	f8 94       	cli
    38c0:	de bf       	out	0x3e, r29	; 62
    38c2:	0f be       	out	0x3f, r0	; 63
    38c4:	cd bf       	out	0x3d, r28	; 61
    38c6:	89 af       	std	Y+57, r24	; 0x39
	DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN,DIO_u8_LOW);
    38c8:	80 e0       	ldi	r24, 0x00	; 0
    38ca:	62 e0       	ldi	r22, 0x02	; 2
    38cc:	40 e0       	ldi	r20, 0x00	; 0
    38ce:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_u8_PORTA,LCD_RS_PIN,DIO_u8_HIGH);
    38d2:	80 e0       	ldi	r24, 0x00	; 0
    38d4:	63 e0       	ldi	r22, 0x03	; 3
    38d6:	41 e0       	ldi	r20, 0x01	; 1
    38d8:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>

	DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB4_PIN,GET_BIT(Copy_u8Char,4));
    38dc:	89 ad       	ldd	r24, Y+57	; 0x39
    38de:	82 95       	swap	r24
    38e0:	8f 70       	andi	r24, 0x0F	; 15
    38e2:	98 2f       	mov	r25, r24
    38e4:	91 70       	andi	r25, 0x01	; 1
    38e6:	81 e0       	ldi	r24, 0x01	; 1
    38e8:	60 e0       	ldi	r22, 0x00	; 0
    38ea:	49 2f       	mov	r20, r25
    38ec:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB5_PIN,GET_BIT(Copy_u8Char,5));
    38f0:	89 ad       	ldd	r24, Y+57	; 0x39
    38f2:	82 95       	swap	r24
    38f4:	86 95       	lsr	r24
    38f6:	87 70       	andi	r24, 0x07	; 7
    38f8:	98 2f       	mov	r25, r24
    38fa:	91 70       	andi	r25, 0x01	; 1
    38fc:	81 e0       	ldi	r24, 0x01	; 1
    38fe:	61 e0       	ldi	r22, 0x01	; 1
    3900:	49 2f       	mov	r20, r25
    3902:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB6_PIN,GET_BIT(Copy_u8Char,6));
    3906:	89 ad       	ldd	r24, Y+57	; 0x39
    3908:	82 95       	swap	r24
    390a:	86 95       	lsr	r24
    390c:	86 95       	lsr	r24
    390e:	83 70       	andi	r24, 0x03	; 3
    3910:	98 2f       	mov	r25, r24
    3912:	91 70       	andi	r25, 0x01	; 1
    3914:	81 e0       	ldi	r24, 0x01	; 1
    3916:	62 e0       	ldi	r22, 0x02	; 2
    3918:	49 2f       	mov	r20, r25
    391a:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB7_PIN,GET_BIT(Copy_u8Char,7));
    391e:	89 ad       	ldd	r24, Y+57	; 0x39
    3920:	98 2f       	mov	r25, r24
    3922:	99 1f       	adc	r25, r25
    3924:	99 27       	eor	r25, r25
    3926:	99 1f       	adc	r25, r25
    3928:	81 e0       	ldi	r24, 0x01	; 1
    392a:	64 e0       	ldi	r22, 0x04	; 4
    392c:	49 2f       	mov	r20, r25
    392e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>

	DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN,DIO_u8_HIGH);
    3932:	80 e0       	ldi	r24, 0x00	; 0
    3934:	62 e0       	ldi	r22, 0x02	; 2
    3936:	41 e0       	ldi	r20, 0x01	; 1
    3938:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    393c:	80 e0       	ldi	r24, 0x00	; 0
    393e:	90 e0       	ldi	r25, 0x00	; 0
    3940:	a0 e0       	ldi	r26, 0x00	; 0
    3942:	b0 e4       	ldi	r27, 0x40	; 64
    3944:	8d ab       	std	Y+53, r24	; 0x35
    3946:	9e ab       	std	Y+54, r25	; 0x36
    3948:	af ab       	std	Y+55, r26	; 0x37
    394a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    394c:	6d a9       	ldd	r22, Y+53	; 0x35
    394e:	7e a9       	ldd	r23, Y+54	; 0x36
    3950:	8f a9       	ldd	r24, Y+55	; 0x37
    3952:	98 ad       	ldd	r25, Y+56	; 0x38
    3954:	20 e0       	ldi	r18, 0x00	; 0
    3956:	30 e0       	ldi	r19, 0x00	; 0
    3958:	4a e7       	ldi	r20, 0x7A	; 122
    395a:	55 e4       	ldi	r21, 0x45	; 69
    395c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3960:	dc 01       	movw	r26, r24
    3962:	cb 01       	movw	r24, r22
    3964:	89 ab       	std	Y+49, r24	; 0x31
    3966:	9a ab       	std	Y+50, r25	; 0x32
    3968:	ab ab       	std	Y+51, r26	; 0x33
    396a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    396c:	69 a9       	ldd	r22, Y+49	; 0x31
    396e:	7a a9       	ldd	r23, Y+50	; 0x32
    3970:	8b a9       	ldd	r24, Y+51	; 0x33
    3972:	9c a9       	ldd	r25, Y+52	; 0x34
    3974:	20 e0       	ldi	r18, 0x00	; 0
    3976:	30 e0       	ldi	r19, 0x00	; 0
    3978:	40 e8       	ldi	r20, 0x80	; 128
    397a:	5f e3       	ldi	r21, 0x3F	; 63
    397c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3980:	88 23       	and	r24, r24
    3982:	2c f4       	brge	.+10     	; 0x398e <LCD_voidSendChar+0xdc>
		__ticks = 1;
    3984:	81 e0       	ldi	r24, 0x01	; 1
    3986:	90 e0       	ldi	r25, 0x00	; 0
    3988:	98 ab       	std	Y+48, r25	; 0x30
    398a:	8f a7       	std	Y+47, r24	; 0x2f
    398c:	3f c0       	rjmp	.+126    	; 0x3a0c <LCD_voidSendChar+0x15a>
	else if (__tmp > 65535)
    398e:	69 a9       	ldd	r22, Y+49	; 0x31
    3990:	7a a9       	ldd	r23, Y+50	; 0x32
    3992:	8b a9       	ldd	r24, Y+51	; 0x33
    3994:	9c a9       	ldd	r25, Y+52	; 0x34
    3996:	20 e0       	ldi	r18, 0x00	; 0
    3998:	3f ef       	ldi	r19, 0xFF	; 255
    399a:	4f e7       	ldi	r20, 0x7F	; 127
    399c:	57 e4       	ldi	r21, 0x47	; 71
    399e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    39a2:	18 16       	cp	r1, r24
    39a4:	4c f5       	brge	.+82     	; 0x39f8 <LCD_voidSendChar+0x146>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    39a6:	6d a9       	ldd	r22, Y+53	; 0x35
    39a8:	7e a9       	ldd	r23, Y+54	; 0x36
    39aa:	8f a9       	ldd	r24, Y+55	; 0x37
    39ac:	98 ad       	ldd	r25, Y+56	; 0x38
    39ae:	20 e0       	ldi	r18, 0x00	; 0
    39b0:	30 e0       	ldi	r19, 0x00	; 0
    39b2:	40 e2       	ldi	r20, 0x20	; 32
    39b4:	51 e4       	ldi	r21, 0x41	; 65
    39b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    39ba:	dc 01       	movw	r26, r24
    39bc:	cb 01       	movw	r24, r22
    39be:	bc 01       	movw	r22, r24
    39c0:	cd 01       	movw	r24, r26
    39c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    39c6:	dc 01       	movw	r26, r24
    39c8:	cb 01       	movw	r24, r22
    39ca:	98 ab       	std	Y+48, r25	; 0x30
    39cc:	8f a7       	std	Y+47, r24	; 0x2f
    39ce:	0f c0       	rjmp	.+30     	; 0x39ee <LCD_voidSendChar+0x13c>
    39d0:	80 e9       	ldi	r24, 0x90	; 144
    39d2:	91 e0       	ldi	r25, 0x01	; 1
    39d4:	9e a7       	std	Y+46, r25	; 0x2e
    39d6:	8d a7       	std	Y+45, r24	; 0x2d
    39d8:	8d a5       	ldd	r24, Y+45	; 0x2d
    39da:	9e a5       	ldd	r25, Y+46	; 0x2e
    39dc:	01 97       	sbiw	r24, 0x01	; 1
    39de:	f1 f7       	brne	.-4      	; 0x39dc <LCD_voidSendChar+0x12a>
    39e0:	9e a7       	std	Y+46, r25	; 0x2e
    39e2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39e4:	8f a5       	ldd	r24, Y+47	; 0x2f
    39e6:	98 a9       	ldd	r25, Y+48	; 0x30
    39e8:	01 97       	sbiw	r24, 0x01	; 1
    39ea:	98 ab       	std	Y+48, r25	; 0x30
    39ec:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39ee:	8f a5       	ldd	r24, Y+47	; 0x2f
    39f0:	98 a9       	ldd	r25, Y+48	; 0x30
    39f2:	00 97       	sbiw	r24, 0x00	; 0
    39f4:	69 f7       	brne	.-38     	; 0x39d0 <LCD_voidSendChar+0x11e>
    39f6:	14 c0       	rjmp	.+40     	; 0x3a20 <LCD_voidSendChar+0x16e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39f8:	69 a9       	ldd	r22, Y+49	; 0x31
    39fa:	7a a9       	ldd	r23, Y+50	; 0x32
    39fc:	8b a9       	ldd	r24, Y+51	; 0x33
    39fe:	9c a9       	ldd	r25, Y+52	; 0x34
    3a00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a04:	dc 01       	movw	r26, r24
    3a06:	cb 01       	movw	r24, r22
    3a08:	98 ab       	std	Y+48, r25	; 0x30
    3a0a:	8f a7       	std	Y+47, r24	; 0x2f
    3a0c:	8f a5       	ldd	r24, Y+47	; 0x2f
    3a0e:	98 a9       	ldd	r25, Y+48	; 0x30
    3a10:	9c a7       	std	Y+44, r25	; 0x2c
    3a12:	8b a7       	std	Y+43, r24	; 0x2b
    3a14:	8b a5       	ldd	r24, Y+43	; 0x2b
    3a16:	9c a5       	ldd	r25, Y+44	; 0x2c
    3a18:	01 97       	sbiw	r24, 0x01	; 1
    3a1a:	f1 f7       	brne	.-4      	; 0x3a18 <LCD_voidSendChar+0x166>
    3a1c:	9c a7       	std	Y+44, r25	; 0x2c
    3a1e:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(2);

		//second 4 bits
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN,DIO_u8_LOW);
    3a20:	80 e0       	ldi	r24, 0x00	; 0
    3a22:	62 e0       	ldi	r22, 0x02	; 2
    3a24:	40 e0       	ldi	r20, 0x00	; 0
    3a26:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    3a2a:	80 e0       	ldi	r24, 0x00	; 0
    3a2c:	90 e0       	ldi	r25, 0x00	; 0
    3a2e:	a0 e0       	ldi	r26, 0x00	; 0
    3a30:	b0 e4       	ldi	r27, 0x40	; 64
    3a32:	8f a3       	std	Y+39, r24	; 0x27
    3a34:	98 a7       	std	Y+40, r25	; 0x28
    3a36:	a9 a7       	std	Y+41, r26	; 0x29
    3a38:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a3a:	6f a1       	ldd	r22, Y+39	; 0x27
    3a3c:	78 a5       	ldd	r23, Y+40	; 0x28
    3a3e:	89 a5       	ldd	r24, Y+41	; 0x29
    3a40:	9a a5       	ldd	r25, Y+42	; 0x2a
    3a42:	20 e0       	ldi	r18, 0x00	; 0
    3a44:	30 e0       	ldi	r19, 0x00	; 0
    3a46:	4a e7       	ldi	r20, 0x7A	; 122
    3a48:	55 e4       	ldi	r21, 0x45	; 69
    3a4a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a4e:	dc 01       	movw	r26, r24
    3a50:	cb 01       	movw	r24, r22
    3a52:	8b a3       	std	Y+35, r24	; 0x23
    3a54:	9c a3       	std	Y+36, r25	; 0x24
    3a56:	ad a3       	std	Y+37, r26	; 0x25
    3a58:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3a5a:	6b a1       	ldd	r22, Y+35	; 0x23
    3a5c:	7c a1       	ldd	r23, Y+36	; 0x24
    3a5e:	8d a1       	ldd	r24, Y+37	; 0x25
    3a60:	9e a1       	ldd	r25, Y+38	; 0x26
    3a62:	20 e0       	ldi	r18, 0x00	; 0
    3a64:	30 e0       	ldi	r19, 0x00	; 0
    3a66:	40 e8       	ldi	r20, 0x80	; 128
    3a68:	5f e3       	ldi	r21, 0x3F	; 63
    3a6a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3a6e:	88 23       	and	r24, r24
    3a70:	2c f4       	brge	.+10     	; 0x3a7c <LCD_voidSendChar+0x1ca>
		__ticks = 1;
    3a72:	81 e0       	ldi	r24, 0x01	; 1
    3a74:	90 e0       	ldi	r25, 0x00	; 0
    3a76:	9a a3       	std	Y+34, r25	; 0x22
    3a78:	89 a3       	std	Y+33, r24	; 0x21
    3a7a:	3f c0       	rjmp	.+126    	; 0x3afa <LCD_voidSendChar+0x248>
	else if (__tmp > 65535)
    3a7c:	6b a1       	ldd	r22, Y+35	; 0x23
    3a7e:	7c a1       	ldd	r23, Y+36	; 0x24
    3a80:	8d a1       	ldd	r24, Y+37	; 0x25
    3a82:	9e a1       	ldd	r25, Y+38	; 0x26
    3a84:	20 e0       	ldi	r18, 0x00	; 0
    3a86:	3f ef       	ldi	r19, 0xFF	; 255
    3a88:	4f e7       	ldi	r20, 0x7F	; 127
    3a8a:	57 e4       	ldi	r21, 0x47	; 71
    3a8c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3a90:	18 16       	cp	r1, r24
    3a92:	4c f5       	brge	.+82     	; 0x3ae6 <LCD_voidSendChar+0x234>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a94:	6f a1       	ldd	r22, Y+39	; 0x27
    3a96:	78 a5       	ldd	r23, Y+40	; 0x28
    3a98:	89 a5       	ldd	r24, Y+41	; 0x29
    3a9a:	9a a5       	ldd	r25, Y+42	; 0x2a
    3a9c:	20 e0       	ldi	r18, 0x00	; 0
    3a9e:	30 e0       	ldi	r19, 0x00	; 0
    3aa0:	40 e2       	ldi	r20, 0x20	; 32
    3aa2:	51 e4       	ldi	r21, 0x41	; 65
    3aa4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3aa8:	dc 01       	movw	r26, r24
    3aaa:	cb 01       	movw	r24, r22
    3aac:	bc 01       	movw	r22, r24
    3aae:	cd 01       	movw	r24, r26
    3ab0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ab4:	dc 01       	movw	r26, r24
    3ab6:	cb 01       	movw	r24, r22
    3ab8:	9a a3       	std	Y+34, r25	; 0x22
    3aba:	89 a3       	std	Y+33, r24	; 0x21
    3abc:	0f c0       	rjmp	.+30     	; 0x3adc <LCD_voidSendChar+0x22a>
    3abe:	80 e9       	ldi	r24, 0x90	; 144
    3ac0:	91 e0       	ldi	r25, 0x01	; 1
    3ac2:	98 a3       	std	Y+32, r25	; 0x20
    3ac4:	8f 8f       	std	Y+31, r24	; 0x1f
    3ac6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3ac8:	98 a1       	ldd	r25, Y+32	; 0x20
    3aca:	01 97       	sbiw	r24, 0x01	; 1
    3acc:	f1 f7       	brne	.-4      	; 0x3aca <LCD_voidSendChar+0x218>
    3ace:	98 a3       	std	Y+32, r25	; 0x20
    3ad0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ad2:	89 a1       	ldd	r24, Y+33	; 0x21
    3ad4:	9a a1       	ldd	r25, Y+34	; 0x22
    3ad6:	01 97       	sbiw	r24, 0x01	; 1
    3ad8:	9a a3       	std	Y+34, r25	; 0x22
    3ada:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3adc:	89 a1       	ldd	r24, Y+33	; 0x21
    3ade:	9a a1       	ldd	r25, Y+34	; 0x22
    3ae0:	00 97       	sbiw	r24, 0x00	; 0
    3ae2:	69 f7       	brne	.-38     	; 0x3abe <LCD_voidSendChar+0x20c>
    3ae4:	14 c0       	rjmp	.+40     	; 0x3b0e <LCD_voidSendChar+0x25c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ae6:	6b a1       	ldd	r22, Y+35	; 0x23
    3ae8:	7c a1       	ldd	r23, Y+36	; 0x24
    3aea:	8d a1       	ldd	r24, Y+37	; 0x25
    3aec:	9e a1       	ldd	r25, Y+38	; 0x26
    3aee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3af2:	dc 01       	movw	r26, r24
    3af4:	cb 01       	movw	r24, r22
    3af6:	9a a3       	std	Y+34, r25	; 0x22
    3af8:	89 a3       	std	Y+33, r24	; 0x21
    3afa:	89 a1       	ldd	r24, Y+33	; 0x21
    3afc:	9a a1       	ldd	r25, Y+34	; 0x22
    3afe:	9e 8f       	std	Y+30, r25	; 0x1e
    3b00:	8d 8f       	std	Y+29, r24	; 0x1d
    3b02:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3b04:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3b06:	01 97       	sbiw	r24, 0x01	; 1
    3b08:	f1 f7       	brne	.-4      	; 0x3b06 <LCD_voidSendChar+0x254>
    3b0a:	9e 8f       	std	Y+30, r25	; 0x1e
    3b0c:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(2);

		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB4_PIN,GET_BIT(Copy_u8Char,0));
    3b0e:	89 ad       	ldd	r24, Y+57	; 0x39
    3b10:	98 2f       	mov	r25, r24
    3b12:	91 70       	andi	r25, 0x01	; 1
    3b14:	81 e0       	ldi	r24, 0x01	; 1
    3b16:	60 e0       	ldi	r22, 0x00	; 0
    3b18:	49 2f       	mov	r20, r25
    3b1a:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB5_PIN,GET_BIT(Copy_u8Char,1));
    3b1e:	89 ad       	ldd	r24, Y+57	; 0x39
    3b20:	86 95       	lsr	r24
    3b22:	98 2f       	mov	r25, r24
    3b24:	91 70       	andi	r25, 0x01	; 1
    3b26:	81 e0       	ldi	r24, 0x01	; 1
    3b28:	61 e0       	ldi	r22, 0x01	; 1
    3b2a:	49 2f       	mov	r20, r25
    3b2c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB6_PIN,GET_BIT(Copy_u8Char,2));
    3b30:	89 ad       	ldd	r24, Y+57	; 0x39
    3b32:	86 95       	lsr	r24
    3b34:	86 95       	lsr	r24
    3b36:	98 2f       	mov	r25, r24
    3b38:	91 70       	andi	r25, 0x01	; 1
    3b3a:	81 e0       	ldi	r24, 0x01	; 1
    3b3c:	62 e0       	ldi	r22, 0x02	; 2
    3b3e:	49 2f       	mov	r20, r25
    3b40:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8_PORTB,LCD_DB7_PIN,GET_BIT(Copy_u8Char,3));
    3b44:	89 ad       	ldd	r24, Y+57	; 0x39
    3b46:	86 95       	lsr	r24
    3b48:	86 95       	lsr	r24
    3b4a:	86 95       	lsr	r24
    3b4c:	98 2f       	mov	r25, r24
    3b4e:	91 70       	andi	r25, 0x01	; 1
    3b50:	81 e0       	ldi	r24, 0x01	; 1
    3b52:	64 e0       	ldi	r22, 0x04	; 4
    3b54:	49 2f       	mov	r20, r25
    3b56:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>

		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN,DIO_u8_HIGH);
    3b5a:	80 e0       	ldi	r24, 0x00	; 0
    3b5c:	62 e0       	ldi	r22, 0x02	; 2
    3b5e:	41 e0       	ldi	r20, 0x01	; 1
    3b60:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    3b64:	80 e0       	ldi	r24, 0x00	; 0
    3b66:	90 e0       	ldi	r25, 0x00	; 0
    3b68:	a0 e0       	ldi	r26, 0x00	; 0
    3b6a:	b0 e4       	ldi	r27, 0x40	; 64
    3b6c:	89 8f       	std	Y+25, r24	; 0x19
    3b6e:	9a 8f       	std	Y+26, r25	; 0x1a
    3b70:	ab 8f       	std	Y+27, r26	; 0x1b
    3b72:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b74:	69 8d       	ldd	r22, Y+25	; 0x19
    3b76:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3b78:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3b7a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3b7c:	20 e0       	ldi	r18, 0x00	; 0
    3b7e:	30 e0       	ldi	r19, 0x00	; 0
    3b80:	4a e7       	ldi	r20, 0x7A	; 122
    3b82:	55 e4       	ldi	r21, 0x45	; 69
    3b84:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3b88:	dc 01       	movw	r26, r24
    3b8a:	cb 01       	movw	r24, r22
    3b8c:	8d 8b       	std	Y+21, r24	; 0x15
    3b8e:	9e 8b       	std	Y+22, r25	; 0x16
    3b90:	af 8b       	std	Y+23, r26	; 0x17
    3b92:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3b94:	6d 89       	ldd	r22, Y+21	; 0x15
    3b96:	7e 89       	ldd	r23, Y+22	; 0x16
    3b98:	8f 89       	ldd	r24, Y+23	; 0x17
    3b9a:	98 8d       	ldd	r25, Y+24	; 0x18
    3b9c:	20 e0       	ldi	r18, 0x00	; 0
    3b9e:	30 e0       	ldi	r19, 0x00	; 0
    3ba0:	40 e8       	ldi	r20, 0x80	; 128
    3ba2:	5f e3       	ldi	r21, 0x3F	; 63
    3ba4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3ba8:	88 23       	and	r24, r24
    3baa:	2c f4       	brge	.+10     	; 0x3bb6 <LCD_voidSendChar+0x304>
		__ticks = 1;
    3bac:	81 e0       	ldi	r24, 0x01	; 1
    3bae:	90 e0       	ldi	r25, 0x00	; 0
    3bb0:	9c 8b       	std	Y+20, r25	; 0x14
    3bb2:	8b 8b       	std	Y+19, r24	; 0x13
    3bb4:	3f c0       	rjmp	.+126    	; 0x3c34 <LCD_voidSendChar+0x382>
	else if (__tmp > 65535)
    3bb6:	6d 89       	ldd	r22, Y+21	; 0x15
    3bb8:	7e 89       	ldd	r23, Y+22	; 0x16
    3bba:	8f 89       	ldd	r24, Y+23	; 0x17
    3bbc:	98 8d       	ldd	r25, Y+24	; 0x18
    3bbe:	20 e0       	ldi	r18, 0x00	; 0
    3bc0:	3f ef       	ldi	r19, 0xFF	; 255
    3bc2:	4f e7       	ldi	r20, 0x7F	; 127
    3bc4:	57 e4       	ldi	r21, 0x47	; 71
    3bc6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3bca:	18 16       	cp	r1, r24
    3bcc:	4c f5       	brge	.+82     	; 0x3c20 <LCD_voidSendChar+0x36e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3bce:	69 8d       	ldd	r22, Y+25	; 0x19
    3bd0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3bd2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3bd4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3bd6:	20 e0       	ldi	r18, 0x00	; 0
    3bd8:	30 e0       	ldi	r19, 0x00	; 0
    3bda:	40 e2       	ldi	r20, 0x20	; 32
    3bdc:	51 e4       	ldi	r21, 0x41	; 65
    3bde:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3be2:	dc 01       	movw	r26, r24
    3be4:	cb 01       	movw	r24, r22
    3be6:	bc 01       	movw	r22, r24
    3be8:	cd 01       	movw	r24, r26
    3bea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3bee:	dc 01       	movw	r26, r24
    3bf0:	cb 01       	movw	r24, r22
    3bf2:	9c 8b       	std	Y+20, r25	; 0x14
    3bf4:	8b 8b       	std	Y+19, r24	; 0x13
    3bf6:	0f c0       	rjmp	.+30     	; 0x3c16 <LCD_voidSendChar+0x364>
    3bf8:	80 e9       	ldi	r24, 0x90	; 144
    3bfa:	91 e0       	ldi	r25, 0x01	; 1
    3bfc:	9a 8b       	std	Y+18, r25	; 0x12
    3bfe:	89 8b       	std	Y+17, r24	; 0x11
    3c00:	89 89       	ldd	r24, Y+17	; 0x11
    3c02:	9a 89       	ldd	r25, Y+18	; 0x12
    3c04:	01 97       	sbiw	r24, 0x01	; 1
    3c06:	f1 f7       	brne	.-4      	; 0x3c04 <LCD_voidSendChar+0x352>
    3c08:	9a 8b       	std	Y+18, r25	; 0x12
    3c0a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c0c:	8b 89       	ldd	r24, Y+19	; 0x13
    3c0e:	9c 89       	ldd	r25, Y+20	; 0x14
    3c10:	01 97       	sbiw	r24, 0x01	; 1
    3c12:	9c 8b       	std	Y+20, r25	; 0x14
    3c14:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c16:	8b 89       	ldd	r24, Y+19	; 0x13
    3c18:	9c 89       	ldd	r25, Y+20	; 0x14
    3c1a:	00 97       	sbiw	r24, 0x00	; 0
    3c1c:	69 f7       	brne	.-38     	; 0x3bf8 <LCD_voidSendChar+0x346>
    3c1e:	14 c0       	rjmp	.+40     	; 0x3c48 <LCD_voidSendChar+0x396>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c20:	6d 89       	ldd	r22, Y+21	; 0x15
    3c22:	7e 89       	ldd	r23, Y+22	; 0x16
    3c24:	8f 89       	ldd	r24, Y+23	; 0x17
    3c26:	98 8d       	ldd	r25, Y+24	; 0x18
    3c28:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c2c:	dc 01       	movw	r26, r24
    3c2e:	cb 01       	movw	r24, r22
    3c30:	9c 8b       	std	Y+20, r25	; 0x14
    3c32:	8b 8b       	std	Y+19, r24	; 0x13
    3c34:	8b 89       	ldd	r24, Y+19	; 0x13
    3c36:	9c 89       	ldd	r25, Y+20	; 0x14
    3c38:	98 8b       	std	Y+16, r25	; 0x10
    3c3a:	8f 87       	std	Y+15, r24	; 0x0f
    3c3c:	8f 85       	ldd	r24, Y+15	; 0x0f
    3c3e:	98 89       	ldd	r25, Y+16	; 0x10
    3c40:	01 97       	sbiw	r24, 0x01	; 1
    3c42:	f1 f7       	brne	.-4      	; 0x3c40 <LCD_voidSendChar+0x38e>
    3c44:	98 8b       	std	Y+16, r25	; 0x10
    3c46:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(2);
		DIO_u8SetPinValue(DIO_u8_PORTA,LCD_EN_PIN,DIO_u8_LOW);
    3c48:	80 e0       	ldi	r24, 0x00	; 0
    3c4a:	62 e0       	ldi	r22, 0x02	; 2
    3c4c:	40 e0       	ldi	r20, 0x00	; 0
    3c4e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <DIO_u8SetPinValue>
    3c52:	80 e0       	ldi	r24, 0x00	; 0
    3c54:	90 e0       	ldi	r25, 0x00	; 0
    3c56:	a0 e0       	ldi	r26, 0x00	; 0
    3c58:	b0 e4       	ldi	r27, 0x40	; 64
    3c5a:	8b 87       	std	Y+11, r24	; 0x0b
    3c5c:	9c 87       	std	Y+12, r25	; 0x0c
    3c5e:	ad 87       	std	Y+13, r26	; 0x0d
    3c60:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c62:	6b 85       	ldd	r22, Y+11	; 0x0b
    3c64:	7c 85       	ldd	r23, Y+12	; 0x0c
    3c66:	8d 85       	ldd	r24, Y+13	; 0x0d
    3c68:	9e 85       	ldd	r25, Y+14	; 0x0e
    3c6a:	20 e0       	ldi	r18, 0x00	; 0
    3c6c:	30 e0       	ldi	r19, 0x00	; 0
    3c6e:	4a e7       	ldi	r20, 0x7A	; 122
    3c70:	55 e4       	ldi	r21, 0x45	; 69
    3c72:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c76:	dc 01       	movw	r26, r24
    3c78:	cb 01       	movw	r24, r22
    3c7a:	8f 83       	std	Y+7, r24	; 0x07
    3c7c:	98 87       	std	Y+8, r25	; 0x08
    3c7e:	a9 87       	std	Y+9, r26	; 0x09
    3c80:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3c82:	6f 81       	ldd	r22, Y+7	; 0x07
    3c84:	78 85       	ldd	r23, Y+8	; 0x08
    3c86:	89 85       	ldd	r24, Y+9	; 0x09
    3c88:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c8a:	20 e0       	ldi	r18, 0x00	; 0
    3c8c:	30 e0       	ldi	r19, 0x00	; 0
    3c8e:	40 e8       	ldi	r20, 0x80	; 128
    3c90:	5f e3       	ldi	r21, 0x3F	; 63
    3c92:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3c96:	88 23       	and	r24, r24
    3c98:	2c f4       	brge	.+10     	; 0x3ca4 <LCD_voidSendChar+0x3f2>
		__ticks = 1;
    3c9a:	81 e0       	ldi	r24, 0x01	; 1
    3c9c:	90 e0       	ldi	r25, 0x00	; 0
    3c9e:	9e 83       	std	Y+6, r25	; 0x06
    3ca0:	8d 83       	std	Y+5, r24	; 0x05
    3ca2:	3f c0       	rjmp	.+126    	; 0x3d22 <LCD_voidSendChar+0x470>
	else if (__tmp > 65535)
    3ca4:	6f 81       	ldd	r22, Y+7	; 0x07
    3ca6:	78 85       	ldd	r23, Y+8	; 0x08
    3ca8:	89 85       	ldd	r24, Y+9	; 0x09
    3caa:	9a 85       	ldd	r25, Y+10	; 0x0a
    3cac:	20 e0       	ldi	r18, 0x00	; 0
    3cae:	3f ef       	ldi	r19, 0xFF	; 255
    3cb0:	4f e7       	ldi	r20, 0x7F	; 127
    3cb2:	57 e4       	ldi	r21, 0x47	; 71
    3cb4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3cb8:	18 16       	cp	r1, r24
    3cba:	4c f5       	brge	.+82     	; 0x3d0e <LCD_voidSendChar+0x45c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3cbc:	6b 85       	ldd	r22, Y+11	; 0x0b
    3cbe:	7c 85       	ldd	r23, Y+12	; 0x0c
    3cc0:	8d 85       	ldd	r24, Y+13	; 0x0d
    3cc2:	9e 85       	ldd	r25, Y+14	; 0x0e
    3cc4:	20 e0       	ldi	r18, 0x00	; 0
    3cc6:	30 e0       	ldi	r19, 0x00	; 0
    3cc8:	40 e2       	ldi	r20, 0x20	; 32
    3cca:	51 e4       	ldi	r21, 0x41	; 65
    3ccc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3cd0:	dc 01       	movw	r26, r24
    3cd2:	cb 01       	movw	r24, r22
    3cd4:	bc 01       	movw	r22, r24
    3cd6:	cd 01       	movw	r24, r26
    3cd8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3cdc:	dc 01       	movw	r26, r24
    3cde:	cb 01       	movw	r24, r22
    3ce0:	9e 83       	std	Y+6, r25	; 0x06
    3ce2:	8d 83       	std	Y+5, r24	; 0x05
    3ce4:	0f c0       	rjmp	.+30     	; 0x3d04 <LCD_voidSendChar+0x452>
    3ce6:	80 e9       	ldi	r24, 0x90	; 144
    3ce8:	91 e0       	ldi	r25, 0x01	; 1
    3cea:	9c 83       	std	Y+4, r25	; 0x04
    3cec:	8b 83       	std	Y+3, r24	; 0x03
    3cee:	8b 81       	ldd	r24, Y+3	; 0x03
    3cf0:	9c 81       	ldd	r25, Y+4	; 0x04
    3cf2:	01 97       	sbiw	r24, 0x01	; 1
    3cf4:	f1 f7       	brne	.-4      	; 0x3cf2 <LCD_voidSendChar+0x440>
    3cf6:	9c 83       	std	Y+4, r25	; 0x04
    3cf8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3cfa:	8d 81       	ldd	r24, Y+5	; 0x05
    3cfc:	9e 81       	ldd	r25, Y+6	; 0x06
    3cfe:	01 97       	sbiw	r24, 0x01	; 1
    3d00:	9e 83       	std	Y+6, r25	; 0x06
    3d02:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d04:	8d 81       	ldd	r24, Y+5	; 0x05
    3d06:	9e 81       	ldd	r25, Y+6	; 0x06
    3d08:	00 97       	sbiw	r24, 0x00	; 0
    3d0a:	69 f7       	brne	.-38     	; 0x3ce6 <LCD_voidSendChar+0x434>
    3d0c:	14 c0       	rjmp	.+40     	; 0x3d36 <LCD_voidSendChar+0x484>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d0e:	6f 81       	ldd	r22, Y+7	; 0x07
    3d10:	78 85       	ldd	r23, Y+8	; 0x08
    3d12:	89 85       	ldd	r24, Y+9	; 0x09
    3d14:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d16:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d1a:	dc 01       	movw	r26, r24
    3d1c:	cb 01       	movw	r24, r22
    3d1e:	9e 83       	std	Y+6, r25	; 0x06
    3d20:	8d 83       	std	Y+5, r24	; 0x05
    3d22:	8d 81       	ldd	r24, Y+5	; 0x05
    3d24:	9e 81       	ldd	r25, Y+6	; 0x06
    3d26:	9a 83       	std	Y+2, r25	; 0x02
    3d28:	89 83       	std	Y+1, r24	; 0x01
    3d2a:	89 81       	ldd	r24, Y+1	; 0x01
    3d2c:	9a 81       	ldd	r25, Y+2	; 0x02
    3d2e:	01 97       	sbiw	r24, 0x01	; 1
    3d30:	f1 f7       	brne	.-4      	; 0x3d2e <LCD_voidSendChar+0x47c>
    3d32:	9a 83       	std	Y+2, r25	; 0x02
    3d34:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(2);

}
    3d36:	e9 96       	adiw	r28, 0x39	; 57
    3d38:	0f b6       	in	r0, 0x3f	; 63
    3d3a:	f8 94       	cli
    3d3c:	de bf       	out	0x3e, r29	; 62
    3d3e:	0f be       	out	0x3f, r0	; 63
    3d40:	cd bf       	out	0x3d, r28	; 61
    3d42:	cf 91       	pop	r28
    3d44:	df 91       	pop	r29
    3d46:	08 95       	ret

00003d48 <LCD_voidSendStr>:

void LCD_voidSendStr(u8* Copy_pu8Str )
{
    3d48:	df 93       	push	r29
    3d4a:	cf 93       	push	r28
    3d4c:	00 d0       	rcall	.+0      	; 0x3d4e <LCD_voidSendStr+0x6>
    3d4e:	0f 92       	push	r0
    3d50:	cd b7       	in	r28, 0x3d	; 61
    3d52:	de b7       	in	r29, 0x3e	; 62
    3d54:	9b 83       	std	Y+3, r25	; 0x03
    3d56:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8StrLen = 0;
    3d58:	19 82       	std	Y+1, r1	; 0x01
    3d5a:	0e c0       	rjmp	.+28     	; 0x3d78 <LCD_voidSendStr+0x30>
	while( Copy_pu8Str[Local_u8StrLen] != '\0')
	{
		LCD_voidSendChar ( Copy_pu8Str[Local_u8StrLen] );
    3d5c:	89 81       	ldd	r24, Y+1	; 0x01
    3d5e:	28 2f       	mov	r18, r24
    3d60:	30 e0       	ldi	r19, 0x00	; 0
    3d62:	8a 81       	ldd	r24, Y+2	; 0x02
    3d64:	9b 81       	ldd	r25, Y+3	; 0x03
    3d66:	fc 01       	movw	r30, r24
    3d68:	e2 0f       	add	r30, r18
    3d6a:	f3 1f       	adc	r31, r19
    3d6c:	80 81       	ld	r24, Z
    3d6e:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
		Local_u8StrLen++;
    3d72:	89 81       	ldd	r24, Y+1	; 0x01
    3d74:	8f 5f       	subi	r24, 0xFF	; 255
    3d76:	89 83       	std	Y+1, r24	; 0x01
}

void LCD_voidSendStr(u8* Copy_pu8Str )
{
	u8 Local_u8StrLen = 0;
	while( Copy_pu8Str[Local_u8StrLen] != '\0')
    3d78:	89 81       	ldd	r24, Y+1	; 0x01
    3d7a:	28 2f       	mov	r18, r24
    3d7c:	30 e0       	ldi	r19, 0x00	; 0
    3d7e:	8a 81       	ldd	r24, Y+2	; 0x02
    3d80:	9b 81       	ldd	r25, Y+3	; 0x03
    3d82:	fc 01       	movw	r30, r24
    3d84:	e2 0f       	add	r30, r18
    3d86:	f3 1f       	adc	r31, r19
    3d88:	80 81       	ld	r24, Z
    3d8a:	88 23       	and	r24, r24
    3d8c:	39 f7       	brne	.-50     	; 0x3d5c <LCD_voidSendStr+0x14>
	{
		LCD_voidSendChar ( Copy_pu8Str[Local_u8StrLen] );
		Local_u8StrLen++;
	}
}
    3d8e:	0f 90       	pop	r0
    3d90:	0f 90       	pop	r0
    3d92:	0f 90       	pop	r0
    3d94:	cf 91       	pop	r28
    3d96:	df 91       	pop	r29
    3d98:	08 95       	ret

00003d9a <LCD_voidSendNum>:

void LCD_voidSendNum (u32  Copy_u32Num )
{
    3d9a:	0f 93       	push	r16
    3d9c:	1f 93       	push	r17
    3d9e:	df 93       	push	r29
    3da0:	cf 93       	push	r28
    3da2:	cd b7       	in	r28, 0x3d	; 61
    3da4:	de b7       	in	r29, 0x3e	; 62
    3da6:	61 97       	sbiw	r28, 0x11	; 17
    3da8:	0f b6       	in	r0, 0x3f	; 63
    3daa:	f8 94       	cli
    3dac:	de bf       	out	0x3e, r29	; 62
    3dae:	0f be       	out	0x3f, r0	; 63
    3db0:	cd bf       	out	0x3d, r28	; 61
    3db2:	6e 87       	std	Y+14, r22	; 0x0e
    3db4:	7f 87       	std	Y+15, r23	; 0x0f
    3db6:	88 8b       	std	Y+16, r24	; 0x10
    3db8:	99 8b       	std	Y+17, r25	; 0x11
    u8 Local_u8NumArr[10]= {0};
    3dba:	8a e0       	ldi	r24, 0x0A	; 10
    3dbc:	fe 01       	movw	r30, r28
    3dbe:	34 96       	adiw	r30, 0x04	; 4
    3dc0:	df 01       	movw	r26, r30
    3dc2:	98 2f       	mov	r25, r24
    3dc4:	1d 92       	st	X+, r1
    3dc6:	9a 95       	dec	r25
    3dc8:	e9 f7       	brne	.-6      	; 0x3dc4 <LCD_voidSendNum+0x2a>
	u8 Local_u8ArrIndex = 0;
    3dca:	1b 82       	std	Y+3, r1	; 0x03
	if(Copy_u32Num == 0)
    3dcc:	8e 85       	ldd	r24, Y+14	; 0x0e
    3dce:	9f 85       	ldd	r25, Y+15	; 0x0f
    3dd0:	a8 89       	ldd	r26, Y+16	; 0x10
    3dd2:	b9 89       	ldd	r27, Y+17	; 0x11
    3dd4:	00 97       	sbiw	r24, 0x00	; 0
    3dd6:	a1 05       	cpc	r26, r1
    3dd8:	b1 05       	cpc	r27, r1
    3dda:	89 f5       	brne	.+98     	; 0x3e3e <LCD_voidSendNum+0xa4>
	{
		LCD_voidSendChar('0');
    3ddc:	80 e3       	ldi	r24, 0x30	; 48
    3dde:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
    3de2:	50 c0       	rjmp	.+160    	; 0x3e84 <LCD_voidSendNum+0xea>
	}
	else
	{
		while(Copy_u32Num > 0)
		{
			Local_u8NumArr[Local_u8ArrIndex] = (Copy_u32Num % 10);
    3de4:	8b 81       	ldd	r24, Y+3	; 0x03
    3de6:	08 2f       	mov	r16, r24
    3de8:	10 e0       	ldi	r17, 0x00	; 0
    3dea:	8e 85       	ldd	r24, Y+14	; 0x0e
    3dec:	9f 85       	ldd	r25, Y+15	; 0x0f
    3dee:	a8 89       	ldd	r26, Y+16	; 0x10
    3df0:	b9 89       	ldd	r27, Y+17	; 0x11
    3df2:	2a e0       	ldi	r18, 0x0A	; 10
    3df4:	30 e0       	ldi	r19, 0x00	; 0
    3df6:	40 e0       	ldi	r20, 0x00	; 0
    3df8:	50 e0       	ldi	r21, 0x00	; 0
    3dfa:	bc 01       	movw	r22, r24
    3dfc:	cd 01       	movw	r24, r26
    3dfe:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <__udivmodsi4>
    3e02:	dc 01       	movw	r26, r24
    3e04:	cb 01       	movw	r24, r22
    3e06:	28 2f       	mov	r18, r24
    3e08:	ce 01       	movw	r24, r28
    3e0a:	04 96       	adiw	r24, 0x04	; 4
    3e0c:	fc 01       	movw	r30, r24
    3e0e:	e0 0f       	add	r30, r16
    3e10:	f1 1f       	adc	r31, r17
    3e12:	20 83       	st	Z, r18
			Copy_u32Num /=10;
    3e14:	8e 85       	ldd	r24, Y+14	; 0x0e
    3e16:	9f 85       	ldd	r25, Y+15	; 0x0f
    3e18:	a8 89       	ldd	r26, Y+16	; 0x10
    3e1a:	b9 89       	ldd	r27, Y+17	; 0x11
    3e1c:	2a e0       	ldi	r18, 0x0A	; 10
    3e1e:	30 e0       	ldi	r19, 0x00	; 0
    3e20:	40 e0       	ldi	r20, 0x00	; 0
    3e22:	50 e0       	ldi	r21, 0x00	; 0
    3e24:	bc 01       	movw	r22, r24
    3e26:	cd 01       	movw	r24, r26
    3e28:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <__udivmodsi4>
    3e2c:	da 01       	movw	r26, r20
    3e2e:	c9 01       	movw	r24, r18
    3e30:	8e 87       	std	Y+14, r24	; 0x0e
    3e32:	9f 87       	std	Y+15, r25	; 0x0f
    3e34:	a8 8b       	std	Y+16, r26	; 0x10
    3e36:	b9 8b       	std	Y+17, r27	; 0x11
			Local_u8ArrIndex++;
    3e38:	8b 81       	ldd	r24, Y+3	; 0x03
    3e3a:	8f 5f       	subi	r24, 0xFF	; 255
    3e3c:	8b 83       	std	Y+3, r24	; 0x03
	{
		LCD_voidSendChar('0');
	}
	else
	{
		while(Copy_u32Num > 0)
    3e3e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3e40:	9f 85       	ldd	r25, Y+15	; 0x0f
    3e42:	a8 89       	ldd	r26, Y+16	; 0x10
    3e44:	b9 89       	ldd	r27, Y+17	; 0x11
    3e46:	00 97       	sbiw	r24, 0x00	; 0
    3e48:	a1 05       	cpc	r26, r1
    3e4a:	b1 05       	cpc	r27, r1
    3e4c:	59 f6       	brne	.-106    	; 0x3de4 <LCD_voidSendNum+0x4a>
		{
			Local_u8NumArr[Local_u8ArrIndex] = (Copy_u32Num % 10);
			Copy_u32Num /=10;
			Local_u8ArrIndex++;
		}
		for (int i = Local_u8ArrIndex-1 ; i>=0 ;i--)
    3e4e:	8b 81       	ldd	r24, Y+3	; 0x03
    3e50:	88 2f       	mov	r24, r24
    3e52:	90 e0       	ldi	r25, 0x00	; 0
    3e54:	01 97       	sbiw	r24, 0x01	; 1
    3e56:	9a 83       	std	Y+2, r25	; 0x02
    3e58:	89 83       	std	Y+1, r24	; 0x01
    3e5a:	10 c0       	rjmp	.+32     	; 0x3e7c <LCD_voidSendNum+0xe2>
		{
			LCD_voidSendChar( Local_u8NumArr[i] + '0');
    3e5c:	29 81       	ldd	r18, Y+1	; 0x01
    3e5e:	3a 81       	ldd	r19, Y+2	; 0x02
    3e60:	ce 01       	movw	r24, r28
    3e62:	04 96       	adiw	r24, 0x04	; 4
    3e64:	fc 01       	movw	r30, r24
    3e66:	e2 0f       	add	r30, r18
    3e68:	f3 1f       	adc	r31, r19
    3e6a:	80 81       	ld	r24, Z
    3e6c:	80 5d       	subi	r24, 0xD0	; 208
    3e6e:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
		{
			Local_u8NumArr[Local_u8ArrIndex] = (Copy_u32Num % 10);
			Copy_u32Num /=10;
			Local_u8ArrIndex++;
		}
		for (int i = Local_u8ArrIndex-1 ; i>=0 ;i--)
    3e72:	89 81       	ldd	r24, Y+1	; 0x01
    3e74:	9a 81       	ldd	r25, Y+2	; 0x02
    3e76:	01 97       	sbiw	r24, 0x01	; 1
    3e78:	9a 83       	std	Y+2, r25	; 0x02
    3e7a:	89 83       	std	Y+1, r24	; 0x01
    3e7c:	89 81       	ldd	r24, Y+1	; 0x01
    3e7e:	9a 81       	ldd	r25, Y+2	; 0x02
    3e80:	99 23       	and	r25, r25
    3e82:	64 f7       	brge	.-40     	; 0x3e5c <LCD_voidSendNum+0xc2>
		{
			LCD_voidSendChar( Local_u8NumArr[i] + '0');
		}
	}
}
    3e84:	61 96       	adiw	r28, 0x11	; 17
    3e86:	0f b6       	in	r0, 0x3f	; 63
    3e88:	f8 94       	cli
    3e8a:	de bf       	out	0x3e, r29	; 62
    3e8c:	0f be       	out	0x3f, r0	; 63
    3e8e:	cd bf       	out	0x3d, r28	; 61
    3e90:	cf 91       	pop	r28
    3e92:	df 91       	pop	r29
    3e94:	1f 91       	pop	r17
    3e96:	0f 91       	pop	r16
    3e98:	08 95       	ret

00003e9a <LCD_u8GoToXY>:


u8 LCD_u8GoToXY (u8 Copy_u8LineNum , u8 Copy_u8Location)
{
    3e9a:	df 93       	push	r29
    3e9c:	cf 93       	push	r28
    3e9e:	00 d0       	rcall	.+0      	; 0x3ea0 <LCD_u8GoToXY+0x6>
    3ea0:	00 d0       	rcall	.+0      	; 0x3ea2 <LCD_u8GoToXY+0x8>
    3ea2:	0f 92       	push	r0
    3ea4:	cd b7       	in	r28, 0x3d	; 61
    3ea6:	de b7       	in	r29, 0x3e	; 62
    3ea8:	8a 83       	std	Y+2, r24	; 0x02
    3eaa:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    3eac:	81 e0       	ldi	r24, 0x01	; 1
    3eae:	89 83       	std	Y+1, r24	; 0x01
	if (Copy_u8Location <= 39)
    3eb0:	8b 81       	ldd	r24, Y+3	; 0x03
    3eb2:	88 32       	cpi	r24, 0x28	; 40
    3eb4:	b0 f5       	brcc	.+108    	; 0x3f22 <LCD_u8GoToXY+0x88>
	{
		switch (Copy_u8LineNum)
    3eb6:	8a 81       	ldd	r24, Y+2	; 0x02
    3eb8:	28 2f       	mov	r18, r24
    3eba:	30 e0       	ldi	r19, 0x00	; 0
    3ebc:	3d 83       	std	Y+5, r19	; 0x05
    3ebe:	2c 83       	std	Y+4, r18	; 0x04
    3ec0:	8c 81       	ldd	r24, Y+4	; 0x04
    3ec2:	9d 81       	ldd	r25, Y+5	; 0x05
    3ec4:	82 30       	cpi	r24, 0x02	; 2
    3ec6:	91 05       	cpc	r25, r1
    3ec8:	d9 f0       	breq	.+54     	; 0x3f00 <LCD_u8GoToXY+0x66>
    3eca:	2c 81       	ldd	r18, Y+4	; 0x04
    3ecc:	3d 81       	ldd	r19, Y+5	; 0x05
    3ece:	23 30       	cpi	r18, 0x03	; 3
    3ed0:	31 05       	cpc	r19, r1
    3ed2:	34 f4       	brge	.+12     	; 0x3ee0 <LCD_u8GoToXY+0x46>
    3ed4:	8c 81       	ldd	r24, Y+4	; 0x04
    3ed6:	9d 81       	ldd	r25, Y+5	; 0x05
    3ed8:	81 30       	cpi	r24, 0x01	; 1
    3eda:	91 05       	cpc	r25, r1
    3edc:	61 f0       	breq	.+24     	; 0x3ef6 <LCD_u8GoToXY+0x5c>
    3ede:	1f c0       	rjmp	.+62     	; 0x3f1e <LCD_u8GoToXY+0x84>
    3ee0:	2c 81       	ldd	r18, Y+4	; 0x04
    3ee2:	3d 81       	ldd	r19, Y+5	; 0x05
    3ee4:	23 30       	cpi	r18, 0x03	; 3
    3ee6:	31 05       	cpc	r19, r1
    3ee8:	81 f0       	breq	.+32     	; 0x3f0a <LCD_u8GoToXY+0x70>
    3eea:	8c 81       	ldd	r24, Y+4	; 0x04
    3eec:	9d 81       	ldd	r25, Y+5	; 0x05
    3eee:	84 30       	cpi	r24, 0x04	; 4
    3ef0:	91 05       	cpc	r25, r1
    3ef2:	81 f0       	breq	.+32     	; 0x3f14 <LCD_u8GoToXY+0x7a>
    3ef4:	14 c0       	rjmp	.+40     	; 0x3f1e <LCD_u8GoToXY+0x84>
		{
			case LCD_u8_LINE_1   : LCD_voidSendCmnd (0x80 + Copy_u8Location); break;
    3ef6:	8b 81       	ldd	r24, Y+3	; 0x03
    3ef8:	80 58       	subi	r24, 0x80	; 128
    3efa:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
    3efe:	12 c0       	rjmp	.+36     	; 0x3f24 <LCD_u8GoToXY+0x8a>
			case LCD_u8_LINE_2   : LCD_voidSendCmnd (0xc0 + Copy_u8Location); break;
    3f00:	8b 81       	ldd	r24, Y+3	; 0x03
    3f02:	80 54       	subi	r24, 0x40	; 64
    3f04:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
    3f08:	0d c0       	rjmp	.+26     	; 0x3f24 <LCD_u8GoToXY+0x8a>
			case LCD_u8_LINE_3   : LCD_voidSendCmnd (0x94 + Copy_u8Location); break;
    3f0a:	8b 81       	ldd	r24, Y+3	; 0x03
    3f0c:	8c 56       	subi	r24, 0x6C	; 108
    3f0e:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
    3f12:	08 c0       	rjmp	.+16     	; 0x3f24 <LCD_u8GoToXY+0x8a>
			case LCD_u8_LINE_4   : LCD_voidSendCmnd (0xD4 + Copy_u8Location); break;
    3f14:	8b 81       	ldd	r24, Y+3	; 0x03
    3f16:	8c 52       	subi	r24, 0x2C	; 44
    3f18:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
    3f1c:	03 c0       	rjmp	.+6      	; 0x3f24 <LCD_u8GoToXY+0x8a>
			default              : Local_u8ErrorState = STD_TYPES_NOK;
    3f1e:	19 82       	std	Y+1, r1	; 0x01
    3f20:	01 c0       	rjmp	.+2      	; 0x3f24 <LCD_u8GoToXY+0x8a>
		}
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
    3f22:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErrorState;
    3f24:	89 81       	ldd	r24, Y+1	; 0x01
}
    3f26:	0f 90       	pop	r0
    3f28:	0f 90       	pop	r0
    3f2a:	0f 90       	pop	r0
    3f2c:	0f 90       	pop	r0
    3f2e:	0f 90       	pop	r0
    3f30:	cf 91       	pop	r28
    3f32:	df 91       	pop	r29
    3f34:	08 95       	ret

00003f36 <LCD_voidClearScreen>:

void LCD_voidClearScreen (void)
{
    3f36:	df 93       	push	r29
    3f38:	cf 93       	push	r28
    3f3a:	cd b7       	in	r28, 0x3d	; 61
    3f3c:	de b7       	in	r29, 0x3e	; 62
    3f3e:	2e 97       	sbiw	r28, 0x0e	; 14
    3f40:	0f b6       	in	r0, 0x3f	; 63
    3f42:	f8 94       	cli
    3f44:	de bf       	out	0x3e, r29	; 62
    3f46:	0f be       	out	0x3f, r0	; 63
    3f48:	cd bf       	out	0x3d, r28	; 61
	LCD_voidSendCmnd (0x01);
    3f4a:	81 e0       	ldi	r24, 0x01	; 1
    3f4c:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
    3f50:	80 e0       	ldi	r24, 0x00	; 0
    3f52:	90 e0       	ldi	r25, 0x00	; 0
    3f54:	a0 e0       	ldi	r26, 0x00	; 0
    3f56:	b0 e4       	ldi	r27, 0x40	; 64
    3f58:	8b 87       	std	Y+11, r24	; 0x0b
    3f5a:	9c 87       	std	Y+12, r25	; 0x0c
    3f5c:	ad 87       	std	Y+13, r26	; 0x0d
    3f5e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f60:	6b 85       	ldd	r22, Y+11	; 0x0b
    3f62:	7c 85       	ldd	r23, Y+12	; 0x0c
    3f64:	8d 85       	ldd	r24, Y+13	; 0x0d
    3f66:	9e 85       	ldd	r25, Y+14	; 0x0e
    3f68:	20 e0       	ldi	r18, 0x00	; 0
    3f6a:	30 e0       	ldi	r19, 0x00	; 0
    3f6c:	4a e7       	ldi	r20, 0x7A	; 122
    3f6e:	55 e4       	ldi	r21, 0x45	; 69
    3f70:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f74:	dc 01       	movw	r26, r24
    3f76:	cb 01       	movw	r24, r22
    3f78:	8f 83       	std	Y+7, r24	; 0x07
    3f7a:	98 87       	std	Y+8, r25	; 0x08
    3f7c:	a9 87       	std	Y+9, r26	; 0x09
    3f7e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3f80:	6f 81       	ldd	r22, Y+7	; 0x07
    3f82:	78 85       	ldd	r23, Y+8	; 0x08
    3f84:	89 85       	ldd	r24, Y+9	; 0x09
    3f86:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f88:	20 e0       	ldi	r18, 0x00	; 0
    3f8a:	30 e0       	ldi	r19, 0x00	; 0
    3f8c:	40 e8       	ldi	r20, 0x80	; 128
    3f8e:	5f e3       	ldi	r21, 0x3F	; 63
    3f90:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3f94:	88 23       	and	r24, r24
    3f96:	2c f4       	brge	.+10     	; 0x3fa2 <LCD_voidClearScreen+0x6c>
		__ticks = 1;
    3f98:	81 e0       	ldi	r24, 0x01	; 1
    3f9a:	90 e0       	ldi	r25, 0x00	; 0
    3f9c:	9e 83       	std	Y+6, r25	; 0x06
    3f9e:	8d 83       	std	Y+5, r24	; 0x05
    3fa0:	3f c0       	rjmp	.+126    	; 0x4020 <LCD_voidClearScreen+0xea>
	else if (__tmp > 65535)
    3fa2:	6f 81       	ldd	r22, Y+7	; 0x07
    3fa4:	78 85       	ldd	r23, Y+8	; 0x08
    3fa6:	89 85       	ldd	r24, Y+9	; 0x09
    3fa8:	9a 85       	ldd	r25, Y+10	; 0x0a
    3faa:	20 e0       	ldi	r18, 0x00	; 0
    3fac:	3f ef       	ldi	r19, 0xFF	; 255
    3fae:	4f e7       	ldi	r20, 0x7F	; 127
    3fb0:	57 e4       	ldi	r21, 0x47	; 71
    3fb2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3fb6:	18 16       	cp	r1, r24
    3fb8:	4c f5       	brge	.+82     	; 0x400c <LCD_voidClearScreen+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3fba:	6b 85       	ldd	r22, Y+11	; 0x0b
    3fbc:	7c 85       	ldd	r23, Y+12	; 0x0c
    3fbe:	8d 85       	ldd	r24, Y+13	; 0x0d
    3fc0:	9e 85       	ldd	r25, Y+14	; 0x0e
    3fc2:	20 e0       	ldi	r18, 0x00	; 0
    3fc4:	30 e0       	ldi	r19, 0x00	; 0
    3fc6:	40 e2       	ldi	r20, 0x20	; 32
    3fc8:	51 e4       	ldi	r21, 0x41	; 65
    3fca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3fce:	dc 01       	movw	r26, r24
    3fd0:	cb 01       	movw	r24, r22
    3fd2:	bc 01       	movw	r22, r24
    3fd4:	cd 01       	movw	r24, r26
    3fd6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3fda:	dc 01       	movw	r26, r24
    3fdc:	cb 01       	movw	r24, r22
    3fde:	9e 83       	std	Y+6, r25	; 0x06
    3fe0:	8d 83       	std	Y+5, r24	; 0x05
    3fe2:	0f c0       	rjmp	.+30     	; 0x4002 <LCD_voidClearScreen+0xcc>
    3fe4:	80 e9       	ldi	r24, 0x90	; 144
    3fe6:	91 e0       	ldi	r25, 0x01	; 1
    3fe8:	9c 83       	std	Y+4, r25	; 0x04
    3fea:	8b 83       	std	Y+3, r24	; 0x03
    3fec:	8b 81       	ldd	r24, Y+3	; 0x03
    3fee:	9c 81       	ldd	r25, Y+4	; 0x04
    3ff0:	01 97       	sbiw	r24, 0x01	; 1
    3ff2:	f1 f7       	brne	.-4      	; 0x3ff0 <LCD_voidClearScreen+0xba>
    3ff4:	9c 83       	std	Y+4, r25	; 0x04
    3ff6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ff8:	8d 81       	ldd	r24, Y+5	; 0x05
    3ffa:	9e 81       	ldd	r25, Y+6	; 0x06
    3ffc:	01 97       	sbiw	r24, 0x01	; 1
    3ffe:	9e 83       	std	Y+6, r25	; 0x06
    4000:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4002:	8d 81       	ldd	r24, Y+5	; 0x05
    4004:	9e 81       	ldd	r25, Y+6	; 0x06
    4006:	00 97       	sbiw	r24, 0x00	; 0
    4008:	69 f7       	brne	.-38     	; 0x3fe4 <LCD_voidClearScreen+0xae>
    400a:	14 c0       	rjmp	.+40     	; 0x4034 <LCD_voidClearScreen+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    400c:	6f 81       	ldd	r22, Y+7	; 0x07
    400e:	78 85       	ldd	r23, Y+8	; 0x08
    4010:	89 85       	ldd	r24, Y+9	; 0x09
    4012:	9a 85       	ldd	r25, Y+10	; 0x0a
    4014:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4018:	dc 01       	movw	r26, r24
    401a:	cb 01       	movw	r24, r22
    401c:	9e 83       	std	Y+6, r25	; 0x06
    401e:	8d 83       	std	Y+5, r24	; 0x05
    4020:	8d 81       	ldd	r24, Y+5	; 0x05
    4022:	9e 81       	ldd	r25, Y+6	; 0x06
    4024:	9a 83       	std	Y+2, r25	; 0x02
    4026:	89 83       	std	Y+1, r24	; 0x01
    4028:	89 81       	ldd	r24, Y+1	; 0x01
    402a:	9a 81       	ldd	r25, Y+2	; 0x02
    402c:	01 97       	sbiw	r24, 0x01	; 1
    402e:	f1 f7       	brne	.-4      	; 0x402c <LCD_voidClearScreen+0xf6>
    4030:	9a 83       	std	Y+2, r25	; 0x02
    4032:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms (2);
}
    4034:	2e 96       	adiw	r28, 0x0e	; 14
    4036:	0f b6       	in	r0, 0x3f	; 63
    4038:	f8 94       	cli
    403a:	de bf       	out	0x3e, r29	; 62
    403c:	0f be       	out	0x3f, r0	; 63
    403e:	cd bf       	out	0x3d, r28	; 61
    4040:	cf 91       	pop	r28
    4042:	df 91       	pop	r29
    4044:	08 95       	ret

00004046 <LCD_u8SendSpecialChar>:

u8 LCD_u8SendSpecialChar    (u8 Copy_u8CharNum , u8* Copy_pu8CharShape)
{
    4046:	df 93       	push	r29
    4048:	cf 93       	push	r28
    404a:	cd b7       	in	r28, 0x3d	; 61
    404c:	de b7       	in	r29, 0x3e	; 62
    404e:	28 97       	sbiw	r28, 0x08	; 8
    4050:	0f b6       	in	r0, 0x3f	; 63
    4052:	f8 94       	cli
    4054:	de bf       	out	0x3e, r29	; 62
    4056:	0f be       	out	0x3f, r0	; 63
    4058:	cd bf       	out	0x3d, r28	; 61
    405a:	8c 83       	std	Y+4, r24	; 0x04
    405c:	7e 83       	std	Y+6, r23	; 0x06
    405e:	6d 83       	std	Y+5, r22	; 0x05
	u8 Local_u8ErrorState = STD_TYPES_OK;
    4060:	81 e0       	ldi	r24, 0x01	; 1
    4062:	8b 83       	std	Y+3, r24	; 0x03
	if(Copy_u8CharNum <= 7)
    4064:	8c 81       	ldd	r24, Y+4	; 0x04
    4066:	88 30       	cpi	r24, 0x08	; 8
    4068:	08 f0       	brcs	.+2      	; 0x406c <LCD_u8SendSpecialChar+0x26>
    406a:	6a c0       	rjmp	.+212    	; 0x4140 <LCD_u8SendSpecialChar+0xfa>
	{
		switch(Copy_u8CharNum)
    406c:	8c 81       	ldd	r24, Y+4	; 0x04
    406e:	28 2f       	mov	r18, r24
    4070:	30 e0       	ldi	r19, 0x00	; 0
    4072:	38 87       	std	Y+8, r19	; 0x08
    4074:	2f 83       	std	Y+7, r18	; 0x07
    4076:	8f 81       	ldd	r24, Y+7	; 0x07
    4078:	98 85       	ldd	r25, Y+8	; 0x08
    407a:	83 30       	cpi	r24, 0x03	; 3
    407c:	91 05       	cpc	r25, r1
    407e:	a9 f1       	breq	.+106    	; 0x40ea <LCD_u8SendSpecialChar+0xa4>
    4080:	2f 81       	ldd	r18, Y+7	; 0x07
    4082:	38 85       	ldd	r19, Y+8	; 0x08
    4084:	24 30       	cpi	r18, 0x04	; 4
    4086:	31 05       	cpc	r19, r1
    4088:	7c f4       	brge	.+30     	; 0x40a8 <LCD_u8SendSpecialChar+0x62>
    408a:	8f 81       	ldd	r24, Y+7	; 0x07
    408c:	98 85       	ldd	r25, Y+8	; 0x08
    408e:	81 30       	cpi	r24, 0x01	; 1
    4090:	91 05       	cpc	r25, r1
    4092:	19 f1       	breq	.+70     	; 0x40da <LCD_u8SendSpecialChar+0x94>
    4094:	2f 81       	ldd	r18, Y+7	; 0x07
    4096:	38 85       	ldd	r19, Y+8	; 0x08
    4098:	22 30       	cpi	r18, 0x02	; 2
    409a:	31 05       	cpc	r19, r1
    409c:	14 f5       	brge	.+68     	; 0x40e2 <LCD_u8SendSpecialChar+0x9c>
    409e:	8f 81       	ldd	r24, Y+7	; 0x07
    40a0:	98 85       	ldd	r25, Y+8	; 0x08
    40a2:	00 97       	sbiw	r24, 0x00	; 0
    40a4:	b1 f0       	breq	.+44     	; 0x40d2 <LCD_u8SendSpecialChar+0x8c>
    40a6:	34 c0       	rjmp	.+104    	; 0x4110 <LCD_u8SendSpecialChar+0xca>
    40a8:	2f 81       	ldd	r18, Y+7	; 0x07
    40aa:	38 85       	ldd	r19, Y+8	; 0x08
    40ac:	25 30       	cpi	r18, 0x05	; 5
    40ae:	31 05       	cpc	r19, r1
    40b0:	21 f1       	breq	.+72     	; 0x40fa <LCD_u8SendSpecialChar+0xb4>
    40b2:	8f 81       	ldd	r24, Y+7	; 0x07
    40b4:	98 85       	ldd	r25, Y+8	; 0x08
    40b6:	85 30       	cpi	r24, 0x05	; 5
    40b8:	91 05       	cpc	r25, r1
    40ba:	dc f0       	brlt	.+54     	; 0x40f2 <LCD_u8SendSpecialChar+0xac>
    40bc:	2f 81       	ldd	r18, Y+7	; 0x07
    40be:	38 85       	ldd	r19, Y+8	; 0x08
    40c0:	26 30       	cpi	r18, 0x06	; 6
    40c2:	31 05       	cpc	r19, r1
    40c4:	f1 f0       	breq	.+60     	; 0x4102 <LCD_u8SendSpecialChar+0xbc>
    40c6:	8f 81       	ldd	r24, Y+7	; 0x07
    40c8:	98 85       	ldd	r25, Y+8	; 0x08
    40ca:	87 30       	cpi	r24, 0x07	; 7
    40cc:	91 05       	cpc	r25, r1
    40ce:	e9 f0       	breq	.+58     	; 0x410a <LCD_u8SendSpecialChar+0xc4>
    40d0:	1f c0       	rjmp	.+62     	; 0x4110 <LCD_u8SendSpecialChar+0xca>
		{
			case 0:LCD_voidSendCmnd(0b01000000); break; //0
    40d2:	80 e4       	ldi	r24, 0x40	; 64
    40d4:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
    40d8:	1b c0       	rjmp	.+54     	; 0x4110 <LCD_u8SendSpecialChar+0xca>
			case 1:LCD_voidSendCmnd(0b01001000); break; //8
    40da:	88 e4       	ldi	r24, 0x48	; 72
    40dc:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
    40e0:	17 c0       	rjmp	.+46     	; 0x4110 <LCD_u8SendSpecialChar+0xca>
			case 2:LCD_voidSendCmnd(0b01010000); break; //16
    40e2:	80 e5       	ldi	r24, 0x50	; 80
    40e4:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
    40e8:	13 c0       	rjmp	.+38     	; 0x4110 <LCD_u8SendSpecialChar+0xca>
			case 3:LCD_voidSendCmnd(0b01011000); break; //24
    40ea:	88 e5       	ldi	r24, 0x58	; 88
    40ec:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
    40f0:	0f c0       	rjmp	.+30     	; 0x4110 <LCD_u8SendSpecialChar+0xca>
			case 4:LCD_voidSendCmnd(0b01100000); break; //32
    40f2:	80 e6       	ldi	r24, 0x60	; 96
    40f4:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
    40f8:	0b c0       	rjmp	.+22     	; 0x4110 <LCD_u8SendSpecialChar+0xca>
			case 5:LCD_voidSendCmnd(0b01101000); break; //40
    40fa:	88 e6       	ldi	r24, 0x68	; 104
    40fc:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
    4100:	07 c0       	rjmp	.+14     	; 0x4110 <LCD_u8SendSpecialChar+0xca>
			case 6:LCD_voidSendCmnd(0b01110000); break; //48
    4102:	80 e7       	ldi	r24, 0x70	; 112
    4104:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
    4108:	03 c0       	rjmp	.+6      	; 0x4110 <LCD_u8SendSpecialChar+0xca>
			case 7:LCD_voidSendCmnd(0b01111000); break; //56
    410a:	88 e7       	ldi	r24, 0x78	; 120
    410c:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
		}
		for(int i=0 ;i <8 ;i++)
    4110:	1a 82       	std	Y+2, r1	; 0x02
    4112:	19 82       	std	Y+1, r1	; 0x01
    4114:	0f c0       	rjmp	.+30     	; 0x4134 <LCD_u8SendSpecialChar+0xee>
		{
		   LCD_voidSendChar(Copy_pu8CharShape[i]);
    4116:	29 81       	ldd	r18, Y+1	; 0x01
    4118:	3a 81       	ldd	r19, Y+2	; 0x02
    411a:	8d 81       	ldd	r24, Y+5	; 0x05
    411c:	9e 81       	ldd	r25, Y+6	; 0x06
    411e:	fc 01       	movw	r30, r24
    4120:	e2 0f       	add	r30, r18
    4122:	f3 1f       	adc	r31, r19
    4124:	80 81       	ld	r24, Z
    4126:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
			case 4:LCD_voidSendCmnd(0b01100000); break; //32
			case 5:LCD_voidSendCmnd(0b01101000); break; //40
			case 6:LCD_voidSendCmnd(0b01110000); break; //48
			case 7:LCD_voidSendCmnd(0b01111000); break; //56
		}
		for(int i=0 ;i <8 ;i++)
    412a:	89 81       	ldd	r24, Y+1	; 0x01
    412c:	9a 81       	ldd	r25, Y+2	; 0x02
    412e:	01 96       	adiw	r24, 0x01	; 1
    4130:	9a 83       	std	Y+2, r25	; 0x02
    4132:	89 83       	std	Y+1, r24	; 0x01
    4134:	89 81       	ldd	r24, Y+1	; 0x01
    4136:	9a 81       	ldd	r25, Y+2	; 0x02
    4138:	88 30       	cpi	r24, 0x08	; 8
    413a:	91 05       	cpc	r25, r1
    413c:	64 f3       	brlt	.-40     	; 0x4116 <LCD_u8SendSpecialChar+0xd0>
    413e:	01 c0       	rjmp	.+2      	; 0x4142 <LCD_u8SendSpecialChar+0xfc>
		   LCD_voidSendChar(Copy_pu8CharShape[i]);
		}
	}
	else
	{
	  Local_u8ErrorState = STD_TYPES_NOK;
    4140:	1b 82       	std	Y+3, r1	; 0x03
	}
	return Local_u8ErrorState;
    4142:	8b 81       	ldd	r24, Y+3	; 0x03
}
    4144:	28 96       	adiw	r28, 0x08	; 8
    4146:	0f b6       	in	r0, 0x3f	; 63
    4148:	f8 94       	cli
    414a:	de bf       	out	0x3e, r29	; 62
    414c:	0f be       	out	0x3f, r0	; 63
    414e:	cd bf       	out	0x3d, r28	; 61
    4150:	cf 91       	pop	r28
    4152:	df 91       	pop	r29
    4154:	08 95       	ret

00004156 <LCD_voidShiftRight>:

void LCD_voidShiftRight(void)
{
    4156:	df 93       	push	r29
    4158:	cf 93       	push	r28
    415a:	cd b7       	in	r28, 0x3d	; 61
    415c:	de b7       	in	r29, 0x3e	; 62
    415e:	2e 97       	sbiw	r28, 0x0e	; 14
    4160:	0f b6       	in	r0, 0x3f	; 63
    4162:	f8 94       	cli
    4164:	de bf       	out	0x3e, r29	; 62
    4166:	0f be       	out	0x3f, r0	; 63
    4168:	cd bf       	out	0x3d, r28	; 61
	LCD_voidSendCmnd(0b00011100);
    416a:	8c e1       	ldi	r24, 0x1C	; 28
    416c:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
    4170:	80 e0       	ldi	r24, 0x00	; 0
    4172:	90 e0       	ldi	r25, 0x00	; 0
    4174:	a8 ec       	ldi	r26, 0xC8	; 200
    4176:	b2 e4       	ldi	r27, 0x42	; 66
    4178:	8b 87       	std	Y+11, r24	; 0x0b
    417a:	9c 87       	std	Y+12, r25	; 0x0c
    417c:	ad 87       	std	Y+13, r26	; 0x0d
    417e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4180:	6b 85       	ldd	r22, Y+11	; 0x0b
    4182:	7c 85       	ldd	r23, Y+12	; 0x0c
    4184:	8d 85       	ldd	r24, Y+13	; 0x0d
    4186:	9e 85       	ldd	r25, Y+14	; 0x0e
    4188:	20 e0       	ldi	r18, 0x00	; 0
    418a:	30 e0       	ldi	r19, 0x00	; 0
    418c:	4a e7       	ldi	r20, 0x7A	; 122
    418e:	55 e4       	ldi	r21, 0x45	; 69
    4190:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4194:	dc 01       	movw	r26, r24
    4196:	cb 01       	movw	r24, r22
    4198:	8f 83       	std	Y+7, r24	; 0x07
    419a:	98 87       	std	Y+8, r25	; 0x08
    419c:	a9 87       	std	Y+9, r26	; 0x09
    419e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    41a0:	6f 81       	ldd	r22, Y+7	; 0x07
    41a2:	78 85       	ldd	r23, Y+8	; 0x08
    41a4:	89 85       	ldd	r24, Y+9	; 0x09
    41a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    41a8:	20 e0       	ldi	r18, 0x00	; 0
    41aa:	30 e0       	ldi	r19, 0x00	; 0
    41ac:	40 e8       	ldi	r20, 0x80	; 128
    41ae:	5f e3       	ldi	r21, 0x3F	; 63
    41b0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    41b4:	88 23       	and	r24, r24
    41b6:	2c f4       	brge	.+10     	; 0x41c2 <LCD_voidShiftRight+0x6c>
		__ticks = 1;
    41b8:	81 e0       	ldi	r24, 0x01	; 1
    41ba:	90 e0       	ldi	r25, 0x00	; 0
    41bc:	9e 83       	std	Y+6, r25	; 0x06
    41be:	8d 83       	std	Y+5, r24	; 0x05
    41c0:	3f c0       	rjmp	.+126    	; 0x4240 <LCD_voidShiftRight+0xea>
	else if (__tmp > 65535)
    41c2:	6f 81       	ldd	r22, Y+7	; 0x07
    41c4:	78 85       	ldd	r23, Y+8	; 0x08
    41c6:	89 85       	ldd	r24, Y+9	; 0x09
    41c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    41ca:	20 e0       	ldi	r18, 0x00	; 0
    41cc:	3f ef       	ldi	r19, 0xFF	; 255
    41ce:	4f e7       	ldi	r20, 0x7F	; 127
    41d0:	57 e4       	ldi	r21, 0x47	; 71
    41d2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    41d6:	18 16       	cp	r1, r24
    41d8:	4c f5       	brge	.+82     	; 0x422c <LCD_voidShiftRight+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    41da:	6b 85       	ldd	r22, Y+11	; 0x0b
    41dc:	7c 85       	ldd	r23, Y+12	; 0x0c
    41de:	8d 85       	ldd	r24, Y+13	; 0x0d
    41e0:	9e 85       	ldd	r25, Y+14	; 0x0e
    41e2:	20 e0       	ldi	r18, 0x00	; 0
    41e4:	30 e0       	ldi	r19, 0x00	; 0
    41e6:	40 e2       	ldi	r20, 0x20	; 32
    41e8:	51 e4       	ldi	r21, 0x41	; 65
    41ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    41ee:	dc 01       	movw	r26, r24
    41f0:	cb 01       	movw	r24, r22
    41f2:	bc 01       	movw	r22, r24
    41f4:	cd 01       	movw	r24, r26
    41f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    41fa:	dc 01       	movw	r26, r24
    41fc:	cb 01       	movw	r24, r22
    41fe:	9e 83       	std	Y+6, r25	; 0x06
    4200:	8d 83       	std	Y+5, r24	; 0x05
    4202:	0f c0       	rjmp	.+30     	; 0x4222 <LCD_voidShiftRight+0xcc>
    4204:	80 e9       	ldi	r24, 0x90	; 144
    4206:	91 e0       	ldi	r25, 0x01	; 1
    4208:	9c 83       	std	Y+4, r25	; 0x04
    420a:	8b 83       	std	Y+3, r24	; 0x03
    420c:	8b 81       	ldd	r24, Y+3	; 0x03
    420e:	9c 81       	ldd	r25, Y+4	; 0x04
    4210:	01 97       	sbiw	r24, 0x01	; 1
    4212:	f1 f7       	brne	.-4      	; 0x4210 <LCD_voidShiftRight+0xba>
    4214:	9c 83       	std	Y+4, r25	; 0x04
    4216:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4218:	8d 81       	ldd	r24, Y+5	; 0x05
    421a:	9e 81       	ldd	r25, Y+6	; 0x06
    421c:	01 97       	sbiw	r24, 0x01	; 1
    421e:	9e 83       	std	Y+6, r25	; 0x06
    4220:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4222:	8d 81       	ldd	r24, Y+5	; 0x05
    4224:	9e 81       	ldd	r25, Y+6	; 0x06
    4226:	00 97       	sbiw	r24, 0x00	; 0
    4228:	69 f7       	brne	.-38     	; 0x4204 <LCD_voidShiftRight+0xae>
    422a:	14 c0       	rjmp	.+40     	; 0x4254 <LCD_voidShiftRight+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    422c:	6f 81       	ldd	r22, Y+7	; 0x07
    422e:	78 85       	ldd	r23, Y+8	; 0x08
    4230:	89 85       	ldd	r24, Y+9	; 0x09
    4232:	9a 85       	ldd	r25, Y+10	; 0x0a
    4234:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4238:	dc 01       	movw	r26, r24
    423a:	cb 01       	movw	r24, r22
    423c:	9e 83       	std	Y+6, r25	; 0x06
    423e:	8d 83       	std	Y+5, r24	; 0x05
    4240:	8d 81       	ldd	r24, Y+5	; 0x05
    4242:	9e 81       	ldd	r25, Y+6	; 0x06
    4244:	9a 83       	std	Y+2, r25	; 0x02
    4246:	89 83       	std	Y+1, r24	; 0x01
    4248:	89 81       	ldd	r24, Y+1	; 0x01
    424a:	9a 81       	ldd	r25, Y+2	; 0x02
    424c:	01 97       	sbiw	r24, 0x01	; 1
    424e:	f1 f7       	brne	.-4      	; 0x424c <LCD_voidShiftRight+0xf6>
    4250:	9a 83       	std	Y+2, r25	; 0x02
    4252:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(100);
}
    4254:	2e 96       	adiw	r28, 0x0e	; 14
    4256:	0f b6       	in	r0, 0x3f	; 63
    4258:	f8 94       	cli
    425a:	de bf       	out	0x3e, r29	; 62
    425c:	0f be       	out	0x3f, r0	; 63
    425e:	cd bf       	out	0x3d, r28	; 61
    4260:	cf 91       	pop	r28
    4262:	df 91       	pop	r29
    4264:	08 95       	ret

00004266 <LCD_voidShiftLeft>:

void LCD_voidShiftLeft(void)
{
    4266:	df 93       	push	r29
    4268:	cf 93       	push	r28
    426a:	cd b7       	in	r28, 0x3d	; 61
    426c:	de b7       	in	r29, 0x3e	; 62
    426e:	2e 97       	sbiw	r28, 0x0e	; 14
    4270:	0f b6       	in	r0, 0x3f	; 63
    4272:	f8 94       	cli
    4274:	de bf       	out	0x3e, r29	; 62
    4276:	0f be       	out	0x3f, r0	; 63
    4278:	cd bf       	out	0x3d, r28	; 61
	LCD_voidSendCmnd(0b00011000);
    427a:	88 e1       	ldi	r24, 0x18	; 24
    427c:	0e 94 0e 1a 	call	0x341c	; 0x341c <LCD_voidSendCmnd>
    4280:	80 e0       	ldi	r24, 0x00	; 0
    4282:	90 e0       	ldi	r25, 0x00	; 0
    4284:	a8 ec       	ldi	r26, 0xC8	; 200
    4286:	b2 e4       	ldi	r27, 0x42	; 66
    4288:	8b 87       	std	Y+11, r24	; 0x0b
    428a:	9c 87       	std	Y+12, r25	; 0x0c
    428c:	ad 87       	std	Y+13, r26	; 0x0d
    428e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4290:	6b 85       	ldd	r22, Y+11	; 0x0b
    4292:	7c 85       	ldd	r23, Y+12	; 0x0c
    4294:	8d 85       	ldd	r24, Y+13	; 0x0d
    4296:	9e 85       	ldd	r25, Y+14	; 0x0e
    4298:	20 e0       	ldi	r18, 0x00	; 0
    429a:	30 e0       	ldi	r19, 0x00	; 0
    429c:	4a e7       	ldi	r20, 0x7A	; 122
    429e:	55 e4       	ldi	r21, 0x45	; 69
    42a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    42a4:	dc 01       	movw	r26, r24
    42a6:	cb 01       	movw	r24, r22
    42a8:	8f 83       	std	Y+7, r24	; 0x07
    42aa:	98 87       	std	Y+8, r25	; 0x08
    42ac:	a9 87       	std	Y+9, r26	; 0x09
    42ae:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    42b0:	6f 81       	ldd	r22, Y+7	; 0x07
    42b2:	78 85       	ldd	r23, Y+8	; 0x08
    42b4:	89 85       	ldd	r24, Y+9	; 0x09
    42b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    42b8:	20 e0       	ldi	r18, 0x00	; 0
    42ba:	30 e0       	ldi	r19, 0x00	; 0
    42bc:	40 e8       	ldi	r20, 0x80	; 128
    42be:	5f e3       	ldi	r21, 0x3F	; 63
    42c0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    42c4:	88 23       	and	r24, r24
    42c6:	2c f4       	brge	.+10     	; 0x42d2 <LCD_voidShiftLeft+0x6c>
		__ticks = 1;
    42c8:	81 e0       	ldi	r24, 0x01	; 1
    42ca:	90 e0       	ldi	r25, 0x00	; 0
    42cc:	9e 83       	std	Y+6, r25	; 0x06
    42ce:	8d 83       	std	Y+5, r24	; 0x05
    42d0:	3f c0       	rjmp	.+126    	; 0x4350 <LCD_voidShiftLeft+0xea>
	else if (__tmp > 65535)
    42d2:	6f 81       	ldd	r22, Y+7	; 0x07
    42d4:	78 85       	ldd	r23, Y+8	; 0x08
    42d6:	89 85       	ldd	r24, Y+9	; 0x09
    42d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    42da:	20 e0       	ldi	r18, 0x00	; 0
    42dc:	3f ef       	ldi	r19, 0xFF	; 255
    42de:	4f e7       	ldi	r20, 0x7F	; 127
    42e0:	57 e4       	ldi	r21, 0x47	; 71
    42e2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    42e6:	18 16       	cp	r1, r24
    42e8:	4c f5       	brge	.+82     	; 0x433c <LCD_voidShiftLeft+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42ea:	6b 85       	ldd	r22, Y+11	; 0x0b
    42ec:	7c 85       	ldd	r23, Y+12	; 0x0c
    42ee:	8d 85       	ldd	r24, Y+13	; 0x0d
    42f0:	9e 85       	ldd	r25, Y+14	; 0x0e
    42f2:	20 e0       	ldi	r18, 0x00	; 0
    42f4:	30 e0       	ldi	r19, 0x00	; 0
    42f6:	40 e2       	ldi	r20, 0x20	; 32
    42f8:	51 e4       	ldi	r21, 0x41	; 65
    42fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    42fe:	dc 01       	movw	r26, r24
    4300:	cb 01       	movw	r24, r22
    4302:	bc 01       	movw	r22, r24
    4304:	cd 01       	movw	r24, r26
    4306:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    430a:	dc 01       	movw	r26, r24
    430c:	cb 01       	movw	r24, r22
    430e:	9e 83       	std	Y+6, r25	; 0x06
    4310:	8d 83       	std	Y+5, r24	; 0x05
    4312:	0f c0       	rjmp	.+30     	; 0x4332 <LCD_voidShiftLeft+0xcc>
    4314:	80 e9       	ldi	r24, 0x90	; 144
    4316:	91 e0       	ldi	r25, 0x01	; 1
    4318:	9c 83       	std	Y+4, r25	; 0x04
    431a:	8b 83       	std	Y+3, r24	; 0x03
    431c:	8b 81       	ldd	r24, Y+3	; 0x03
    431e:	9c 81       	ldd	r25, Y+4	; 0x04
    4320:	01 97       	sbiw	r24, 0x01	; 1
    4322:	f1 f7       	brne	.-4      	; 0x4320 <LCD_voidShiftLeft+0xba>
    4324:	9c 83       	std	Y+4, r25	; 0x04
    4326:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4328:	8d 81       	ldd	r24, Y+5	; 0x05
    432a:	9e 81       	ldd	r25, Y+6	; 0x06
    432c:	01 97       	sbiw	r24, 0x01	; 1
    432e:	9e 83       	std	Y+6, r25	; 0x06
    4330:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4332:	8d 81       	ldd	r24, Y+5	; 0x05
    4334:	9e 81       	ldd	r25, Y+6	; 0x06
    4336:	00 97       	sbiw	r24, 0x00	; 0
    4338:	69 f7       	brne	.-38     	; 0x4314 <LCD_voidShiftLeft+0xae>
    433a:	14 c0       	rjmp	.+40     	; 0x4364 <LCD_voidShiftLeft+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    433c:	6f 81       	ldd	r22, Y+7	; 0x07
    433e:	78 85       	ldd	r23, Y+8	; 0x08
    4340:	89 85       	ldd	r24, Y+9	; 0x09
    4342:	9a 85       	ldd	r25, Y+10	; 0x0a
    4344:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4348:	dc 01       	movw	r26, r24
    434a:	cb 01       	movw	r24, r22
    434c:	9e 83       	std	Y+6, r25	; 0x06
    434e:	8d 83       	std	Y+5, r24	; 0x05
    4350:	8d 81       	ldd	r24, Y+5	; 0x05
    4352:	9e 81       	ldd	r25, Y+6	; 0x06
    4354:	9a 83       	std	Y+2, r25	; 0x02
    4356:	89 83       	std	Y+1, r24	; 0x01
    4358:	89 81       	ldd	r24, Y+1	; 0x01
    435a:	9a 81       	ldd	r25, Y+2	; 0x02
    435c:	01 97       	sbiw	r24, 0x01	; 1
    435e:	f1 f7       	brne	.-4      	; 0x435c <LCD_voidShiftLeft+0xf6>
    4360:	9a 83       	std	Y+2, r25	; 0x02
    4362:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(100);
}
    4364:	2e 96       	adiw	r28, 0x0e	; 14
    4366:	0f b6       	in	r0, 0x3f	; 63
    4368:	f8 94       	cli
    436a:	de bf       	out	0x3e, r29	; 62
    436c:	0f be       	out	0x3f, r0	; 63
    436e:	cd bf       	out	0x3d, r28	; 61
    4370:	cf 91       	pop	r28
    4372:	df 91       	pop	r29
    4374:	08 95       	ret

00004376 <main>:

#include"LCD_interface.h"
#include"KPD_interface.h"

int main(void)
{
    4376:	0f 93       	push	r16
    4378:	1f 93       	push	r17
    437a:	df 93       	push	r29
    437c:	cf 93       	push	r28
    437e:	cd b7       	in	r28, 0x3d	; 61
    4380:	de b7       	in	r29, 0x3e	; 62
    4382:	c4 56       	subi	r28, 0x64	; 100
    4384:	d0 40       	sbci	r29, 0x00	; 0
    4386:	0f b6       	in	r0, 0x3f	; 63
    4388:	f8 94       	cli
    438a:	de bf       	out	0x3e, r29	; 62
    438c:	0f be       	out	0x3f, r0	; 63
    438e:	cd bf       	out	0x3d, r28	; 61

	DIO_voidInit();
    4390:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_voidInit>
	LCD_voidInit();
    4394:	0e 94 9e 0c 	call	0x193c	; 0x193c <LCD_voidInit>
	s8 Ball_Location =1;
    4398:	fe 01       	movw	r30, r28
    439a:	e7 5b       	subi	r30, 0xB7	; 183
    439c:	ff 4f       	sbci	r31, 0xFF	; 255
    439e:	81 e0       	ldi	r24, 0x01	; 1
    43a0:	80 83       	st	Z, r24
	u8 KeyValue = KPD_u8_KEY_NOT_PRESSED;
    43a2:	fe 01       	movw	r30, r28
    43a4:	e6 5b       	subi	r30, 0xB6	; 182
    43a6:	ff 4f       	sbci	r31, 0xFF	; 255
    43a8:	8f ef       	ldi	r24, 0xFF	; 255
    43aa:	80 83       	st	Z, r24
	u8 customChar[] = {0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F};
    43ac:	ce 01       	movw	r24, r28
    43ae:	85 5b       	subi	r24, 0xB5	; 181
    43b0:	9f 4f       	sbci	r25, 0xFF	; 255
    43b2:	6d 96       	adiw	r28, 0x1d	; 29
    43b4:	9f af       	std	Y+63, r25	; 0x3f
    43b6:	8e af       	std	Y+62, r24	; 0x3e
    43b8:	6d 97       	sbiw	r28, 0x1d	; 29
    43ba:	81 eb       	ldi	r24, 0xB1	; 177
    43bc:	90 e0       	ldi	r25, 0x00	; 0
    43be:	6f 96       	adiw	r28, 0x1f	; 31
    43c0:	9f af       	std	Y+63, r25	; 0x3f
    43c2:	8e af       	std	Y+62, r24	; 0x3e
    43c4:	6f 97       	sbiw	r28, 0x1f	; 31
    43c6:	98 e0       	ldi	r25, 0x08	; 8
    43c8:	a0 96       	adiw	r28, 0x20	; 32
    43ca:	9f af       	std	Y+63, r25	; 0x3f
    43cc:	a0 97       	sbiw	r28, 0x20	; 32
    43ce:	6f 96       	adiw	r28, 0x1f	; 31
    43d0:	ee ad       	ldd	r30, Y+62	; 0x3e
    43d2:	ff ad       	ldd	r31, Y+63	; 0x3f
    43d4:	6f 97       	sbiw	r28, 0x1f	; 31
    43d6:	00 80       	ld	r0, Z
    43d8:	6f 96       	adiw	r28, 0x1f	; 31
    43da:	8e ad       	ldd	r24, Y+62	; 0x3e
    43dc:	9f ad       	ldd	r25, Y+63	; 0x3f
    43de:	6f 97       	sbiw	r28, 0x1f	; 31
    43e0:	01 96       	adiw	r24, 0x01	; 1
    43e2:	6f 96       	adiw	r28, 0x1f	; 31
    43e4:	9f af       	std	Y+63, r25	; 0x3f
    43e6:	8e af       	std	Y+62, r24	; 0x3e
    43e8:	6f 97       	sbiw	r28, 0x1f	; 31
    43ea:	6d 96       	adiw	r28, 0x1d	; 29
    43ec:	ee ad       	ldd	r30, Y+62	; 0x3e
    43ee:	ff ad       	ldd	r31, Y+63	; 0x3f
    43f0:	6d 97       	sbiw	r28, 0x1d	; 29
    43f2:	00 82       	st	Z, r0
    43f4:	6d 96       	adiw	r28, 0x1d	; 29
    43f6:	8e ad       	ldd	r24, Y+62	; 0x3e
    43f8:	9f ad       	ldd	r25, Y+63	; 0x3f
    43fa:	6d 97       	sbiw	r28, 0x1d	; 29
    43fc:	01 96       	adiw	r24, 0x01	; 1
    43fe:	6d 96       	adiw	r28, 0x1d	; 29
    4400:	9f af       	std	Y+63, r25	; 0x3f
    4402:	8e af       	std	Y+62, r24	; 0x3e
    4404:	6d 97       	sbiw	r28, 0x1d	; 29
    4406:	a0 96       	adiw	r28, 0x20	; 32
    4408:	9f ad       	ldd	r25, Y+63	; 0x3f
    440a:	a0 97       	sbiw	r28, 0x20	; 32
    440c:	91 50       	subi	r25, 0x01	; 1
    440e:	a0 96       	adiw	r28, 0x20	; 32
    4410:	9f af       	std	Y+63, r25	; 0x3f
    4412:	a0 97       	sbiw	r28, 0x20	; 32
    4414:	a0 96       	adiw	r28, 0x20	; 32
    4416:	ef ad       	ldd	r30, Y+63	; 0x3f
    4418:	a0 97       	sbiw	r28, 0x20	; 32
    441a:	ee 23       	and	r30, r30
    441c:	c1 f6       	brne	.-80     	; 0x43ce <main+0x58>
	u8 Ball[]       = {0x00,0x04,0x0A,0x15,0x0E,0x04,0x1F,0x00};
    441e:	ce 01       	movw	r24, r28
    4420:	8d 5a       	subi	r24, 0xAD	; 173
    4422:	9f 4f       	sbci	r25, 0xFF	; 255
    4424:	a2 96       	adiw	r28, 0x22	; 34
    4426:	9f af       	std	Y+63, r25	; 0x3f
    4428:	8e af       	std	Y+62, r24	; 0x3e
    442a:	a2 97       	sbiw	r28, 0x22	; 34
    442c:	89 ea       	ldi	r24, 0xA9	; 169
    442e:	90 e0       	ldi	r25, 0x00	; 0
    4430:	a4 96       	adiw	r28, 0x24	; 36
    4432:	9f af       	std	Y+63, r25	; 0x3f
    4434:	8e af       	std	Y+62, r24	; 0x3e
    4436:	a4 97       	sbiw	r28, 0x24	; 36
    4438:	98 e0       	ldi	r25, 0x08	; 8
    443a:	a5 96       	adiw	r28, 0x25	; 37
    443c:	9f af       	std	Y+63, r25	; 0x3f
    443e:	a5 97       	sbiw	r28, 0x25	; 37
    4440:	a4 96       	adiw	r28, 0x24	; 36
    4442:	ee ad       	ldd	r30, Y+62	; 0x3e
    4444:	ff ad       	ldd	r31, Y+63	; 0x3f
    4446:	a4 97       	sbiw	r28, 0x24	; 36
    4448:	00 80       	ld	r0, Z
    444a:	a4 96       	adiw	r28, 0x24	; 36
    444c:	8e ad       	ldd	r24, Y+62	; 0x3e
    444e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4450:	a4 97       	sbiw	r28, 0x24	; 36
    4452:	01 96       	adiw	r24, 0x01	; 1
    4454:	a4 96       	adiw	r28, 0x24	; 36
    4456:	9f af       	std	Y+63, r25	; 0x3f
    4458:	8e af       	std	Y+62, r24	; 0x3e
    445a:	a4 97       	sbiw	r28, 0x24	; 36
    445c:	a2 96       	adiw	r28, 0x22	; 34
    445e:	ee ad       	ldd	r30, Y+62	; 0x3e
    4460:	ff ad       	ldd	r31, Y+63	; 0x3f
    4462:	a2 97       	sbiw	r28, 0x22	; 34
    4464:	00 82       	st	Z, r0
    4466:	a2 96       	adiw	r28, 0x22	; 34
    4468:	8e ad       	ldd	r24, Y+62	; 0x3e
    446a:	9f ad       	ldd	r25, Y+63	; 0x3f
    446c:	a2 97       	sbiw	r28, 0x22	; 34
    446e:	01 96       	adiw	r24, 0x01	; 1
    4470:	a2 96       	adiw	r28, 0x22	; 34
    4472:	9f af       	std	Y+63, r25	; 0x3f
    4474:	8e af       	std	Y+62, r24	; 0x3e
    4476:	a2 97       	sbiw	r28, 0x22	; 34
    4478:	a5 96       	adiw	r28, 0x25	; 37
    447a:	9f ad       	ldd	r25, Y+63	; 0x3f
    447c:	a5 97       	sbiw	r28, 0x25	; 37
    447e:	91 50       	subi	r25, 0x01	; 1
    4480:	a5 96       	adiw	r28, 0x25	; 37
    4482:	9f af       	std	Y+63, r25	; 0x3f
    4484:	a5 97       	sbiw	r28, 0x25	; 37
    4486:	a5 96       	adiw	r28, 0x25	; 37
    4488:	ef ad       	ldd	r30, Y+63	; 0x3f
    448a:	a5 97       	sbiw	r28, 0x25	; 37
    448c:	ee 23       	and	r30, r30
    448e:	c1 f6       	brne	.-80     	; 0x4440 <main+0xca>
	LCD_u8SendSpecialChar(0,customChar);
    4490:	9e 01       	movw	r18, r28
    4492:	25 5b       	subi	r18, 0xB5	; 181
    4494:	3f 4f       	sbci	r19, 0xFF	; 255
    4496:	80 e0       	ldi	r24, 0x00	; 0
    4498:	b9 01       	movw	r22, r18
    449a:	0e 94 23 20 	call	0x4046	; 0x4046 <LCD_u8SendSpecialChar>
	LCD_u8SendSpecialChar(1,Ball);
    449e:	9e 01       	movw	r18, r28
    44a0:	2d 5a       	subi	r18, 0xAD	; 173
    44a2:	3f 4f       	sbci	r19, 0xFF	; 255
    44a4:	81 e0       	ldi	r24, 0x01	; 1
    44a6:	b9 01       	movw	r22, r18
    44a8:	0e 94 23 20 	call	0x4046	; 0x4046 <LCD_u8SendSpecialChar>
	for(u8 Location = 0; Location < 20 ; Location++)
    44ac:	fe 01       	movw	r30, r28
    44ae:	e8 5b       	subi	r30, 0xB8	; 184
    44b0:	ff 4f       	sbci	r31, 0xFF	; 255
    44b2:	10 82       	st	Z, r1
    44b4:	13 c0       	rjmp	.+38     	; 0x44dc <main+0x166>
	{
		LCD_u8GoToXY(LCD_u8_LINE_1,Location);
    44b6:	fe 01       	movw	r30, r28
    44b8:	e8 5b       	subi	r30, 0xB8	; 184
    44ba:	ff 4f       	sbci	r31, 0xFF	; 255
    44bc:	81 e0       	ldi	r24, 0x01	; 1
    44be:	60 81       	ld	r22, Z
    44c0:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
		LCD_voidSendChar(0);
    44c4:	80 e0       	ldi	r24, 0x00	; 0
    44c6:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
	u8 KeyValue = KPD_u8_KEY_NOT_PRESSED;
	u8 customChar[] = {0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F};
	u8 Ball[]       = {0x00,0x04,0x0A,0x15,0x0E,0x04,0x1F,0x00};
	LCD_u8SendSpecialChar(0,customChar);
	LCD_u8SendSpecialChar(1,Ball);
	for(u8 Location = 0; Location < 20 ; Location++)
    44ca:	de 01       	movw	r26, r28
    44cc:	a8 5b       	subi	r26, 0xB8	; 184
    44ce:	bf 4f       	sbci	r27, 0xFF	; 255
    44d0:	fe 01       	movw	r30, r28
    44d2:	e8 5b       	subi	r30, 0xB8	; 184
    44d4:	ff 4f       	sbci	r31, 0xFF	; 255
    44d6:	80 81       	ld	r24, Z
    44d8:	8f 5f       	subi	r24, 0xFF	; 255
    44da:	8c 93       	st	X, r24
    44dc:	fe 01       	movw	r30, r28
    44de:	e8 5b       	subi	r30, 0xB8	; 184
    44e0:	ff 4f       	sbci	r31, 0xFF	; 255
    44e2:	80 81       	ld	r24, Z
    44e4:	84 31       	cpi	r24, 0x14	; 20
    44e6:	38 f3       	brcs	.-50     	; 0x44b6 <main+0x140>
	{
		LCD_u8GoToXY(LCD_u8_LINE_1,Location);
		LCD_voidSendChar(0);
	}
	LCD_u8GoToXY(LCD_u8_LINE_2,19);
    44e8:	82 e0       	ldi	r24, 0x02	; 2
    44ea:	63 e1       	ldi	r22, 0x13	; 19
    44ec:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
	LCD_voidSendChar(0);
    44f0:	80 e0       	ldi	r24, 0x00	; 0
    44f2:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
	LCD_u8GoToXY(LCD_u8_LINE_3,19);
    44f6:	83 e0       	ldi	r24, 0x03	; 3
    44f8:	63 e1       	ldi	r22, 0x13	; 19
    44fa:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
	LCD_voidSendChar(0);
    44fe:	80 e0       	ldi	r24, 0x00	; 0
    4500:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>

	for(s8 Location = 19; Location >= 0 ; Location--)
    4504:	fe 01       	movw	r30, r28
    4506:	e9 5b       	subi	r30, 0xB9	; 185
    4508:	ff 4f       	sbci	r31, 0xFF	; 255
    450a:	83 e1       	ldi	r24, 0x13	; 19
    450c:	80 83       	st	Z, r24
    450e:	14 c0       	rjmp	.+40     	; 0x4538 <main+0x1c2>
	{
		LCD_u8GoToXY(LCD_u8_LINE_4,Location);
    4510:	fe 01       	movw	r30, r28
    4512:	e9 5b       	subi	r30, 0xB9	; 185
    4514:	ff 4f       	sbci	r31, 0xFF	; 255
    4516:	90 81       	ld	r25, Z
    4518:	84 e0       	ldi	r24, 0x04	; 4
    451a:	69 2f       	mov	r22, r25
    451c:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
		LCD_voidSendChar(0);
    4520:	80 e0       	ldi	r24, 0x00	; 0
    4522:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
	LCD_u8GoToXY(LCD_u8_LINE_2,19);
	LCD_voidSendChar(0);
	LCD_u8GoToXY(LCD_u8_LINE_3,19);
	LCD_voidSendChar(0);

	for(s8 Location = 19; Location >= 0 ; Location--)
    4526:	de 01       	movw	r26, r28
    4528:	a9 5b       	subi	r26, 0xB9	; 185
    452a:	bf 4f       	sbci	r27, 0xFF	; 255
    452c:	fe 01       	movw	r30, r28
    452e:	e9 5b       	subi	r30, 0xB9	; 185
    4530:	ff 4f       	sbci	r31, 0xFF	; 255
    4532:	80 81       	ld	r24, Z
    4534:	81 50       	subi	r24, 0x01	; 1
    4536:	8c 93       	st	X, r24
    4538:	fe 01       	movw	r30, r28
    453a:	e9 5b       	subi	r30, 0xB9	; 185
    453c:	ff 4f       	sbci	r31, 0xFF	; 255
    453e:	80 81       	ld	r24, Z
    4540:	88 23       	and	r24, r24
    4542:	34 f7       	brge	.-52     	; 0x4510 <main+0x19a>
	{
		LCD_u8GoToXY(LCD_u8_LINE_4,Location);
		LCD_voidSendChar(0);
   }
	LCD_u8GoToXY(LCD_u8_LINE_3,0);
    4544:	83 e0       	ldi	r24, 0x03	; 3
    4546:	60 e0       	ldi	r22, 0x00	; 0
    4548:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
	LCD_voidSendChar(0);
    454c:	80 e0       	ldi	r24, 0x00	; 0
    454e:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
	LCD_u8GoToXY(LCD_u8_LINE_2,0);
    4552:	82 e0       	ldi	r24, 0x02	; 2
    4554:	60 e0       	ldi	r22, 0x00	; 0
    4556:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
	LCD_voidSendChar(0);
    455a:	80 e0       	ldi	r24, 0x00	; 0
    455c:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
	while(1)
	{
		KeyValue = KPD_u8_KEY_NOT_PRESSED;
    4560:	fe 01       	movw	r30, r28
    4562:	e6 5b       	subi	r30, 0xB6	; 182
    4564:	ff 4f       	sbci	r31, 0xFF	; 255
    4566:	8f ef       	ldi	r24, 0xFF	; 255
    4568:	80 83       	st	Z, r24
    456a:	75 c1       	rjmp	.+746    	; 0x4856 <main+0x4e0>
		/*******************************************************************************************************/
		while( KeyValue != '2' && Ball_Location > 0 && Ball_Location < 19)
		{
			while(KeyValue != '2' && KeyValue != '4' && Ball_Location > 0 && Ball_Location < 19)
			{
				LCD_u8GoToXY(LCD_u8_LINE_2,Ball_Location);
    456c:	fe 01       	movw	r30, r28
    456e:	e7 5b       	subi	r30, 0xB7	; 183
    4570:	ff 4f       	sbci	r31, 0xFF	; 255
    4572:	90 81       	ld	r25, Z
    4574:	82 e0       	ldi	r24, 0x02	; 2
    4576:	69 2f       	mov	r22, r25
    4578:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
				LCD_voidSendChar(1);
    457c:	81 e0       	ldi	r24, 0x01	; 1
    457e:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
    4582:	fe 01       	movw	r30, r28
    4584:	ed 5b       	subi	r30, 0xBD	; 189
    4586:	ff 4f       	sbci	r31, 0xFF	; 255
    4588:	80 e0       	ldi	r24, 0x00	; 0
    458a:	90 e0       	ldi	r25, 0x00	; 0
    458c:	a8 e4       	ldi	r26, 0x48	; 72
    458e:	b2 e4       	ldi	r27, 0x42	; 66
    4590:	80 83       	st	Z, r24
    4592:	91 83       	std	Z+1, r25	; 0x01
    4594:	a2 83       	std	Z+2, r26	; 0x02
    4596:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4598:	8e 01       	movw	r16, r28
    459a:	01 5c       	subi	r16, 0xC1	; 193
    459c:	1f 4f       	sbci	r17, 0xFF	; 255
    459e:	fe 01       	movw	r30, r28
    45a0:	ed 5b       	subi	r30, 0xBD	; 189
    45a2:	ff 4f       	sbci	r31, 0xFF	; 255
    45a4:	60 81       	ld	r22, Z
    45a6:	71 81       	ldd	r23, Z+1	; 0x01
    45a8:	82 81       	ldd	r24, Z+2	; 0x02
    45aa:	93 81       	ldd	r25, Z+3	; 0x03
    45ac:	20 e0       	ldi	r18, 0x00	; 0
    45ae:	30 e0       	ldi	r19, 0x00	; 0
    45b0:	4a e7       	ldi	r20, 0x7A	; 122
    45b2:	55 e4       	ldi	r21, 0x45	; 69
    45b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    45b8:	dc 01       	movw	r26, r24
    45ba:	cb 01       	movw	r24, r22
    45bc:	f8 01       	movw	r30, r16
    45be:	80 83       	st	Z, r24
    45c0:	91 83       	std	Z+1, r25	; 0x01
    45c2:	a2 83       	std	Z+2, r26	; 0x02
    45c4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    45c6:	fe 01       	movw	r30, r28
    45c8:	ff 96       	adiw	r30, 0x3f	; 63
    45ca:	60 81       	ld	r22, Z
    45cc:	71 81       	ldd	r23, Z+1	; 0x01
    45ce:	82 81       	ldd	r24, Z+2	; 0x02
    45d0:	93 81       	ldd	r25, Z+3	; 0x03
    45d2:	20 e0       	ldi	r18, 0x00	; 0
    45d4:	30 e0       	ldi	r19, 0x00	; 0
    45d6:	40 e8       	ldi	r20, 0x80	; 128
    45d8:	5f e3       	ldi	r21, 0x3F	; 63
    45da:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    45de:	88 23       	and	r24, r24
    45e0:	2c f4       	brge	.+10     	; 0x45ec <main+0x276>
		__ticks = 1;
    45e2:	81 e0       	ldi	r24, 0x01	; 1
    45e4:	90 e0       	ldi	r25, 0x00	; 0
    45e6:	9e af       	std	Y+62, r25	; 0x3e
    45e8:	8d af       	std	Y+61, r24	; 0x3d
    45ea:	46 c0       	rjmp	.+140    	; 0x4678 <main+0x302>
	else if (__tmp > 65535)
    45ec:	fe 01       	movw	r30, r28
    45ee:	ff 96       	adiw	r30, 0x3f	; 63
    45f0:	60 81       	ld	r22, Z
    45f2:	71 81       	ldd	r23, Z+1	; 0x01
    45f4:	82 81       	ldd	r24, Z+2	; 0x02
    45f6:	93 81       	ldd	r25, Z+3	; 0x03
    45f8:	20 e0       	ldi	r18, 0x00	; 0
    45fa:	3f ef       	ldi	r19, 0xFF	; 255
    45fc:	4f e7       	ldi	r20, 0x7F	; 127
    45fe:	57 e4       	ldi	r21, 0x47	; 71
    4600:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4604:	18 16       	cp	r1, r24
    4606:	64 f5       	brge	.+88     	; 0x4660 <main+0x2ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4608:	fe 01       	movw	r30, r28
    460a:	ed 5b       	subi	r30, 0xBD	; 189
    460c:	ff 4f       	sbci	r31, 0xFF	; 255
    460e:	60 81       	ld	r22, Z
    4610:	71 81       	ldd	r23, Z+1	; 0x01
    4612:	82 81       	ldd	r24, Z+2	; 0x02
    4614:	93 81       	ldd	r25, Z+3	; 0x03
    4616:	20 e0       	ldi	r18, 0x00	; 0
    4618:	30 e0       	ldi	r19, 0x00	; 0
    461a:	40 e2       	ldi	r20, 0x20	; 32
    461c:	51 e4       	ldi	r21, 0x41	; 65
    461e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4622:	dc 01       	movw	r26, r24
    4624:	cb 01       	movw	r24, r22
    4626:	bc 01       	movw	r22, r24
    4628:	cd 01       	movw	r24, r26
    462a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    462e:	dc 01       	movw	r26, r24
    4630:	cb 01       	movw	r24, r22
    4632:	9e af       	std	Y+62, r25	; 0x3e
    4634:	8d af       	std	Y+61, r24	; 0x3d
    4636:	0f c0       	rjmp	.+30     	; 0x4656 <main+0x2e0>
    4638:	80 e9       	ldi	r24, 0x90	; 144
    463a:	91 e0       	ldi	r25, 0x01	; 1
    463c:	9c af       	std	Y+60, r25	; 0x3c
    463e:	8b af       	std	Y+59, r24	; 0x3b
    4640:	8b ad       	ldd	r24, Y+59	; 0x3b
    4642:	9c ad       	ldd	r25, Y+60	; 0x3c
    4644:	01 97       	sbiw	r24, 0x01	; 1
    4646:	f1 f7       	brne	.-4      	; 0x4644 <main+0x2ce>
    4648:	9c af       	std	Y+60, r25	; 0x3c
    464a:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    464c:	8d ad       	ldd	r24, Y+61	; 0x3d
    464e:	9e ad       	ldd	r25, Y+62	; 0x3e
    4650:	01 97       	sbiw	r24, 0x01	; 1
    4652:	9e af       	std	Y+62, r25	; 0x3e
    4654:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4656:	8d ad       	ldd	r24, Y+61	; 0x3d
    4658:	9e ad       	ldd	r25, Y+62	; 0x3e
    465a:	00 97       	sbiw	r24, 0x00	; 0
    465c:	69 f7       	brne	.-38     	; 0x4638 <main+0x2c2>
    465e:	16 c0       	rjmp	.+44     	; 0x468c <main+0x316>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4660:	fe 01       	movw	r30, r28
    4662:	ff 96       	adiw	r30, 0x3f	; 63
    4664:	60 81       	ld	r22, Z
    4666:	71 81       	ldd	r23, Z+1	; 0x01
    4668:	82 81       	ldd	r24, Z+2	; 0x02
    466a:	93 81       	ldd	r25, Z+3	; 0x03
    466c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4670:	dc 01       	movw	r26, r24
    4672:	cb 01       	movw	r24, r22
    4674:	9e af       	std	Y+62, r25	; 0x3e
    4676:	8d af       	std	Y+61, r24	; 0x3d
    4678:	8d ad       	ldd	r24, Y+61	; 0x3d
    467a:	9e ad       	ldd	r25, Y+62	; 0x3e
    467c:	9a af       	std	Y+58, r25	; 0x3a
    467e:	89 af       	std	Y+57, r24	; 0x39
    4680:	89 ad       	ldd	r24, Y+57	; 0x39
    4682:	9a ad       	ldd	r25, Y+58	; 0x3a
    4684:	01 97       	sbiw	r24, 0x01	; 1
    4686:	f1 f7       	brne	.-4      	; 0x4684 <main+0x30e>
    4688:	9a af       	std	Y+58, r25	; 0x3a
    468a:	89 af       	std	Y+57, r24	; 0x39
				_delay_ms(50);
				LCD_u8GoToXY(LCD_u8_LINE_2,Ball_Location);
    468c:	fe 01       	movw	r30, r28
    468e:	e7 5b       	subi	r30, 0xB7	; 183
    4690:	ff 4f       	sbci	r31, 0xFF	; 255
    4692:	90 81       	ld	r25, Z
    4694:	82 e0       	ldi	r24, 0x02	; 2
    4696:	69 2f       	mov	r22, r25
    4698:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
				LCD_voidSendChar(' ');
    469c:	80 e2       	ldi	r24, 0x20	; 32
    469e:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
				Ball_Location++;
    46a2:	de 01       	movw	r26, r28
    46a4:	a7 5b       	subi	r26, 0xB7	; 183
    46a6:	bf 4f       	sbci	r27, 0xFF	; 255
    46a8:	fe 01       	movw	r30, r28
    46aa:	e7 5b       	subi	r30, 0xB7	; 183
    46ac:	ff 4f       	sbci	r31, 0xFF	; 255
    46ae:	80 81       	ld	r24, Z
    46b0:	8f 5f       	subi	r24, 0xFF	; 255
    46b2:	8c 93       	st	X, r24
				KPD_u8GetKeyState(&KeyValue);
    46b4:	ce 01       	movw	r24, r28
    46b6:	86 5b       	subi	r24, 0xB6	; 182
    46b8:	9f 4f       	sbci	r25, 0xFF	; 255
    46ba:	0e 94 8f 0b 	call	0x171e	; 0x171e <KPD_u8GetKeyState>
		/*******************************************************************************************************/
		/**************************************First Line******************************************************/
		/*******************************************************************************************************/
		while( KeyValue != '2' && Ball_Location > 0 && Ball_Location < 19)
		{
			while(KeyValue != '2' && KeyValue != '4' && Ball_Location > 0 && Ball_Location < 19)
    46be:	fe 01       	movw	r30, r28
    46c0:	e6 5b       	subi	r30, 0xB6	; 182
    46c2:	ff 4f       	sbci	r31, 0xFF	; 255
    46c4:	80 81       	ld	r24, Z
    46c6:	82 33       	cpi	r24, 0x32	; 50
    46c8:	09 f4       	brne	.+2      	; 0x46cc <main+0x356>
    46ca:	ac c0       	rjmp	.+344    	; 0x4824 <main+0x4ae>
    46cc:	fe 01       	movw	r30, r28
    46ce:	e6 5b       	subi	r30, 0xB6	; 182
    46d0:	ff 4f       	sbci	r31, 0xFF	; 255
    46d2:	80 81       	ld	r24, Z
    46d4:	84 33       	cpi	r24, 0x34	; 52
    46d6:	09 f4       	brne	.+2      	; 0x46da <main+0x364>
    46d8:	a5 c0       	rjmp	.+330    	; 0x4824 <main+0x4ae>
    46da:	fe 01       	movw	r30, r28
    46dc:	e7 5b       	subi	r30, 0xB7	; 183
    46de:	ff 4f       	sbci	r31, 0xFF	; 255
    46e0:	80 81       	ld	r24, Z
    46e2:	18 16       	cp	r1, r24
    46e4:	0c f0       	brlt	.+2      	; 0x46e8 <main+0x372>
    46e6:	9e c0       	rjmp	.+316    	; 0x4824 <main+0x4ae>
    46e8:	fe 01       	movw	r30, r28
    46ea:	e7 5b       	subi	r30, 0xB7	; 183
    46ec:	ff 4f       	sbci	r31, 0xFF	; 255
    46ee:	80 81       	ld	r24, Z
    46f0:	83 31       	cpi	r24, 0x13	; 19
    46f2:	0c f4       	brge	.+2      	; 0x46f6 <main+0x380>
    46f4:	3b cf       	rjmp	.-394    	; 0x456c <main+0x1f6>
    46f6:	96 c0       	rjmp	.+300    	; 0x4824 <main+0x4ae>
			}


			while(KeyValue != '2' && KeyValue != '6' && Ball_Location > 0 && Ball_Location < 19)
			{
				LCD_u8GoToXY(LCD_u8_LINE_2,Ball_Location);
    46f8:	fe 01       	movw	r30, r28
    46fa:	e7 5b       	subi	r30, 0xB7	; 183
    46fc:	ff 4f       	sbci	r31, 0xFF	; 255
    46fe:	90 81       	ld	r25, Z
    4700:	82 e0       	ldi	r24, 0x02	; 2
    4702:	69 2f       	mov	r22, r25
    4704:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
				LCD_voidSendChar(1);
    4708:	81 e0       	ldi	r24, 0x01	; 1
    470a:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
    470e:	80 e0       	ldi	r24, 0x00	; 0
    4710:	90 e0       	ldi	r25, 0x00	; 0
    4712:	a8 e4       	ldi	r26, 0x48	; 72
    4714:	b2 e4       	ldi	r27, 0x42	; 66
    4716:	8d ab       	std	Y+53, r24	; 0x35
    4718:	9e ab       	std	Y+54, r25	; 0x36
    471a:	af ab       	std	Y+55, r26	; 0x37
    471c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    471e:	6d a9       	ldd	r22, Y+53	; 0x35
    4720:	7e a9       	ldd	r23, Y+54	; 0x36
    4722:	8f a9       	ldd	r24, Y+55	; 0x37
    4724:	98 ad       	ldd	r25, Y+56	; 0x38
    4726:	20 e0       	ldi	r18, 0x00	; 0
    4728:	30 e0       	ldi	r19, 0x00	; 0
    472a:	4a e7       	ldi	r20, 0x7A	; 122
    472c:	55 e4       	ldi	r21, 0x45	; 69
    472e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4732:	dc 01       	movw	r26, r24
    4734:	cb 01       	movw	r24, r22
    4736:	89 ab       	std	Y+49, r24	; 0x31
    4738:	9a ab       	std	Y+50, r25	; 0x32
    473a:	ab ab       	std	Y+51, r26	; 0x33
    473c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    473e:	69 a9       	ldd	r22, Y+49	; 0x31
    4740:	7a a9       	ldd	r23, Y+50	; 0x32
    4742:	8b a9       	ldd	r24, Y+51	; 0x33
    4744:	9c a9       	ldd	r25, Y+52	; 0x34
    4746:	20 e0       	ldi	r18, 0x00	; 0
    4748:	30 e0       	ldi	r19, 0x00	; 0
    474a:	40 e8       	ldi	r20, 0x80	; 128
    474c:	5f e3       	ldi	r21, 0x3F	; 63
    474e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4752:	88 23       	and	r24, r24
    4754:	2c f4       	brge	.+10     	; 0x4760 <main+0x3ea>
		__ticks = 1;
    4756:	81 e0       	ldi	r24, 0x01	; 1
    4758:	90 e0       	ldi	r25, 0x00	; 0
    475a:	98 ab       	std	Y+48, r25	; 0x30
    475c:	8f a7       	std	Y+47, r24	; 0x2f
    475e:	3f c0       	rjmp	.+126    	; 0x47de <main+0x468>
	else if (__tmp > 65535)
    4760:	69 a9       	ldd	r22, Y+49	; 0x31
    4762:	7a a9       	ldd	r23, Y+50	; 0x32
    4764:	8b a9       	ldd	r24, Y+51	; 0x33
    4766:	9c a9       	ldd	r25, Y+52	; 0x34
    4768:	20 e0       	ldi	r18, 0x00	; 0
    476a:	3f ef       	ldi	r19, 0xFF	; 255
    476c:	4f e7       	ldi	r20, 0x7F	; 127
    476e:	57 e4       	ldi	r21, 0x47	; 71
    4770:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4774:	18 16       	cp	r1, r24
    4776:	4c f5       	brge	.+82     	; 0x47ca <main+0x454>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4778:	6d a9       	ldd	r22, Y+53	; 0x35
    477a:	7e a9       	ldd	r23, Y+54	; 0x36
    477c:	8f a9       	ldd	r24, Y+55	; 0x37
    477e:	98 ad       	ldd	r25, Y+56	; 0x38
    4780:	20 e0       	ldi	r18, 0x00	; 0
    4782:	30 e0       	ldi	r19, 0x00	; 0
    4784:	40 e2       	ldi	r20, 0x20	; 32
    4786:	51 e4       	ldi	r21, 0x41	; 65
    4788:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    478c:	dc 01       	movw	r26, r24
    478e:	cb 01       	movw	r24, r22
    4790:	bc 01       	movw	r22, r24
    4792:	cd 01       	movw	r24, r26
    4794:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4798:	dc 01       	movw	r26, r24
    479a:	cb 01       	movw	r24, r22
    479c:	98 ab       	std	Y+48, r25	; 0x30
    479e:	8f a7       	std	Y+47, r24	; 0x2f
    47a0:	0f c0       	rjmp	.+30     	; 0x47c0 <main+0x44a>
    47a2:	80 e9       	ldi	r24, 0x90	; 144
    47a4:	91 e0       	ldi	r25, 0x01	; 1
    47a6:	9e a7       	std	Y+46, r25	; 0x2e
    47a8:	8d a7       	std	Y+45, r24	; 0x2d
    47aa:	8d a5       	ldd	r24, Y+45	; 0x2d
    47ac:	9e a5       	ldd	r25, Y+46	; 0x2e
    47ae:	01 97       	sbiw	r24, 0x01	; 1
    47b0:	f1 f7       	brne	.-4      	; 0x47ae <main+0x438>
    47b2:	9e a7       	std	Y+46, r25	; 0x2e
    47b4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47b6:	8f a5       	ldd	r24, Y+47	; 0x2f
    47b8:	98 a9       	ldd	r25, Y+48	; 0x30
    47ba:	01 97       	sbiw	r24, 0x01	; 1
    47bc:	98 ab       	std	Y+48, r25	; 0x30
    47be:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47c0:	8f a5       	ldd	r24, Y+47	; 0x2f
    47c2:	98 a9       	ldd	r25, Y+48	; 0x30
    47c4:	00 97       	sbiw	r24, 0x00	; 0
    47c6:	69 f7       	brne	.-38     	; 0x47a2 <main+0x42c>
    47c8:	14 c0       	rjmp	.+40     	; 0x47f2 <main+0x47c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47ca:	69 a9       	ldd	r22, Y+49	; 0x31
    47cc:	7a a9       	ldd	r23, Y+50	; 0x32
    47ce:	8b a9       	ldd	r24, Y+51	; 0x33
    47d0:	9c a9       	ldd	r25, Y+52	; 0x34
    47d2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    47d6:	dc 01       	movw	r26, r24
    47d8:	cb 01       	movw	r24, r22
    47da:	98 ab       	std	Y+48, r25	; 0x30
    47dc:	8f a7       	std	Y+47, r24	; 0x2f
    47de:	8f a5       	ldd	r24, Y+47	; 0x2f
    47e0:	98 a9       	ldd	r25, Y+48	; 0x30
    47e2:	9c a7       	std	Y+44, r25	; 0x2c
    47e4:	8b a7       	std	Y+43, r24	; 0x2b
    47e6:	8b a5       	ldd	r24, Y+43	; 0x2b
    47e8:	9c a5       	ldd	r25, Y+44	; 0x2c
    47ea:	01 97       	sbiw	r24, 0x01	; 1
    47ec:	f1 f7       	brne	.-4      	; 0x47ea <main+0x474>
    47ee:	9c a7       	std	Y+44, r25	; 0x2c
    47f0:	8b a7       	std	Y+43, r24	; 0x2b
				_delay_ms(50);
				LCD_u8GoToXY(LCD_u8_LINE_2,Ball_Location);
    47f2:	fe 01       	movw	r30, r28
    47f4:	e7 5b       	subi	r30, 0xB7	; 183
    47f6:	ff 4f       	sbci	r31, 0xFF	; 255
    47f8:	90 81       	ld	r25, Z
    47fa:	82 e0       	ldi	r24, 0x02	; 2
    47fc:	69 2f       	mov	r22, r25
    47fe:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
				LCD_voidSendChar(' ');
    4802:	80 e2       	ldi	r24, 0x20	; 32
    4804:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
				Ball_Location--;
    4808:	de 01       	movw	r26, r28
    480a:	a7 5b       	subi	r26, 0xB7	; 183
    480c:	bf 4f       	sbci	r27, 0xFF	; 255
    480e:	fe 01       	movw	r30, r28
    4810:	e7 5b       	subi	r30, 0xB7	; 183
    4812:	ff 4f       	sbci	r31, 0xFF	; 255
    4814:	80 81       	ld	r24, Z
    4816:	81 50       	subi	r24, 0x01	; 1
    4818:	8c 93       	st	X, r24
				KPD_u8GetKeyState(&KeyValue);
    481a:	ce 01       	movw	r24, r28
    481c:	86 5b       	subi	r24, 0xB6	; 182
    481e:	9f 4f       	sbci	r25, 0xFF	; 255
    4820:	0e 94 8f 0b 	call	0x171e	; 0x171e <KPD_u8GetKeyState>
				Ball_Location++;
				KPD_u8GetKeyState(&KeyValue);
			}


			while(KeyValue != '2' && KeyValue != '6' && Ball_Location > 0 && Ball_Location < 19)
    4824:	fe 01       	movw	r30, r28
    4826:	e6 5b       	subi	r30, 0xB6	; 182
    4828:	ff 4f       	sbci	r31, 0xFF	; 255
    482a:	80 81       	ld	r24, Z
    482c:	82 33       	cpi	r24, 0x32	; 50
    482e:	99 f0       	breq	.+38     	; 0x4856 <main+0x4e0>
    4830:	fe 01       	movw	r30, r28
    4832:	e6 5b       	subi	r30, 0xB6	; 182
    4834:	ff 4f       	sbci	r31, 0xFF	; 255
    4836:	80 81       	ld	r24, Z
    4838:	86 33       	cpi	r24, 0x36	; 54
    483a:	69 f0       	breq	.+26     	; 0x4856 <main+0x4e0>
    483c:	fe 01       	movw	r30, r28
    483e:	e7 5b       	subi	r30, 0xB7	; 183
    4840:	ff 4f       	sbci	r31, 0xFF	; 255
    4842:	80 81       	ld	r24, Z
    4844:	18 16       	cp	r1, r24
    4846:	3c f4       	brge	.+14     	; 0x4856 <main+0x4e0>
    4848:	fe 01       	movw	r30, r28
    484a:	e7 5b       	subi	r30, 0xB7	; 183
    484c:	ff 4f       	sbci	r31, 0xFF	; 255
    484e:	80 81       	ld	r24, Z
    4850:	83 31       	cpi	r24, 0x13	; 19
    4852:	0c f4       	brge	.+2      	; 0x4856 <main+0x4e0>
    4854:	51 cf       	rjmp	.-350    	; 0x46f8 <main+0x382>
	{
		KeyValue = KPD_u8_KEY_NOT_PRESSED;
		/*******************************************************************************************************/
		/**************************************First Line******************************************************/
		/*******************************************************************************************************/
		while( KeyValue != '2' && Ball_Location > 0 && Ball_Location < 19)
    4856:	fe 01       	movw	r30, r28
    4858:	e6 5b       	subi	r30, 0xB6	; 182
    485a:	ff 4f       	sbci	r31, 0xFF	; 255
    485c:	80 81       	ld	r24, Z
    485e:	82 33       	cpi	r24, 0x32	; 50
    4860:	09 f4       	brne	.+2      	; 0x4864 <main+0x4ee>
    4862:	71 c1       	rjmp	.+738    	; 0x4b46 <main+0x7d0>
    4864:	fe 01       	movw	r30, r28
    4866:	e7 5b       	subi	r30, 0xB7	; 183
    4868:	ff 4f       	sbci	r31, 0xFF	; 255
    486a:	80 81       	ld	r24, Z
    486c:	18 16       	cp	r1, r24
    486e:	0c f0       	brlt	.+2      	; 0x4872 <main+0x4fc>
    4870:	6a c1       	rjmp	.+724    	; 0x4b46 <main+0x7d0>
    4872:	fe 01       	movw	r30, r28
    4874:	e7 5b       	subi	r30, 0xB7	; 183
    4876:	ff 4f       	sbci	r31, 0xFF	; 255
    4878:	80 81       	ld	r24, Z
    487a:	83 31       	cpi	r24, 0x13	; 19
    487c:	0c f4       	brge	.+2      	; 0x4880 <main+0x50a>
    487e:	1f cf       	rjmp	.-450    	; 0x46be <main+0x348>
    4880:	62 c1       	rjmp	.+708    	; 0x4b46 <main+0x7d0>
		/*******************************************************************************************************/
		while( KeyValue != '8' && Ball_Location > 0 && Ball_Location < 19 )
		{
			while( KeyValue != '8' && KeyValue != '4' && Ball_Location > 0 && Ball_Location < 19 )
			{
				LCD_u8GoToXY(LCD_u8_LINE_3,Ball_Location);
    4882:	fe 01       	movw	r30, r28
    4884:	e7 5b       	subi	r30, 0xB7	; 183
    4886:	ff 4f       	sbci	r31, 0xFF	; 255
    4888:	90 81       	ld	r25, Z
    488a:	83 e0       	ldi	r24, 0x03	; 3
    488c:	69 2f       	mov	r22, r25
    488e:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
				LCD_voidSendChar(1);
    4892:	81 e0       	ldi	r24, 0x01	; 1
    4894:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
    4898:	80 e0       	ldi	r24, 0x00	; 0
    489a:	90 e0       	ldi	r25, 0x00	; 0
    489c:	a8 e4       	ldi	r26, 0x48	; 72
    489e:	b2 e4       	ldi	r27, 0x42	; 66
    48a0:	8f a3       	std	Y+39, r24	; 0x27
    48a2:	98 a7       	std	Y+40, r25	; 0x28
    48a4:	a9 a7       	std	Y+41, r26	; 0x29
    48a6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    48a8:	6f a1       	ldd	r22, Y+39	; 0x27
    48aa:	78 a5       	ldd	r23, Y+40	; 0x28
    48ac:	89 a5       	ldd	r24, Y+41	; 0x29
    48ae:	9a a5       	ldd	r25, Y+42	; 0x2a
    48b0:	20 e0       	ldi	r18, 0x00	; 0
    48b2:	30 e0       	ldi	r19, 0x00	; 0
    48b4:	4a e7       	ldi	r20, 0x7A	; 122
    48b6:	55 e4       	ldi	r21, 0x45	; 69
    48b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    48bc:	dc 01       	movw	r26, r24
    48be:	cb 01       	movw	r24, r22
    48c0:	8b a3       	std	Y+35, r24	; 0x23
    48c2:	9c a3       	std	Y+36, r25	; 0x24
    48c4:	ad a3       	std	Y+37, r26	; 0x25
    48c6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    48c8:	6b a1       	ldd	r22, Y+35	; 0x23
    48ca:	7c a1       	ldd	r23, Y+36	; 0x24
    48cc:	8d a1       	ldd	r24, Y+37	; 0x25
    48ce:	9e a1       	ldd	r25, Y+38	; 0x26
    48d0:	20 e0       	ldi	r18, 0x00	; 0
    48d2:	30 e0       	ldi	r19, 0x00	; 0
    48d4:	40 e8       	ldi	r20, 0x80	; 128
    48d6:	5f e3       	ldi	r21, 0x3F	; 63
    48d8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    48dc:	88 23       	and	r24, r24
    48de:	2c f4       	brge	.+10     	; 0x48ea <main+0x574>
		__ticks = 1;
    48e0:	81 e0       	ldi	r24, 0x01	; 1
    48e2:	90 e0       	ldi	r25, 0x00	; 0
    48e4:	9a a3       	std	Y+34, r25	; 0x22
    48e6:	89 a3       	std	Y+33, r24	; 0x21
    48e8:	3f c0       	rjmp	.+126    	; 0x4968 <main+0x5f2>
	else if (__tmp > 65535)
    48ea:	6b a1       	ldd	r22, Y+35	; 0x23
    48ec:	7c a1       	ldd	r23, Y+36	; 0x24
    48ee:	8d a1       	ldd	r24, Y+37	; 0x25
    48f0:	9e a1       	ldd	r25, Y+38	; 0x26
    48f2:	20 e0       	ldi	r18, 0x00	; 0
    48f4:	3f ef       	ldi	r19, 0xFF	; 255
    48f6:	4f e7       	ldi	r20, 0x7F	; 127
    48f8:	57 e4       	ldi	r21, 0x47	; 71
    48fa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    48fe:	18 16       	cp	r1, r24
    4900:	4c f5       	brge	.+82     	; 0x4954 <main+0x5de>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4902:	6f a1       	ldd	r22, Y+39	; 0x27
    4904:	78 a5       	ldd	r23, Y+40	; 0x28
    4906:	89 a5       	ldd	r24, Y+41	; 0x29
    4908:	9a a5       	ldd	r25, Y+42	; 0x2a
    490a:	20 e0       	ldi	r18, 0x00	; 0
    490c:	30 e0       	ldi	r19, 0x00	; 0
    490e:	40 e2       	ldi	r20, 0x20	; 32
    4910:	51 e4       	ldi	r21, 0x41	; 65
    4912:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4916:	dc 01       	movw	r26, r24
    4918:	cb 01       	movw	r24, r22
    491a:	bc 01       	movw	r22, r24
    491c:	cd 01       	movw	r24, r26
    491e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4922:	dc 01       	movw	r26, r24
    4924:	cb 01       	movw	r24, r22
    4926:	9a a3       	std	Y+34, r25	; 0x22
    4928:	89 a3       	std	Y+33, r24	; 0x21
    492a:	0f c0       	rjmp	.+30     	; 0x494a <main+0x5d4>
    492c:	80 e9       	ldi	r24, 0x90	; 144
    492e:	91 e0       	ldi	r25, 0x01	; 1
    4930:	98 a3       	std	Y+32, r25	; 0x20
    4932:	8f 8f       	std	Y+31, r24	; 0x1f
    4934:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4936:	98 a1       	ldd	r25, Y+32	; 0x20
    4938:	01 97       	sbiw	r24, 0x01	; 1
    493a:	f1 f7       	brne	.-4      	; 0x4938 <main+0x5c2>
    493c:	98 a3       	std	Y+32, r25	; 0x20
    493e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4940:	89 a1       	ldd	r24, Y+33	; 0x21
    4942:	9a a1       	ldd	r25, Y+34	; 0x22
    4944:	01 97       	sbiw	r24, 0x01	; 1
    4946:	9a a3       	std	Y+34, r25	; 0x22
    4948:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    494a:	89 a1       	ldd	r24, Y+33	; 0x21
    494c:	9a a1       	ldd	r25, Y+34	; 0x22
    494e:	00 97       	sbiw	r24, 0x00	; 0
    4950:	69 f7       	brne	.-38     	; 0x492c <main+0x5b6>
    4952:	14 c0       	rjmp	.+40     	; 0x497c <main+0x606>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4954:	6b a1       	ldd	r22, Y+35	; 0x23
    4956:	7c a1       	ldd	r23, Y+36	; 0x24
    4958:	8d a1       	ldd	r24, Y+37	; 0x25
    495a:	9e a1       	ldd	r25, Y+38	; 0x26
    495c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4960:	dc 01       	movw	r26, r24
    4962:	cb 01       	movw	r24, r22
    4964:	9a a3       	std	Y+34, r25	; 0x22
    4966:	89 a3       	std	Y+33, r24	; 0x21
    4968:	89 a1       	ldd	r24, Y+33	; 0x21
    496a:	9a a1       	ldd	r25, Y+34	; 0x22
    496c:	9e 8f       	std	Y+30, r25	; 0x1e
    496e:	8d 8f       	std	Y+29, r24	; 0x1d
    4970:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4972:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4974:	01 97       	sbiw	r24, 0x01	; 1
    4976:	f1 f7       	brne	.-4      	; 0x4974 <main+0x5fe>
    4978:	9e 8f       	std	Y+30, r25	; 0x1e
    497a:	8d 8f       	std	Y+29, r24	; 0x1d
				_delay_ms(50);
				LCD_u8GoToXY(LCD_u8_LINE_3,Ball_Location);
    497c:	fe 01       	movw	r30, r28
    497e:	e7 5b       	subi	r30, 0xB7	; 183
    4980:	ff 4f       	sbci	r31, 0xFF	; 255
    4982:	90 81       	ld	r25, Z
    4984:	83 e0       	ldi	r24, 0x03	; 3
    4986:	69 2f       	mov	r22, r25
    4988:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
				LCD_voidSendChar(' ');
    498c:	80 e2       	ldi	r24, 0x20	; 32
    498e:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
				Ball_Location++;
    4992:	de 01       	movw	r26, r28
    4994:	a7 5b       	subi	r26, 0xB7	; 183
    4996:	bf 4f       	sbci	r27, 0xFF	; 255
    4998:	fe 01       	movw	r30, r28
    499a:	e7 5b       	subi	r30, 0xB7	; 183
    499c:	ff 4f       	sbci	r31, 0xFF	; 255
    499e:	80 81       	ld	r24, Z
    49a0:	8f 5f       	subi	r24, 0xFF	; 255
    49a2:	8c 93       	st	X, r24
				KPD_u8GetKeyState(&KeyValue);
    49a4:	ce 01       	movw	r24, r28
    49a6:	86 5b       	subi	r24, 0xB6	; 182
    49a8:	9f 4f       	sbci	r25, 0xFF	; 255
    49aa:	0e 94 8f 0b 	call	0x171e	; 0x171e <KPD_u8GetKeyState>
		/*******************************************************************************************************/
		/**************************************Second Line******************************************************/
		/*******************************************************************************************************/
		while( KeyValue != '8' && Ball_Location > 0 && Ball_Location < 19 )
		{
			while( KeyValue != '8' && KeyValue != '4' && Ball_Location > 0 && Ball_Location < 19 )
    49ae:	fe 01       	movw	r30, r28
    49b0:	e6 5b       	subi	r30, 0xB6	; 182
    49b2:	ff 4f       	sbci	r31, 0xFF	; 255
    49b4:	80 81       	ld	r24, Z
    49b6:	88 33       	cpi	r24, 0x38	; 56
    49b8:	09 f4       	brne	.+2      	; 0x49bc <main+0x646>
    49ba:	ac c0       	rjmp	.+344    	; 0x4b14 <main+0x79e>
    49bc:	fe 01       	movw	r30, r28
    49be:	e6 5b       	subi	r30, 0xB6	; 182
    49c0:	ff 4f       	sbci	r31, 0xFF	; 255
    49c2:	80 81       	ld	r24, Z
    49c4:	84 33       	cpi	r24, 0x34	; 52
    49c6:	09 f4       	brne	.+2      	; 0x49ca <main+0x654>
    49c8:	a5 c0       	rjmp	.+330    	; 0x4b14 <main+0x79e>
    49ca:	fe 01       	movw	r30, r28
    49cc:	e7 5b       	subi	r30, 0xB7	; 183
    49ce:	ff 4f       	sbci	r31, 0xFF	; 255
    49d0:	80 81       	ld	r24, Z
    49d2:	18 16       	cp	r1, r24
    49d4:	0c f0       	brlt	.+2      	; 0x49d8 <main+0x662>
    49d6:	9e c0       	rjmp	.+316    	; 0x4b14 <main+0x79e>
    49d8:	fe 01       	movw	r30, r28
    49da:	e7 5b       	subi	r30, 0xB7	; 183
    49dc:	ff 4f       	sbci	r31, 0xFF	; 255
    49de:	80 81       	ld	r24, Z
    49e0:	83 31       	cpi	r24, 0x13	; 19
    49e2:	0c f4       	brge	.+2      	; 0x49e6 <main+0x670>
    49e4:	4e cf       	rjmp	.-356    	; 0x4882 <main+0x50c>
    49e6:	96 c0       	rjmp	.+300    	; 0x4b14 <main+0x79e>
				KPD_u8GetKeyState(&KeyValue);
			}

			while( KeyValue != '8' && KeyValue != '6' && Ball_Location > 0 && Ball_Location < 19 )
			{
				LCD_u8GoToXY(LCD_u8_LINE_3,Ball_Location);
    49e8:	fe 01       	movw	r30, r28
    49ea:	e7 5b       	subi	r30, 0xB7	; 183
    49ec:	ff 4f       	sbci	r31, 0xFF	; 255
    49ee:	90 81       	ld	r25, Z
    49f0:	83 e0       	ldi	r24, 0x03	; 3
    49f2:	69 2f       	mov	r22, r25
    49f4:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
				LCD_voidSendChar(1);
    49f8:	81 e0       	ldi	r24, 0x01	; 1
    49fa:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
    49fe:	80 e0       	ldi	r24, 0x00	; 0
    4a00:	90 e0       	ldi	r25, 0x00	; 0
    4a02:	a8 e4       	ldi	r26, 0x48	; 72
    4a04:	b2 e4       	ldi	r27, 0x42	; 66
    4a06:	89 8f       	std	Y+25, r24	; 0x19
    4a08:	9a 8f       	std	Y+26, r25	; 0x1a
    4a0a:	ab 8f       	std	Y+27, r26	; 0x1b
    4a0c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4a0e:	69 8d       	ldd	r22, Y+25	; 0x19
    4a10:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4a12:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4a14:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4a16:	20 e0       	ldi	r18, 0x00	; 0
    4a18:	30 e0       	ldi	r19, 0x00	; 0
    4a1a:	4a e7       	ldi	r20, 0x7A	; 122
    4a1c:	55 e4       	ldi	r21, 0x45	; 69
    4a1e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4a22:	dc 01       	movw	r26, r24
    4a24:	cb 01       	movw	r24, r22
    4a26:	8d 8b       	std	Y+21, r24	; 0x15
    4a28:	9e 8b       	std	Y+22, r25	; 0x16
    4a2a:	af 8b       	std	Y+23, r26	; 0x17
    4a2c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4a2e:	6d 89       	ldd	r22, Y+21	; 0x15
    4a30:	7e 89       	ldd	r23, Y+22	; 0x16
    4a32:	8f 89       	ldd	r24, Y+23	; 0x17
    4a34:	98 8d       	ldd	r25, Y+24	; 0x18
    4a36:	20 e0       	ldi	r18, 0x00	; 0
    4a38:	30 e0       	ldi	r19, 0x00	; 0
    4a3a:	40 e8       	ldi	r20, 0x80	; 128
    4a3c:	5f e3       	ldi	r21, 0x3F	; 63
    4a3e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4a42:	88 23       	and	r24, r24
    4a44:	2c f4       	brge	.+10     	; 0x4a50 <main+0x6da>
		__ticks = 1;
    4a46:	81 e0       	ldi	r24, 0x01	; 1
    4a48:	90 e0       	ldi	r25, 0x00	; 0
    4a4a:	9c 8b       	std	Y+20, r25	; 0x14
    4a4c:	8b 8b       	std	Y+19, r24	; 0x13
    4a4e:	3f c0       	rjmp	.+126    	; 0x4ace <main+0x758>
	else if (__tmp > 65535)
    4a50:	6d 89       	ldd	r22, Y+21	; 0x15
    4a52:	7e 89       	ldd	r23, Y+22	; 0x16
    4a54:	8f 89       	ldd	r24, Y+23	; 0x17
    4a56:	98 8d       	ldd	r25, Y+24	; 0x18
    4a58:	20 e0       	ldi	r18, 0x00	; 0
    4a5a:	3f ef       	ldi	r19, 0xFF	; 255
    4a5c:	4f e7       	ldi	r20, 0x7F	; 127
    4a5e:	57 e4       	ldi	r21, 0x47	; 71
    4a60:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4a64:	18 16       	cp	r1, r24
    4a66:	4c f5       	brge	.+82     	; 0x4aba <main+0x744>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a68:	69 8d       	ldd	r22, Y+25	; 0x19
    4a6a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4a6c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4a6e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4a70:	20 e0       	ldi	r18, 0x00	; 0
    4a72:	30 e0       	ldi	r19, 0x00	; 0
    4a74:	40 e2       	ldi	r20, 0x20	; 32
    4a76:	51 e4       	ldi	r21, 0x41	; 65
    4a78:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4a7c:	dc 01       	movw	r26, r24
    4a7e:	cb 01       	movw	r24, r22
    4a80:	bc 01       	movw	r22, r24
    4a82:	cd 01       	movw	r24, r26
    4a84:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a88:	dc 01       	movw	r26, r24
    4a8a:	cb 01       	movw	r24, r22
    4a8c:	9c 8b       	std	Y+20, r25	; 0x14
    4a8e:	8b 8b       	std	Y+19, r24	; 0x13
    4a90:	0f c0       	rjmp	.+30     	; 0x4ab0 <main+0x73a>
    4a92:	80 e9       	ldi	r24, 0x90	; 144
    4a94:	91 e0       	ldi	r25, 0x01	; 1
    4a96:	9a 8b       	std	Y+18, r25	; 0x12
    4a98:	89 8b       	std	Y+17, r24	; 0x11
    4a9a:	89 89       	ldd	r24, Y+17	; 0x11
    4a9c:	9a 89       	ldd	r25, Y+18	; 0x12
    4a9e:	01 97       	sbiw	r24, 0x01	; 1
    4aa0:	f1 f7       	brne	.-4      	; 0x4a9e <main+0x728>
    4aa2:	9a 8b       	std	Y+18, r25	; 0x12
    4aa4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4aa6:	8b 89       	ldd	r24, Y+19	; 0x13
    4aa8:	9c 89       	ldd	r25, Y+20	; 0x14
    4aaa:	01 97       	sbiw	r24, 0x01	; 1
    4aac:	9c 8b       	std	Y+20, r25	; 0x14
    4aae:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ab0:	8b 89       	ldd	r24, Y+19	; 0x13
    4ab2:	9c 89       	ldd	r25, Y+20	; 0x14
    4ab4:	00 97       	sbiw	r24, 0x00	; 0
    4ab6:	69 f7       	brne	.-38     	; 0x4a92 <main+0x71c>
    4ab8:	14 c0       	rjmp	.+40     	; 0x4ae2 <main+0x76c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4aba:	6d 89       	ldd	r22, Y+21	; 0x15
    4abc:	7e 89       	ldd	r23, Y+22	; 0x16
    4abe:	8f 89       	ldd	r24, Y+23	; 0x17
    4ac0:	98 8d       	ldd	r25, Y+24	; 0x18
    4ac2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4ac6:	dc 01       	movw	r26, r24
    4ac8:	cb 01       	movw	r24, r22
    4aca:	9c 8b       	std	Y+20, r25	; 0x14
    4acc:	8b 8b       	std	Y+19, r24	; 0x13
    4ace:	8b 89       	ldd	r24, Y+19	; 0x13
    4ad0:	9c 89       	ldd	r25, Y+20	; 0x14
    4ad2:	98 8b       	std	Y+16, r25	; 0x10
    4ad4:	8f 87       	std	Y+15, r24	; 0x0f
    4ad6:	8f 85       	ldd	r24, Y+15	; 0x0f
    4ad8:	98 89       	ldd	r25, Y+16	; 0x10
    4ada:	01 97       	sbiw	r24, 0x01	; 1
    4adc:	f1 f7       	brne	.-4      	; 0x4ada <main+0x764>
    4ade:	98 8b       	std	Y+16, r25	; 0x10
    4ae0:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(50);
				LCD_u8GoToXY(LCD_u8_LINE_3,Ball_Location);
    4ae2:	fe 01       	movw	r30, r28
    4ae4:	e7 5b       	subi	r30, 0xB7	; 183
    4ae6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ae8:	90 81       	ld	r25, Z
    4aea:	83 e0       	ldi	r24, 0x03	; 3
    4aec:	69 2f       	mov	r22, r25
    4aee:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
				LCD_voidSendChar(' ');
    4af2:	80 e2       	ldi	r24, 0x20	; 32
    4af4:	0e 94 59 1c 	call	0x38b2	; 0x38b2 <LCD_voidSendChar>
				Ball_Location--;
    4af8:	de 01       	movw	r26, r28
    4afa:	a7 5b       	subi	r26, 0xB7	; 183
    4afc:	bf 4f       	sbci	r27, 0xFF	; 255
    4afe:	fe 01       	movw	r30, r28
    4b00:	e7 5b       	subi	r30, 0xB7	; 183
    4b02:	ff 4f       	sbci	r31, 0xFF	; 255
    4b04:	80 81       	ld	r24, Z
    4b06:	81 50       	subi	r24, 0x01	; 1
    4b08:	8c 93       	st	X, r24
				KPD_u8GetKeyState(&KeyValue);
    4b0a:	ce 01       	movw	r24, r28
    4b0c:	86 5b       	subi	r24, 0xB6	; 182
    4b0e:	9f 4f       	sbci	r25, 0xFF	; 255
    4b10:	0e 94 8f 0b 	call	0x171e	; 0x171e <KPD_u8GetKeyState>
				LCD_voidSendChar(' ');
				Ball_Location++;
				KPD_u8GetKeyState(&KeyValue);
			}

			while( KeyValue != '8' && KeyValue != '6' && Ball_Location > 0 && Ball_Location < 19 )
    4b14:	fe 01       	movw	r30, r28
    4b16:	e6 5b       	subi	r30, 0xB6	; 182
    4b18:	ff 4f       	sbci	r31, 0xFF	; 255
    4b1a:	80 81       	ld	r24, Z
    4b1c:	88 33       	cpi	r24, 0x38	; 56
    4b1e:	99 f0       	breq	.+38     	; 0x4b46 <main+0x7d0>
    4b20:	fe 01       	movw	r30, r28
    4b22:	e6 5b       	subi	r30, 0xB6	; 182
    4b24:	ff 4f       	sbci	r31, 0xFF	; 255
    4b26:	80 81       	ld	r24, Z
    4b28:	86 33       	cpi	r24, 0x36	; 54
    4b2a:	69 f0       	breq	.+26     	; 0x4b46 <main+0x7d0>
    4b2c:	fe 01       	movw	r30, r28
    4b2e:	e7 5b       	subi	r30, 0xB7	; 183
    4b30:	ff 4f       	sbci	r31, 0xFF	; 255
    4b32:	80 81       	ld	r24, Z
    4b34:	18 16       	cp	r1, r24
    4b36:	3c f4       	brge	.+14     	; 0x4b46 <main+0x7d0>
    4b38:	fe 01       	movw	r30, r28
    4b3a:	e7 5b       	subi	r30, 0xB7	; 183
    4b3c:	ff 4f       	sbci	r31, 0xFF	; 255
    4b3e:	80 81       	ld	r24, Z
    4b40:	83 31       	cpi	r24, 0x13	; 19
    4b42:	0c f4       	brge	.+2      	; 0x4b46 <main+0x7d0>
    4b44:	51 cf       	rjmp	.-350    	; 0x49e8 <main+0x672>

		}
		/*******************************************************************************************************/
		/**************************************Second Line******************************************************/
		/*******************************************************************************************************/
		while( KeyValue != '8' && Ball_Location > 0 && Ball_Location < 19 )
    4b46:	fe 01       	movw	r30, r28
    4b48:	e6 5b       	subi	r30, 0xB6	; 182
    4b4a:	ff 4f       	sbci	r31, 0xFF	; 255
    4b4c:	80 81       	ld	r24, Z
    4b4e:	88 33       	cpi	r24, 0x38	; 56
    4b50:	69 f0       	breq	.+26     	; 0x4b6c <main+0x7f6>
    4b52:	fe 01       	movw	r30, r28
    4b54:	e7 5b       	subi	r30, 0xB7	; 183
    4b56:	ff 4f       	sbci	r31, 0xFF	; 255
    4b58:	80 81       	ld	r24, Z
    4b5a:	18 16       	cp	r1, r24
    4b5c:	3c f4       	brge	.+14     	; 0x4b6c <main+0x7f6>
    4b5e:	fe 01       	movw	r30, r28
    4b60:	e7 5b       	subi	r30, 0xB7	; 183
    4b62:	ff 4f       	sbci	r31, 0xFF	; 255
    4b64:	80 81       	ld	r24, Z
    4b66:	83 31       	cpi	r24, 0x13	; 19
    4b68:	0c f4       	brge	.+2      	; 0x4b6c <main+0x7f6>
    4b6a:	21 cf       	rjmp	.-446    	; 0x49ae <main+0x638>
		}

		/*******************************************************************************************************/
		/*****************************************Gameover******************************************************/
		/*******************************************************************************************************/
		if(Ball_Location == 0 || Ball_Location == 19)
    4b6c:	fe 01       	movw	r30, r28
    4b6e:	e7 5b       	subi	r30, 0xB7	; 183
    4b70:	ff 4f       	sbci	r31, 0xFF	; 255
    4b72:	80 81       	ld	r24, Z
    4b74:	88 23       	and	r24, r24
    4b76:	39 f0       	breq	.+14     	; 0x4b86 <main+0x810>
    4b78:	fe 01       	movw	r30, r28
    4b7a:	e7 5b       	subi	r30, 0xB7	; 183
    4b7c:	ff 4f       	sbci	r31, 0xFF	; 255
    4b7e:	80 81       	ld	r24, Z
    4b80:	83 31       	cpi	r24, 0x13	; 19
    4b82:	09 f0       	breq	.+2      	; 0x4b86 <main+0x810>
    4b84:	ed cc       	rjmp	.-1574   	; 0x4560 <main+0x1ea>
		{
			LCD_u8GoToXY(LCD_u8_LINE_2,6);
    4b86:	82 e0       	ldi	r24, 0x02	; 2
    4b88:	66 e0       	ldi	r22, 0x06	; 6
    4b8a:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
			LCD_voidSendStr("GAMEOVER");
    4b8e:	80 e6       	ldi	r24, 0x60	; 96
    4b90:	90 e0       	ldi	r25, 0x00	; 0
    4b92:	0e 94 a4 1e 	call	0x3d48	; 0x3d48 <LCD_voidSendStr>
			LCD_u8GoToXY(LCD_u8_LINE_3,6);
    4b96:	83 e0       	ldi	r24, 0x03	; 3
    4b98:	66 e0       	ldi	r22, 0x06	; 6
    4b9a:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
			LCD_voidSendStr("TRYAGAIN");
    4b9e:	89 e6       	ldi	r24, 0x69	; 105
    4ba0:	90 e0       	ldi	r25, 0x00	; 0
    4ba2:	0e 94 a4 1e 	call	0x3d48	; 0x3d48 <LCD_voidSendStr>
    4ba6:	80 e0       	ldi	r24, 0x00	; 0
    4ba8:	90 e0       	ldi	r25, 0x00	; 0
    4baa:	aa ef       	ldi	r26, 0xFA	; 250
    4bac:	b4 e4       	ldi	r27, 0x44	; 68
    4bae:	8b 87       	std	Y+11, r24	; 0x0b
    4bb0:	9c 87       	std	Y+12, r25	; 0x0c
    4bb2:	ad 87       	std	Y+13, r26	; 0x0d
    4bb4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4bb6:	6b 85       	ldd	r22, Y+11	; 0x0b
    4bb8:	7c 85       	ldd	r23, Y+12	; 0x0c
    4bba:	8d 85       	ldd	r24, Y+13	; 0x0d
    4bbc:	9e 85       	ldd	r25, Y+14	; 0x0e
    4bbe:	20 e0       	ldi	r18, 0x00	; 0
    4bc0:	30 e0       	ldi	r19, 0x00	; 0
    4bc2:	4a e7       	ldi	r20, 0x7A	; 122
    4bc4:	55 e4       	ldi	r21, 0x45	; 69
    4bc6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4bca:	dc 01       	movw	r26, r24
    4bcc:	cb 01       	movw	r24, r22
    4bce:	8f 83       	std	Y+7, r24	; 0x07
    4bd0:	98 87       	std	Y+8, r25	; 0x08
    4bd2:	a9 87       	std	Y+9, r26	; 0x09
    4bd4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4bd6:	6f 81       	ldd	r22, Y+7	; 0x07
    4bd8:	78 85       	ldd	r23, Y+8	; 0x08
    4bda:	89 85       	ldd	r24, Y+9	; 0x09
    4bdc:	9a 85       	ldd	r25, Y+10	; 0x0a
    4bde:	20 e0       	ldi	r18, 0x00	; 0
    4be0:	30 e0       	ldi	r19, 0x00	; 0
    4be2:	40 e8       	ldi	r20, 0x80	; 128
    4be4:	5f e3       	ldi	r21, 0x3F	; 63
    4be6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4bea:	88 23       	and	r24, r24
    4bec:	2c f4       	brge	.+10     	; 0x4bf8 <main+0x882>
		__ticks = 1;
    4bee:	81 e0       	ldi	r24, 0x01	; 1
    4bf0:	90 e0       	ldi	r25, 0x00	; 0
    4bf2:	9e 83       	std	Y+6, r25	; 0x06
    4bf4:	8d 83       	std	Y+5, r24	; 0x05
    4bf6:	3f c0       	rjmp	.+126    	; 0x4c76 <main+0x900>
	else if (__tmp > 65535)
    4bf8:	6f 81       	ldd	r22, Y+7	; 0x07
    4bfa:	78 85       	ldd	r23, Y+8	; 0x08
    4bfc:	89 85       	ldd	r24, Y+9	; 0x09
    4bfe:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c00:	20 e0       	ldi	r18, 0x00	; 0
    4c02:	3f ef       	ldi	r19, 0xFF	; 255
    4c04:	4f e7       	ldi	r20, 0x7F	; 127
    4c06:	57 e4       	ldi	r21, 0x47	; 71
    4c08:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4c0c:	18 16       	cp	r1, r24
    4c0e:	4c f5       	brge	.+82     	; 0x4c62 <main+0x8ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4c10:	6b 85       	ldd	r22, Y+11	; 0x0b
    4c12:	7c 85       	ldd	r23, Y+12	; 0x0c
    4c14:	8d 85       	ldd	r24, Y+13	; 0x0d
    4c16:	9e 85       	ldd	r25, Y+14	; 0x0e
    4c18:	20 e0       	ldi	r18, 0x00	; 0
    4c1a:	30 e0       	ldi	r19, 0x00	; 0
    4c1c:	40 e2       	ldi	r20, 0x20	; 32
    4c1e:	51 e4       	ldi	r21, 0x41	; 65
    4c20:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4c24:	dc 01       	movw	r26, r24
    4c26:	cb 01       	movw	r24, r22
    4c28:	bc 01       	movw	r22, r24
    4c2a:	cd 01       	movw	r24, r26
    4c2c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4c30:	dc 01       	movw	r26, r24
    4c32:	cb 01       	movw	r24, r22
    4c34:	9e 83       	std	Y+6, r25	; 0x06
    4c36:	8d 83       	std	Y+5, r24	; 0x05
    4c38:	0f c0       	rjmp	.+30     	; 0x4c58 <main+0x8e2>
    4c3a:	80 e9       	ldi	r24, 0x90	; 144
    4c3c:	91 e0       	ldi	r25, 0x01	; 1
    4c3e:	9c 83       	std	Y+4, r25	; 0x04
    4c40:	8b 83       	std	Y+3, r24	; 0x03
    4c42:	8b 81       	ldd	r24, Y+3	; 0x03
    4c44:	9c 81       	ldd	r25, Y+4	; 0x04
    4c46:	01 97       	sbiw	r24, 0x01	; 1
    4c48:	f1 f7       	brne	.-4      	; 0x4c46 <main+0x8d0>
    4c4a:	9c 83       	std	Y+4, r25	; 0x04
    4c4c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c4e:	8d 81       	ldd	r24, Y+5	; 0x05
    4c50:	9e 81       	ldd	r25, Y+6	; 0x06
    4c52:	01 97       	sbiw	r24, 0x01	; 1
    4c54:	9e 83       	std	Y+6, r25	; 0x06
    4c56:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c58:	8d 81       	ldd	r24, Y+5	; 0x05
    4c5a:	9e 81       	ldd	r25, Y+6	; 0x06
    4c5c:	00 97       	sbiw	r24, 0x00	; 0
    4c5e:	69 f7       	brne	.-38     	; 0x4c3a <main+0x8c4>
    4c60:	14 c0       	rjmp	.+40     	; 0x4c8a <main+0x914>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c62:	6f 81       	ldd	r22, Y+7	; 0x07
    4c64:	78 85       	ldd	r23, Y+8	; 0x08
    4c66:	89 85       	ldd	r24, Y+9	; 0x09
    4c68:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c6a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4c6e:	dc 01       	movw	r26, r24
    4c70:	cb 01       	movw	r24, r22
    4c72:	9e 83       	std	Y+6, r25	; 0x06
    4c74:	8d 83       	std	Y+5, r24	; 0x05
    4c76:	8d 81       	ldd	r24, Y+5	; 0x05
    4c78:	9e 81       	ldd	r25, Y+6	; 0x06
    4c7a:	9a 83       	std	Y+2, r25	; 0x02
    4c7c:	89 83       	std	Y+1, r24	; 0x01
    4c7e:	89 81       	ldd	r24, Y+1	; 0x01
    4c80:	9a 81       	ldd	r25, Y+2	; 0x02
    4c82:	01 97       	sbiw	r24, 0x01	; 1
    4c84:	f1 f7       	brne	.-4      	; 0x4c82 <main+0x90c>
    4c86:	9a 83       	std	Y+2, r25	; 0x02
    4c88:	89 83       	std	Y+1, r24	; 0x01

			_delay_ms(2000);

			LCD_u8GoToXY(LCD_u8_LINE_2,6);
    4c8a:	82 e0       	ldi	r24, 0x02	; 2
    4c8c:	66 e0       	ldi	r22, 0x06	; 6
    4c8e:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
			LCD_voidSendStr("        ");
    4c92:	82 e7       	ldi	r24, 0x72	; 114
    4c94:	90 e0       	ldi	r25, 0x00	; 0
    4c96:	0e 94 a4 1e 	call	0x3d48	; 0x3d48 <LCD_voidSendStr>
			LCD_u8GoToXY(LCD_u8_LINE_3,6);
    4c9a:	83 e0       	ldi	r24, 0x03	; 3
    4c9c:	66 e0       	ldi	r22, 0x06	; 6
    4c9e:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <LCD_u8GoToXY>
			LCD_voidSendStr("         ");
    4ca2:	8b e7       	ldi	r24, 0x7B	; 123
    4ca4:	90 e0       	ldi	r25, 0x00	; 0
    4ca6:	0e 94 a4 1e 	call	0x3d48	; 0x3d48 <LCD_voidSendStr>


			Ball_Location = 1;
    4caa:	fe 01       	movw	r30, r28
    4cac:	e7 5b       	subi	r30, 0xB7	; 183
    4cae:	ff 4f       	sbci	r31, 0xFF	; 255
    4cb0:	81 e0       	ldi	r24, 0x01	; 1
    4cb2:	80 83       	st	Z, r24
			KeyValue = KPD_u8_KEY_NOT_PRESSED;
    4cb4:	fe 01       	movw	r30, r28
    4cb6:	e6 5b       	subi	r30, 0xB6	; 182
    4cb8:	ff 4f       	sbci	r31, 0xFF	; 255
    4cba:	8f ef       	ldi	r24, 0xFF	; 255
    4cbc:	80 83       	st	Z, r24
    4cbe:	50 cc       	rjmp	.-1888   	; 0x4560 <main+0x1ea>

00004cc0 <__udivmodsi4>:
    4cc0:	a1 e2       	ldi	r26, 0x21	; 33
    4cc2:	1a 2e       	mov	r1, r26
    4cc4:	aa 1b       	sub	r26, r26
    4cc6:	bb 1b       	sub	r27, r27
    4cc8:	fd 01       	movw	r30, r26
    4cca:	0d c0       	rjmp	.+26     	; 0x4ce6 <__udivmodsi4_ep>

00004ccc <__udivmodsi4_loop>:
    4ccc:	aa 1f       	adc	r26, r26
    4cce:	bb 1f       	adc	r27, r27
    4cd0:	ee 1f       	adc	r30, r30
    4cd2:	ff 1f       	adc	r31, r31
    4cd4:	a2 17       	cp	r26, r18
    4cd6:	b3 07       	cpc	r27, r19
    4cd8:	e4 07       	cpc	r30, r20
    4cda:	f5 07       	cpc	r31, r21
    4cdc:	20 f0       	brcs	.+8      	; 0x4ce6 <__udivmodsi4_ep>
    4cde:	a2 1b       	sub	r26, r18
    4ce0:	b3 0b       	sbc	r27, r19
    4ce2:	e4 0b       	sbc	r30, r20
    4ce4:	f5 0b       	sbc	r31, r21

00004ce6 <__udivmodsi4_ep>:
    4ce6:	66 1f       	adc	r22, r22
    4ce8:	77 1f       	adc	r23, r23
    4cea:	88 1f       	adc	r24, r24
    4cec:	99 1f       	adc	r25, r25
    4cee:	1a 94       	dec	r1
    4cf0:	69 f7       	brne	.-38     	; 0x4ccc <__udivmodsi4_loop>
    4cf2:	60 95       	com	r22
    4cf4:	70 95       	com	r23
    4cf6:	80 95       	com	r24
    4cf8:	90 95       	com	r25
    4cfa:	9b 01       	movw	r18, r22
    4cfc:	ac 01       	movw	r20, r24
    4cfe:	bd 01       	movw	r22, r26
    4d00:	cf 01       	movw	r24, r30
    4d02:	08 95       	ret

00004d04 <__prologue_saves__>:
    4d04:	2f 92       	push	r2
    4d06:	3f 92       	push	r3
    4d08:	4f 92       	push	r4
    4d0a:	5f 92       	push	r5
    4d0c:	6f 92       	push	r6
    4d0e:	7f 92       	push	r7
    4d10:	8f 92       	push	r8
    4d12:	9f 92       	push	r9
    4d14:	af 92       	push	r10
    4d16:	bf 92       	push	r11
    4d18:	cf 92       	push	r12
    4d1a:	df 92       	push	r13
    4d1c:	ef 92       	push	r14
    4d1e:	ff 92       	push	r15
    4d20:	0f 93       	push	r16
    4d22:	1f 93       	push	r17
    4d24:	cf 93       	push	r28
    4d26:	df 93       	push	r29
    4d28:	cd b7       	in	r28, 0x3d	; 61
    4d2a:	de b7       	in	r29, 0x3e	; 62
    4d2c:	ca 1b       	sub	r28, r26
    4d2e:	db 0b       	sbc	r29, r27
    4d30:	0f b6       	in	r0, 0x3f	; 63
    4d32:	f8 94       	cli
    4d34:	de bf       	out	0x3e, r29	; 62
    4d36:	0f be       	out	0x3f, r0	; 63
    4d38:	cd bf       	out	0x3d, r28	; 61
    4d3a:	09 94       	ijmp

00004d3c <__epilogue_restores__>:
    4d3c:	2a 88       	ldd	r2, Y+18	; 0x12
    4d3e:	39 88       	ldd	r3, Y+17	; 0x11
    4d40:	48 88       	ldd	r4, Y+16	; 0x10
    4d42:	5f 84       	ldd	r5, Y+15	; 0x0f
    4d44:	6e 84       	ldd	r6, Y+14	; 0x0e
    4d46:	7d 84       	ldd	r7, Y+13	; 0x0d
    4d48:	8c 84       	ldd	r8, Y+12	; 0x0c
    4d4a:	9b 84       	ldd	r9, Y+11	; 0x0b
    4d4c:	aa 84       	ldd	r10, Y+10	; 0x0a
    4d4e:	b9 84       	ldd	r11, Y+9	; 0x09
    4d50:	c8 84       	ldd	r12, Y+8	; 0x08
    4d52:	df 80       	ldd	r13, Y+7	; 0x07
    4d54:	ee 80       	ldd	r14, Y+6	; 0x06
    4d56:	fd 80       	ldd	r15, Y+5	; 0x05
    4d58:	0c 81       	ldd	r16, Y+4	; 0x04
    4d5a:	1b 81       	ldd	r17, Y+3	; 0x03
    4d5c:	aa 81       	ldd	r26, Y+2	; 0x02
    4d5e:	b9 81       	ldd	r27, Y+1	; 0x01
    4d60:	ce 0f       	add	r28, r30
    4d62:	d1 1d       	adc	r29, r1
    4d64:	0f b6       	in	r0, 0x3f	; 63
    4d66:	f8 94       	cli
    4d68:	de bf       	out	0x3e, r29	; 62
    4d6a:	0f be       	out	0x3f, r0	; 63
    4d6c:	cd bf       	out	0x3d, r28	; 61
    4d6e:	ed 01       	movw	r28, r26
    4d70:	08 95       	ret

00004d72 <_exit>:
    4d72:	f8 94       	cli

00004d74 <__stop_program>:
    4d74:	ff cf       	rjmp	.-2      	; 0x4d74 <__stop_program>
